--------------- /leonardo/prod/opt/modulefiles/deeplrn/libraries ---------------
cineca-ai/3.0.0  cineca-ai/4.0.0  cineca-ai/4.1.1(default)  
cineca-ai/3.0.1  cineca-ai/4.1.0  cineca-ai/4.3.0           

Key:
(symbolic-version)  
BLOCKS:  {'b0': {'arch': 'CNN', 'preset': 'softkrotov-c96-k5-p2-s1-d1-b0-t1-lr0.08-lp0.5-e0', 'operation': 'batchnorm2d', 'num': 0, 'batch_norm': False, 'pool': {'type': 'avg', 'kernel_size': 4, 'stride': 2, 'padding': 1}, 'activation': {'function': 'triangle', 'param': 0.7}, 'resume': None, 'layer': {'arch': 'CNN', 'nb_train': None, 'lr': 0.08, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 1.0, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 2, 'weight_init': 'positive', 'weight_init_range': 2, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 96, 'kernel_size': 5}}, 'b1': {'arch': 'MLP', 'preset': 'BP-c10', 'operation': 'flatten', 'num': 1, 'att_dropout': None, 'dropout': 0.5, 'layer': {'arch': 'MLP', 'lr': 0.05, 'adaptive': True, 'lr_sup': 0.001, 'speed': 0.4, 'lr_div': 100, 'lebesgue_p': 2, 't_invert': 10, 'beta': 0.01, 'power': 4.5, 'ranking_param': 3, 'delta': 0.1, 'hebbian': False, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'lr_bias': 600, 'softness': 'soft', 'soft_activation_fn': 'exp', 'plasticity': 'SoftHebb', 'metric_mode': 'unsupervised', 'weight_init': 'positive', 'weight_init_range': 0.25, 'weight_init_offset': 0, 'weight_decay': 0, 'radius': 10, 'power_lr': 0.2, 'out_channels': 10}, 'pool': None, 'activation': None}}
CL:  False
{'name': 'CIFAR10', 'noise_std': 0, 'channels': 3, 'width': 32, 'height': 32, 'validation_split': 0.2, 'training_sample': 50000, 'testing_sample': 10000, 'out_channels': 10, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 10, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 1, 'print_freq': 10, 'validation': False, 'continual_learning': False}
CL:  False
{'name': 'CIFAR10', 'noise_std': 0, 'channels': 3, 'width': 32, 'height': 32, 'validation_split': 0.2, 'training_sample': 50000, 'testing_sample': 10000, 'out_channels': 10, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 10, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 1, 'print_freq': 10, 'validation': False, 'continual_learning': False}
SEED:  0
block 0, size : 96 16 16
range = 2.886751345948129
range = 0.11048543456039805
The device used will be: 
True
cuda:0
CNN LAYER CONFIG:  {'arch': 'CNN', 'nb_train': None, 'lr': 0.08, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 1.0, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 2, 'weight_init': 'normal', 'weight_init_range': 2.886751345948129, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 96, 'kernel_size': 5, 'in_channels': 3, 'lr_scheduler': {'lr': 0.08, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0002, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.5}}

 ----- Architecture Block BatchNorm2dSK3962(5, 5)1.0reflect, number 0 -----
- BatchNorm2d(3, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(3, 96, lebesgue_p=2, pruning=0, kernel_size=(5, 5), bias=False, padding_mode=reflect, t_invert=1.0, bias=False, lr_bias=0.1, ranking_param=3, delta=2, activation=exp)
- Triangle(power=0.7)
- AvgPool2d(kernel_size=4, stride=2, padding=1)

 ----- Architecture Block FlattenDropout(p=0.5, inplace=False)Linear(in_, number 1 -----
- Flatten(start_dim=1, end_dim=-1)
- Dropout(p=0.5, inplace=False)
- Linear(in_features=24576, out_features=10, bias=True)
MODEL PARAMETERS: 
torch.Size([10, 24576]) tensor([[ 5.2488e-03, -1.6758e-03, -1.2735e-03,  ...,  2.9649e-03,
          1.6020e-03,  1.7173e-03],
        [ 4.6174e-03, -2.1946e-03,  4.1762e-03,  ..., -3.1416e-03,
          5.9952e-03, -6.1561e-03],
        [ 1.3748e-03,  3.8777e-04,  3.6674e-03,  ..., -4.9891e-03,
         -2.3961e-03,  1.4417e-03],
        ...,
        [ 1.6207e-03, -6.3756e-03, -2.1324e-04,  ..., -1.6907e-03,
          1.9245e-03, -1.4870e-03],
        [-4.3847e-03,  5.6864e-04, -5.0209e-03,  ..., -9.4906e-05,
          2.3491e-03,  3.5744e-03],
        [ 9.0313e-04,  4.7383e-03, -3.2581e-03,  ...,  5.5493e-03,
         -6.2033e-04, -5.9052e-03]], device='cuda:0')
torch.Size([10]) tensor([-0.0047,  0.0060, -0.0037, -0.0012, -0.0040, -0.0033,  0.0044,  0.0013,
        -0.0007, -0.0036], device='cuda:0')
############################################
BLOCKS:  [0]

 ********** Hebbian Unsupervised learning of blocks [0] **********
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
INDICES:  50000
IMAGE SIZE: torch.Size([10, 3, 32, 32])
SAVING FOLDER FOR UNSUP:  CIFAR10_Test
tensor([[[-3.2500, -3.3266, -0.7234, -1.2525,  2.4500],
         [ 1.9977, -0.9123, -6.1061,  0.9303, -3.6469],
         [ 1.0103,  0.8895,  0.3460,  3.5728,  3.2239],
         [-0.7138, -3.9048, -4.8957,  1.6358,  2.2907],
         [ 1.7287, -4.4892, -0.9854,  5.3492,  2.1656]],

        [[-1.6902, -0.5006,  0.5297,  4.0108,  4.5794],
         [ 2.7317, -2.4355, -1.7713,  0.0912, -1.4222],
         [ 0.7171,  1.2693,  0.3245,  1.8498,  1.2735],
         [-0.2953,  2.2876, -0.8362,  0.1516,  1.5094],
         [ 6.6459, -4.2403, -4.5804, -1.9430,  2.5196]],

        [[ 3.0466,  0.5134, -0.6649, -1.1309,  1.5684],
         [-1.1407, -1.2881,  2.1478,  4.3907,  9.8453],
         [-4.4201, -3.5626,  5.2531, -1.5921, -1.6433],
         [ 2.6557,  3.2067,  3.7235, -4.2671,  7.4110],
         [-1.3658,  0.9687, -4.7035, -1.5870, -1.3852]]], device='cuda:0')
tensor([[[-3.2413, -3.3176, -0.7214, -1.2491,  2.4434],
         [ 1.9923, -0.9098, -6.0896,  0.9278, -3.6371],
         [ 1.0076,  0.8871,  0.3450,  3.5632,  3.2152],
         [-0.7119, -3.8943, -4.8825,  1.6314,  2.2845],
         [ 1.7240, -4.4771, -0.9828,  5.3347,  2.1598]],

        [[-1.6856, -0.4992,  0.5282,  4.0000,  4.5670],
         [ 2.7244, -2.4289, -1.7665,  0.0910, -1.4183],
         [ 0.7152,  1.2659,  0.3236,  1.8449,  1.2701],
         [-0.2945,  2.2814, -0.8339,  0.1512,  1.5053],
         [ 6.6280, -4.2289, -4.5680, -1.9378,  2.5129]],

        [[ 3.0384,  0.5120, -0.6631, -1.1278,  1.5642],
         [-1.1376, -1.2846,  2.1420,  4.3789,  9.8188],
         [-4.4082, -3.5530,  5.2389, -1.5878, -1.6388],
         [ 2.6486,  3.1980,  3.7135, -4.2556,  7.3910],
         [-1.3621,  0.9660, -4.6908, -1.5827, -1.3814]]], device='cuda:0')
DELTA WEIGHTS:  tensor([[[-0.0088, -0.0090, -0.0019, -0.0034,  0.0066],
         [ 0.0054, -0.0024, -0.0165,  0.0025, -0.0099],
         [ 0.0027,  0.0024,  0.0009,  0.0096,  0.0087],
         [-0.0019, -0.0105, -0.0132,  0.0044,  0.0061],
         [ 0.0047, -0.0121, -0.0026,  0.0144,  0.0058]],

        [[-0.0046, -0.0013,  0.0014,  0.0108,  0.0123],
         [ 0.0074, -0.0066, -0.0048,  0.0002, -0.0039],
         [ 0.0019,  0.0034,  0.0009,  0.0050,  0.0034],
         [-0.0008,  0.0062, -0.0023,  0.0004,  0.0040],
         [ 0.0179, -0.0114, -0.0123, -0.0053,  0.0068]],

        [[ 0.0082,  0.0014, -0.0018, -0.0031,  0.0042],
         [-0.0031, -0.0035,  0.0058,  0.0118,  0.0265],
         [-0.0120, -0.0096,  0.0142, -0.0043, -0.0045],
         [ 0.0071,  0.0086,  0.0100, -0.0116,  0.0199],
         [-0.0037,  0.0026, -0.0127, -0.0043, -0.0038]]])
DELTA WEIGHTS:  tensor([[-0.0088, -0.0090, -0.0019, -0.0034,  0.0066],
        [ 0.0054, -0.0024, -0.0165,  0.0025, -0.0099],
        [ 0.0027,  0.0024,  0.0009,  0.0096,  0.0087],
        [-0.0019, -0.0105, -0.0132,  0.0044,  0.0061],
        [ 0.0047, -0.0121, -0.0026,  0.0144,  0.0058]])
tensor([-8.7597e-03, -8.9514e-03, -1.9403e-03,  ...,  1.1921e-05,
         4.2915e-06, -3.4571e-06])
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 1.46e-01	time: 00:00:18	Acc_train 0.00	Acc_test 0.00	convergence: 3.74e+00	R1: 8	Info MB:0.000e+00/SB:0.000e+00/MW:1.570e-02/SW:5.813e-01/MR:4.741e+00/SR:1.705e+00/MeD:1.297e+00/MaD:5.197e+00/MW:0.603/MAW:0.397
|       0 |       1 |       2 |       3 |       4 |        5 |       6 |       7 |       8 |       9 |        10 |      11 |      12 |      13 |      14 |      15 |         16 |      17 |      18 |      19 |      20 |      21 |      22 |      23 |      24 |         25 |      26 |      27 |         28 |      29 |
|---------+---------+---------+---------+---------+----------+---------+---------+---------+---------+-----------+---------+---------+---------+---------+---------+------------+---------+---------+---------+---------+---------+---------+---------+---------+------------+---------+---------+------------+---------|
|   0.191 |   0.129 |   0.121 |   0.158 |   0.171 |   0.0964 |   0.143 |   0.135 |   0.176 |   0.192 |   0.00115 |   0.177 |   0.133 |   0.133 |   0.134 |   0.183 |   0.000361 |   0.187 |   0.163 |   0.184 |   0.184 |   0.175 |   0.142 |   0.187 |   0.172 |   0.000321 |   0.198 |   0.175 |   0.000361 |   0.172 |
|   6.68  |   3.62  |   3.29  |   4.9   |   5.55  |   2.45   |   4.18  |   3.87  |   5.86  |   6.78  |   1       |   5.91  |   3.75  |   3.75  |   3.8   |   6.24  |   1        |   6.49  |   5.16  |   6.27  |   6.31  |   5.77  |   4.14  |   6.44  |   5.63  |   1        |   7.12  |   5.8   |   1        |   5.61  |
|   0.55  |   0.51  |   0.53  |   0.57  |   0.55  |   0.63   |   0.42  |   0.48  |   0.55  |   0.53  |   2.68    |   0.53  |   0.44  |   0.53  |   0.53  |   0.46  |  18.8      |   0.56  |   0.49  |   0.55  |   0.55  |   0.56  |   0.49  |   0.58  |   0.51  |  24.34     |   0.38  |   0.56  |   0.99     |   0.49  |
| nan     | nan     | nan     | nan     | nan     | nan      | nan     | nan     | nan     | nan     | nan       | nan     | nan     | nan     | nan     | nan     | nan        | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan        | nan     | nan     | nan        | nan     |
| nan     | nan     | nan     | nan     | nan     | nan      | nan     | nan     | nan     | nan     | nan       | nan     | nan     | nan     | nan     | nan     | nan        | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan        | nan     | nan     | nan        | nan     |
| nan     | nan     | nan     | nan     | nan     | nan      | nan     | nan     | nan     | nan     | nan       | nan     | nan     | nan     | nan     | nan     | nan        | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan        | nan     | nan     | nan        | nan     |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/leonardo_work/try24_antoniet/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/CIFAR10_Test/models
BLOCKS:  [1]

 ********** Supervised learning of blocks [1] **********
SAVING FOLDER FOR SUP:  CIFAR10_Test
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
INDICES:  50000
IMAGE SIZE: torch.Size([10, 3, 32, 32])
Epoch: [1/1]	lr: 1.00e-03	time: 00:00:26	Loss_train 0.41533	Acc_train 48.29	/	Loss_test 0.00638	Acc_test 44.83
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/leonardo_work/try24_antoniet/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/CIFAR10_Test/models

