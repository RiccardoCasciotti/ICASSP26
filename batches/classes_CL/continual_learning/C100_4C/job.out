BLOCKS:  {'b0': {'arch': 'CNN', 'preset': 'softkrotov-c96-k5-p2-s1-d1-b0-t1-lr0.08-lp0.5-e0', 'operation': 'batchnorm2d', 'num': 0, 'batch_norm': False, 'pool': {'type': 'max', 'kernel_size': 4, 'stride': 2, 'padding': 1}, 'activation': {'function': 'triangle', 'param': 0.7}, 'resume': None, 'layer': {'arch': 'CNN', 'nb_train': None, 'lr': 0.08, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 1.0, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 2, 'weight_init': 'positive', 'weight_init_range': 2, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 96, 'kernel_size': 5}}, 'b1': {'arch': 'CNN', 'preset': 'softkrotov-c384-k3-p1-s1-d1-b0-t0.65-lr0.005-lp0.5-e0', 'operation': 'batchnorm2d', 'num': 1, 'batch_norm': False, 'pool': {'type': 'max', 'kernel_size': 4, 'stride': 2, 'padding': 1}, 'activation': {'function': 'triangle', 'param': 1.4}, 'resume': None, 'layer': {'arch': 'CNN', 'nb_train': None, 'lr': 0.005, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.65, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'positive', 'weight_init_range': 2, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 384, 'kernel_size': 3}}, 'b2': {'arch': 'CNN', 'preset': 'softkrotov-c1536-k3-p1-s1-d1-b0-t0.25-lr0.01-lp0.5-e0', 'operation': 'batchnorm2d', 'num': 2, 'batch_norm': False, 'pool': {'type': 'avg', 'kernel_size': 2, 'stride': 2, 'padding': 0}, 'activation': {'function': 'triangle', 'param': 1.0}, 'resume': None, 'layer': {'arch': 'CNN', 'nb_train': None, 'lr': 0.01, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.25, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'positive', 'weight_init_range': 2, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 1536, 'kernel_size': 3}}, 'b3': {'arch': 'MLP', 'preset': 'BP-c10', 'operation': 'flatten', 'num': 3, 'att_dropout': None, 'dropout': 0.5, 'layer': {'arch': 'MLP', 'lr': 0.05, 'adaptive': True, 'lr_sup': 0.001, 'speed': 0.4, 'lr_div': 100, 'lebesgue_p': 2, 't_invert': 10, 'beta': 0.01, 'power': 4.5, 'ranking_param': 3, 'delta': 0.1, 'hebbian': False, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'lr_bias': 600, 'softness': 'soft', 'soft_activation_fn': 'exp', 'plasticity': 'SoftHebb', 'metric_mode': 'unsupervised', 'weight_init': 'positive', 'weight_init_range': 0.25, 'weight_init_offset': 0, 'weight_decay': 0, 'radius': 10, 'power_lr': 0.2, 'out_channels': 10}, 'pool': None, 'activation': None}}
CL:  True
{'name': 'CIFAR100', 'noise_std': 0, 'channels': 3, 'width': 32, 'height': 32, 'validation_split': 0.2, 'training_sample': 50000, 'testing_sample': 10000, 'out_channels': 100, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 64, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 50, 'print_freq': 10, 'validation': False, 'continual_learning': True}
CL:  True
{'name': 'CIFAR100', 'noise_std': 0, 'channels': 3, 'width': 32, 'height': 32, 'validation_split': 0.2, 'training_sample': 50000, 'testing_sample': 10000, 'out_channels': 100, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 10, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 1, 'print_freq': 50, 'validation': False, 'continual_learning': True}
SEED:  0
block 0, size : 96 16 16
range = 2.886751345948129
block 1, size : 384 8 8
range = 0.8505172717997146
block 2, size : 1536 4 4
range = 0.4252586358998573
range = 0.11048543456039805
The device used will be: 
True
cuda:0
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.08, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 1.0, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 2, 'weight_init': 'normal', 'weight_init_range': 2.886751345948129, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 96, 'kernel_size': 5, 'in_channels': 3, 'lr_scheduler': {'lr': 0.08, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0002, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.5}}
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.005, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.65, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'normal', 'weight_init_range': 0.8505172717997146, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 384, 'kernel_size': 3, 'in_channels': 96, 'lr_scheduler': {'lr': 0.005, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0002, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.5}}
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.01, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.25, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'normal', 'weight_init_range': 0.4252586358998573, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 1536, 'kernel_size': 3, 'in_channels': 384, 'lr_scheduler': {'lr': 0.01, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0002, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.5}}
CONFIG: {'arch': 'MLP', 'lr': 0.05, 'adaptive': True, 'lr_sup': 0.001, 'speed': 0.4, 'lr_div': 100, 'lebesgue_p': 2, 't_invert': 10, 'beta': 0.01, 'power': 4.5, 'ranking_param': 3, 'delta': 0.1, 'hebbian': False, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'lr_bias': 600, 'softness': 'soft', 'soft_activation_fn': 'exp', 'plasticity': 'SoftHebb', 'metric_mode': 'unsupervised', 'weight_init': 'positive', 'weight_init_range': 0.11048543456039805, 'weight_init_offset': 0, 'weight_decay': 0, 'radius': 10, 'power_lr': 0.2, 'out_channels': 4, 'in_channels': 24576, 'old_channels': 1536, 'lr_scheduler': {'decay': 'cste', 'lr': 0.1}}

 ----- Architecture Block BatchNorm2dSK3962(5, 5)1.0reflect, number 0 -----
- BatchNorm2d(3, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(3, 96, lebesgue_p=2, pruning=0, kernel_size=(5, 5), bias=False, padding_mode=reflect, t_invert=1.0, bias=False, lr_bias=0.1, ranking_param=3, delta=2, activation=exp)
- Triangle(power=0.7)
- MaxPool2d(kernel_size=4, stride=2, padding=1, dilation=1, ceil_mode=False)

 ----- Architecture Block BatchNorm2dSK963842(3, 3)0.6499999761581421reflect, number 1 -----
- BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(96, 384, lebesgue_p=2, pruning=0, kernel_size=(3, 3), bias=False, padding_mode=reflect, t_invert=0.6499999761581421, bias=False, lr_bias=0.1538, ranking_param=3, delta=2, activation=exp)
- Triangle(power=1.4)
- MaxPool2d(kernel_size=4, stride=2, padding=1, dilation=1, ceil_mode=False)

 ----- Architecture Block BatchNorm2dSK38415362(3, 3)0.25reflect, number 2 -----
- BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(384, 1536, lebesgue_p=2, pruning=0, kernel_size=(3, 3), bias=False, padding_mode=reflect, t_invert=0.25, bias=False, lr_bias=0.4, ranking_param=3, delta=2, activation=exp)
- Triangle(power=1.0)
- AvgPool2d(kernel_size=2, stride=2, padding=0)

 ----- Architecture Block FlattenDropout(p=0.5, inplace=False)Linear(in_, number 3 -----
- Flatten(start_dim=1, end_dim=-1)
- Dropout(p=0.5, inplace=False)
- Linear(in_features=24576, out_features=4, bias=True)

 ********** Hebbian Unsupervised learning of blocks [0] **********
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
TARGETS BEFORE SUB:  tensor([49, 33, 72, 51, 71, 92, 15, 14, 23,  0, 71, 75, 81, 69, 40, 43, 92, 97,
        70, 53], device='cuda:0')
TARGETS AFTER SUB:  tensor([73, 73, 95, 64, 95, 95, 73, 64, 95, 94, 73, 94, 94, 95, 64, 94, 94, 95,
        73, 64])
[64, 73, 94, 95]
TARGETS AFTER CLEANER:  tensor([1, 1, 3, 0, 3, 3, 1, 0, 3, 2, 1, 2, 2, 3, 0, 2, 2, 3, 1, 0])
400
<class 'dataset.FastCIFAR100'>
Dataset FastCIFAR100
    Number of datapoints: 400
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Test
    StandardTransform
Transform: Compose(
               None
               Resize(size=(32, 32), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  tensor([19, 29,  0, 11,  1, 86, 90, 28, 23, 31, 39, 96, 82, 17, 71, 39,  8, 97,
        80, 71], device='cuda:0')
TARGETS AFTER SUB:  tensor([64, 64, 73, 64, 95, 73, 64, 94, 64, 64, 95, 64, 64, 94, 73, 95, 64, 73,
        73, 64])
[64, 73, 94, 95]
TARGETS AFTER CLEANER:  tensor([0, 0, 1, 0, 3, 1, 0, 2, 0, 0, 3, 0, 0, 2, 1, 3, 0, 1, 1, 0])
2000
<class 'dataset.FastCIFAR100'>
Dataset FastCIFAR100
    Number of datapoints: 2000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Train
    StandardTransform
Transform: Compose(
               None
               Resize(size=(32, 32), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  tensor([19, 29,  0, 11,  1, 86, 90, 28, 23, 31, 39, 96, 82, 17, 71, 39,  8, 97,
        80, 71], device='cuda:0')
TARGETS AFTER SUB:  tensor([64, 64, 73, 64, 95, 73, 64, 94, 64, 64, 95, 64, 64, 94, 73, 95, 64, 73,
        73, 64])
[64, 73, 94, 95]
TARGETS AFTER CLEANER:  tensor([0, 0, 1, 0, 3, 1, 0, 2, 0, 0, 3, 0, 0, 2, 1, 3, 0, 1, 1, 0])
2000
<class 'dataset.FastCIFAR100'>
Dataset FastCIFAR100
    Number of datapoints: 2000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Train
------------------------
INDICES:  2000
IMAGE SIZE: torch.Size([10, 3, 32, 32])
SAVING FOLDER FOR UNSUP:  C100_4C_CL
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 2.07e-01	time: 00:00:12	Acc_train 0.00	Acc_test 0.00	convergence: 2.40e+01	R1: 0	Info MB:0.000e+00/SB:0.000e+00/MW:-7.620e-03/SW:9.281e-01/MR:7.834e+00/SR:1.802e+00/MeD:1.473e+00/MaD:5.364e+00/MW:0.479/MAW:0.521
|       0 |       1 |      2 |       3 |       4 |       5 |       6 |      7 |       8 |       9 |      10 |      11 |      12 |      13 |      14 |      15 |      16 |      17 |      18 |      19 |      20 |     21 |      22 |      23 |      24 |      25 |      26 |      27 |      28 |      29 |
|---------+---------+--------+---------+---------+---------+---------+--------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+--------+---------+---------+---------+---------+---------+---------+---------+---------|
|   0.188 |   0.262 |   0.24 |   0.236 |   0.177 |   0.171 |   0.205 |   0.27 |   0.179 |   0.279 |   0.187 |   0.195 |   0.213 |   0.231 |   0.221 |   0.236 |   0.152 |   0.201 |   0.207 |   0.194 |   0.224 |   0.21 |   0.219 |   0.258 |   0.243 |   0.174 |   0.235 |   0.198 |   0.202 |   0.254 |
|   6.52  |  11.71  |   9.99 |   9.72  |   5.9   |   5.56  |   7.57  |  12.41 |   6     |  13.2   |   6.48  |   6.97  |   8.08  |   9.37  |   8.64  |   9.73  |   4.6   |   7.34  |   7.71  |   6.86  |   8.82  |   7.87 |   8.5   |  11.37  |  10.23  |   5.75  |   9.62  |   7.13  |   7.4   |  11.08  |
|   0.64  |   0.26  |   0.22 |   0.31  |   1.54  |   2.33  |   1.09  |   0.28 |   0.96  |   0.22  |   1.48  |   0.58  |   0.56  |   0.33  |   1.82  |   0.3   |   2.51  |   0.54  |   0.63  |   1.13  |   0.59  |   0.92 |   0.63  |   0.4   |   0.34  |   2.61  |   0.7   |   1.05  |   0.36  |   0.26  |
| nan     | nan     | nan    | nan     | nan     | nan     | nan     | nan    | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan    | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     |
| nan     | nan     | nan    | nan     | nan     | nan     | nan     | nan    | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan    | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     |
| nan     | nan     | nan    | nan     | nan     | nan     | nan     | nan    | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan    | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/C100_4C_CL/models

 ********** Hebbian Unsupervised learning of blocks [1] **********
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
TARGETS BEFORE SUB:  tensor([49, 33, 72, 51, 71, 92, 15, 14, 23,  0, 71, 75, 81, 69, 40, 43, 92, 97,
        70, 53], device='cuda:0')
TARGETS AFTER SUB:  tensor([73, 73, 95, 64, 95, 95, 73, 64, 95, 94, 73, 94, 94, 95, 64, 94, 94, 95,
        73, 64])
[64, 73, 94, 95]
TARGETS AFTER CLEANER:  tensor([1, 1, 3, 0, 3, 3, 1, 0, 3, 2, 1, 2, 2, 3, 0, 2, 2, 3, 1, 0])
400
<class 'dataset.FastCIFAR100'>
Dataset FastCIFAR100
    Number of datapoints: 400
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Test
    StandardTransform
Transform: Compose(
               None
               Resize(size=(32, 32), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  tensor([19, 29,  0, 11,  1, 86, 90, 28, 23, 31, 39, 96, 82, 17, 71, 39,  8, 97,
        80, 71], device='cuda:0')
TARGETS AFTER SUB:  tensor([64, 64, 73, 64, 95, 73, 64, 94, 64, 64, 95, 64, 64, 94, 73, 95, 64, 73,
        73, 64])
[64, 73, 94, 95]
TARGETS AFTER CLEANER:  tensor([0, 0, 1, 0, 3, 1, 0, 2, 0, 0, 3, 0, 0, 2, 1, 3, 0, 1, 1, 0])
2000
<class 'dataset.FastCIFAR100'>
Dataset FastCIFAR100
    Number of datapoints: 2000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Train
    StandardTransform
Transform: Compose(
               None
               Resize(size=(32, 32), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  tensor([19, 29,  0, 11,  1, 86, 90, 28, 23, 31, 39, 96, 82, 17, 71, 39,  8, 97,
        80, 71], device='cuda:0')
TARGETS AFTER SUB:  tensor([64, 64, 73, 64, 95, 73, 64, 94, 64, 64, 95, 64, 64, 94, 73, 95, 64, 73,
        73, 64])
[64, 73, 94, 95]
TARGETS AFTER CLEANER:  tensor([0, 0, 1, 0, 3, 1, 0, 2, 0, 0, 3, 0, 0, 2, 1, 3, 0, 1, 1, 0])
2000
<class 'dataset.FastCIFAR100'>
Dataset FastCIFAR100
    Number of datapoints: 2000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Train
------------------------
INDICES:  2000
IMAGE SIZE: torch.Size([10, 3, 32, 32])
SAVING FOLDER FOR UNSUP:  C100_4C_CL
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 2.07e-01	time: 00:00:24	Acc_train 0.00	Acc_test 0.00	convergence: 2.40e+01	R1: 0	Info MB:0.000e+00/SB:0.000e+00/MW:-3.126e-03/SW:7.919e-01/MR:2.315e+01/SR:2.412e+00/MeD:1.854e+00/MaD:9.223e+00/MW:0.745/MAW:0.255
|        0 |        1 |        2 |        3 |        4 |        5 |        6 |        7 |        8 |        9 |       10 |       11 |       12 |       13 |       14 |       15 |      16 |       17 |       18 |       19 |       20 |       21 |      22 |       23 |       24 |       25 |       26 |      27 |       28 |      29 |
|----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+---------+----------+----------+----------+----------+----------+---------+----------+----------+----------+----------+---------+----------+---------|
|   0.0245 |   0.0246 |   0.0242 |   0.0241 |   0.0199 |   0.0243 |   0.0243 |   0.0247 |   0.0243 |   0.0236 |   0.0248 |   0.0241 |   0.0246 |   0.0245 |   0.0242 |   0.0241 |   0.024 |   0.0228 |   0.0239 |   0.0242 |   0.0233 |   0.0248 |   0.024 |   0.0241 |   0.0241 |   0.0238 |   0.0226 |   0.024 |   0.0238 |   0.025 |
|  24.95   |  25.12   |  24.48   |  24.3    |  16.77   |  24.61   |  24.71   |  25.45   |  24.62   |  23.27   |  25.6    |  24.15   |  25.29   |  24.92   |  24.44   |  24.25   |  24.01  |  21.82   |  23.8    |  24.37   |  22.8    |  25.69   |  23.99  |  24.17   |  24.31   |  23.66   |  21.36   |  24.09  |  23.64   |  26.07  |
|   0.06   |   0      |   0      |   0.01   |   1.67   |   0.17   |   0.03   |   0.09   |   0.02   |   0.15   |   0      |   0.04   |   0.05   |   0.06   |   0.02   |   0.05   |   0.04  |   0.47   |   0.09   |   0.13   |   0.13   |   0.01   |   0.24  |   0.25   |   0.07   |   0.1    |   0.61   |   0.05  |   0.15   |   0.02  |
| nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan     | nan      | nan     |
| nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan     | nan      | nan     |
| nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan     | nan      | nan     |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/C100_4C_CL/models

 ********** Hebbian Unsupervised learning of blocks [2] **********
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
TARGETS BEFORE SUB:  tensor([49, 33, 72, 51, 71, 92, 15, 14, 23,  0, 71, 75, 81, 69, 40, 43, 92, 97,
        70, 53], device='cuda:0')
TARGETS AFTER SUB:  tensor([73, 73, 95, 64, 95, 95, 73, 64, 95, 94, 73, 94, 94, 95, 64, 94, 94, 95,
        73, 64])
[64, 73, 94, 95]
TARGETS AFTER CLEANER:  tensor([1, 1, 3, 0, 3, 3, 1, 0, 3, 2, 1, 2, 2, 3, 0, 2, 2, 3, 1, 0])
400
<class 'dataset.FastCIFAR100'>
Dataset FastCIFAR100
    Number of datapoints: 400
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Test
    StandardTransform
Transform: Compose(
               None
               Resize(size=(32, 32), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  tensor([19, 29,  0, 11,  1, 86, 90, 28, 23, 31, 39, 96, 82, 17, 71, 39,  8, 97,
        80, 71], device='cuda:0')
TARGETS AFTER SUB:  tensor([64, 64, 73, 64, 95, 73, 64, 94, 64, 64, 95, 64, 64, 94, 73, 95, 64, 73,
        73, 64])
[64, 73, 94, 95]
TARGETS AFTER CLEANER:  tensor([0, 0, 1, 0, 3, 1, 0, 2, 0, 0, 3, 0, 0, 2, 1, 3, 0, 1, 1, 0])
2000
<class 'dataset.FastCIFAR100'>
Dataset FastCIFAR100
    Number of datapoints: 2000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Train
    StandardTransform
Transform: Compose(
               None
               Resize(size=(32, 32), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  tensor([19, 29,  0, 11,  1, 86, 90, 28, 23, 31, 39, 96, 82, 17, 71, 39,  8, 97,
        80, 71], device='cuda:0')
TARGETS AFTER SUB:  tensor([64, 64, 73, 64, 95, 73, 64, 94, 64, 64, 95, 64, 64, 94, 73, 95, 64, 73,
        73, 64])
[64, 73, 94, 95]
TARGETS AFTER CLEANER:  tensor([0, 0, 1, 0, 3, 1, 0, 2, 0, 0, 3, 0, 0, 2, 1, 3, 0, 1, 1, 0])
2000
<class 'dataset.FastCIFAR100'>
Dataset FastCIFAR100
    Number of datapoints: 2000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Train
------------------------
INDICES:  2000
IMAGE SIZE: torch.Size([10, 3, 32, 32])
SAVING FOLDER FOR UNSUP:  C100_4C_CL
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 4.81e-02	time: 00:00:35	Acc_train 0.00	Acc_test 0.00	convergence: 2.32e+01	R1: 0	Info MB:0.000e+00/SB:0.000e+00/MW:1.376e-04/SW:4.132e-01/MR:2.421e+01/SR:1.955e+00/MeD:1.422e+00/MaD:1.031e+01/MW:0.470/MAW:0.530
|        0 |        1 |        2 |        3 |        4 |        5 |        6 |        7 |        8 |        9 |       10 |       11 |       12 |       13 |       14 |       15 |       16 |       17 |       18 |       19 |       20 |       21 |       22 |       23 |       24 |       25 |       26 |       27 |       28 |       29 |
|----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------|
|   0.0492 |   0.0495 |   0.0491 |   0.0483 |   0.0477 |   0.0494 |   0.0495 |   0.0451 |   0.0483 |   0.0492 |   0.0497 |   0.0493 |   0.0475 |   0.0432 |   0.0492 |   0.0487 |   0.0437 |   0.0499 |   0.0482 |   0.0493 |   0.0459 |   0.0492 |   0.0481 |   0.0493 |   0.0472 |   0.0489 |   0.0488 |   0.0469 |   0.0468 |   0.0489 |
|  25.25   |  25.53   |  25.14   |  24.3    |  23.8    |  25.38   |  25.47   |  21.31   |  24.35   |  25.19   |  25.74   |  25.32   |  23.52   |  19.67   |  25.21   |  24.74   |  20.13   |  25.9    |  24.26   |  25.31   |  22.03   |  25.2    |  24.14   |  25.3    |  23.31   |  24.94   |  24.83   |  23.04   |  22.9    |  24.9    |
|   0      |   0.01   |   0.02   |   0.07   |   0.06   |   0.02   |   0      |   0.1    |   0.04   |   0      |   0.02   |   0.08   |   0.07   |   0.11   |   0.14   |   0.05   |   0.39   |   0      |   0.04   |   0.01   |   0.22   |   0.06   |   0.16   |   0.03   |   0.06   |   0.02   |   0.01   |   0.09   |   0.1    |   0.01   |
| nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      |
| nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      |
| nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/C100_4C_CL/models

 ********** Supervised learning of blocks [3] **********
SAVING FOLDER FOR SUP:  C100_4C_CL
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
TARGETS BEFORE SUB:  tensor([49, 33, 72, 51, 71, 92, 15, 14, 23,  0, 71, 75, 81, 69, 40, 43, 92, 97,
        70, 53], device='cuda:0')
TARGETS AFTER SUB:  tensor([73, 73, 95, 64, 95, 95, 73, 64, 95, 94, 73, 94, 94, 95, 64, 94, 94, 95,
        73, 64])
[64, 73, 94, 95]
TARGETS AFTER CLEANER:  tensor([1, 1, 3, 0, 3, 3, 1, 0, 3, 2, 1, 2, 2, 3, 0, 2, 2, 3, 1, 0])
400
<class 'dataset.FastCIFAR100'>
Dataset FastCIFAR100
    Number of datapoints: 400
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Test
    StandardTransform
Transform: Compose(
               None
               Resize(size=(32, 32), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  tensor([19, 29,  0, 11,  1, 86, 90, 28, 23, 31, 39, 96, 82, 17, 71, 39,  8, 97,
        80, 71], device='cuda:0')
TARGETS AFTER SUB:  tensor([64, 64, 73, 64, 95, 73, 64, 94, 64, 64, 95, 64, 64, 94, 73, 95, 64, 73,
        73, 64])
[64, 73, 94, 95]
TARGETS AFTER CLEANER:  tensor([0, 0, 1, 0, 3, 1, 0, 2, 0, 0, 3, 0, 0, 2, 1, 3, 0, 1, 1, 0])
2000
<class 'dataset.FastCIFAR100'>
Dataset FastCIFAR100
    Number of datapoints: 2000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Train
    StandardTransform
Transform: Compose(
               None
               Resize(size=(32, 32), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  tensor([19, 29,  0, 11,  1, 86, 90, 28, 23, 31, 39, 96, 82, 17, 71, 39,  8, 97,
        80, 71], device='cuda:0')
TARGETS AFTER SUB:  tensor([64, 64, 73, 64, 95, 73, 64, 94, 64, 64, 95, 64, 64, 94, 73, 95, 64, 73,
        73, 64])
[64, 73, 94, 95]
TARGETS AFTER CLEANER:  tensor([0, 0, 1, 0, 3, 1, 0, 2, 0, 0, 3, 0, 0, 2, 1, 3, 0, 1, 1, 0])
2000
<class 'dataset.FastCIFAR100'>
Dataset FastCIFAR100
    Number of datapoints: 2000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Train
------------------------
INDICES:  2000
IMAGE SIZE: torch.Size([64, 3, 32, 32])
Epoch: [1/50]	lr: 1.00e-03	time: 00:00:46	Loss_train 0.54841	Acc_train 67.65	/	Loss_test 0.04918	Acc_test 71.00
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/C100_4C_CL/models
Epoch: [10/50]	lr: 1.00e-03	time: 00:00:48	Loss_train 0.10678	Acc_train 86.47	/	Loss_test 0.03057	Acc_test 83.00
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/C100_4C_CL/models
Epoch: [20/50]	lr: 2.50e-04	time: 00:00:49	Loss_train 0.03194	Acc_train 94.41	/	Loss_test 0.02832	Acc_test 82.00
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/C100_4C_CL/models
Epoch: [30/50]	lr: 1.25e-04	time: 00:00:50	Loss_train 0.01363	Acc_train 96.90	/	Loss_test 0.02881	Acc_test 83.75
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/C100_4C_CL/models
Epoch: [40/50]	lr: 3.13e-05	time: 00:00:52	Loss_train 0.00968	Acc_train 97.61	/	Loss_test 0.02527	Acc_test 84.25
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/C100_4C_CL/models
Epoch: [50/50]	lr: 7.81e-06	time: 00:00:53	Loss_train 0.00823	Acc_train 97.83	/	Loss_test 0.02522	Acc_test 83.75
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/C100_4C_CL/models
RESULT:  {'train_loss': 0.008230013772845268, 'train_acc': 97.83499836921692, 'test_loss': 0.025217700749635696, 'test_acc': 83.75, 'convergence': 23.211210250854492, 'R1': 0, 'dataset_sup': {'name': 'CIFAR100', 'noise_std': 0, 'channels': 3, 'width': 32, 'height': 32, 'validation_split': 0.2, 'training_sample': 50000, 'testing_sample': 10000, 'out_channels': 4, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 64, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 50, 'print_freq': 10, 'validation': False, 'continual_learning': True, 'old_dataset_size': 32, 'n_classes': 4, 'selected_classes': [64, 73, 94, 95]}, 'dataset_unsup': {'name': 'CIFAR100', 'noise_std': 0, 'channels': 3, 'width': 32, 'height': 32, 'validation_split': 0.2, 'training_sample': 50000, 'testing_sample': 10000, 'out_channels': 4, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 10, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 1, 'print_freq': 50, 'validation': False, 'continual_learning': True, 'old_dataset_size': 32, 'n_classes': 4, 'selected_classes': [64, 73, 94, 95]}, 'train_config': {'t0': {'blocks': [0], 'mode': 'unsupervised', 'lr': 0.08, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 50}, 't2': {'blocks': [1], 'mode': 'unsupervised', 'lr': 0.005, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 50}, 't4': {'blocks': [2], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 50}, 't6': {'blocks': [3], 'mode': 'supervised', 'lr': 0.001, 'nb_epoch': 50, 'batch_size': 64, 'print_freq': 10}}}
IN R1:  {'R1': {'train_loss': 0.008230013772845268, 'train_acc': 97.83499836921692, 'test_loss': 0.025217700749635696, 'test_acc': 83.75, 'convergence': 23.211210250854492, 'R1': 0, 'dataset_sup': {'name': 'CIFAR100', 'noise_std': 0, 'channels': 3, 'width': 32, 'height': 32, 'validation_split': 0.2, 'training_sample': 50000, 'testing_sample': 10000, 'out_channels': 4, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 64, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 50, 'print_freq': 10, 'validation': False, 'continual_learning': True, 'old_dataset_size': 32, 'n_classes': 4, 'selected_classes': [64, 73, 94, 95]}, 'dataset_unsup': {'name': 'CIFAR100', 'noise_std': 0, 'channels': 3, 'width': 32, 'height': 32, 'validation_split': 0.2, 'training_sample': 50000, 'testing_sample': 10000, 'out_channels': 4, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 10, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 1, 'print_freq': 50, 'validation': False, 'continual_learning': True, 'old_dataset_size': 32, 'n_classes': 4, 'selected_classes': [64, 73, 94, 95]}, 'train_config': {'t0': {'blocks': [0], 'mode': 'unsupervised', 'lr': 0.08, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 50}, 't2': {'blocks': [1], 'mode': 'unsupervised', 'lr': 0.005, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 50}, 't4': {'blocks': [2], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 50}, 't6': {'blocks': [3], 'mode': 'supervised', 'lr': 0.001, 'nb_epoch': 50, 'batch_size': 64, 'print_freq': 10}}}}
SEED:  0
block 0, size : 96 16 16
range = 2.886751345948129
block 1, size : 384 8 8
range = 0.8505172717997146
block 2, size : 1536 4 4
range = 0.4252586358998573
range = 0.11048543456039805
The device used will be: 
True
cuda:0
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.08, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 1.0, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 2, 'weight_init': 'normal', 'weight_init_range': 2.886751345948129, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 96, 'kernel_size': 5, 'in_channels': 3, 'lr_scheduler': {'lr': 0.08, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0002, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.5}}
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.005, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.65, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'normal', 'weight_init_range': 0.8505172717997146, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 384, 'kernel_size': 3, 'in_channels': 96, 'lr_scheduler': {'lr': 0.005, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0002, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.5}}
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.01, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.25, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'normal', 'weight_init_range': 0.4252586358998573, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 1536, 'kernel_size': 3, 'in_channels': 384, 'lr_scheduler': {'lr': 0.01, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0002, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.5}}
CONFIG: {'arch': 'MLP', 'lr': 0.05, 'adaptive': True, 'lr_sup': 0.001, 'speed': 0.4, 'lr_div': 100, 'lebesgue_p': 2, 't_invert': 10, 'beta': 0.01, 'power': 4.5, 'ranking_param': 3, 'delta': 0.1, 'hebbian': False, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'lr_bias': 600, 'softness': 'soft', 'soft_activation_fn': 'exp', 'plasticity': 'SoftHebb', 'metric_mode': 'unsupervised', 'weight_init': 'positive', 'weight_init_range': 0.11048543456039805, 'weight_init_offset': 0, 'weight_decay': 0, 'radius': 10, 'power_lr': 0.2, 'out_channels': 4, 'in_channels': 24576, 'old_channels': 1536, 'lr_scheduler': {'decay': 'cste', 'lr': 0.1}}

 Model C100_4C_CL loaded successfuly with best perf



 ----- Architecture Block BatchNorm2dSK3962(5, 5)1.0reflect, number 0 -----
- BatchNorm2d(3, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(3, 96, lebesgue_p=2, pruning=0, kernel_size=(5, 5), bias=False, padding_mode=reflect, t_invert=1.0, bias=False, lr_bias=0.1, ranking_param=3, delta=2, activation=exp)
- Triangle(power=0.7)
- MaxPool2d(kernel_size=4, stride=2, padding=1, dilation=1, ceil_mode=False)

 ----- Architecture Block BatchNorm2dSK963842(3, 3)0.6499999761581421reflect, number 1 -----
- BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(96, 384, lebesgue_p=2, pruning=0, kernel_size=(3, 3), bias=False, padding_mode=reflect, t_invert=0.6499999761581421, bias=False, lr_bias=0.1538, ranking_param=3, delta=2, activation=exp)
- Triangle(power=1.4)
- MaxPool2d(kernel_size=4, stride=2, padding=1, dilation=1, ceil_mode=False)

 ----- Architecture Block BatchNorm2dSK38415362(3, 3)0.25reflect, number 2 -----
- BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(384, 1536, lebesgue_p=2, pruning=0, kernel_size=(3, 3), bias=False, padding_mode=reflect, t_invert=0.25, bias=False, lr_bias=0.4, ranking_param=3, delta=2, activation=exp)
- Triangle(power=1.0)
- AvgPool2d(kernel_size=2, stride=2, padding=0)

 ----- Architecture Block FlattenDropout(p=0.5, inplace=False)Linear(in_, number 3 -----
- Flatten(start_dim=1, end_dim=-1)
- Dropout(p=0.5, inplace=False)
- Linear(in_features=24576, out_features=4, bias=True)

 ********** Hebbian Unsupervised learning of blocks [0] **********
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
TARGETS BEFORE SUB:  tensor([49, 33, 72, 51, 71, 92, 15, 14, 23,  0, 71, 75, 81, 69, 40, 43, 92, 97,
        70, 53], device='cuda:0')
TARGETS AFTER SUB:  tensor([ 7,  7, 34,  7,  7,  5, 34,  7, 34, 48,  7,  5,  7,  5,  7, 48, 48,  7,
         5, 34])
[5, 7, 34, 48]
TARGETS AFTER CLEANER:  tensor([1, 1, 2, 1, 1, 0, 2, 1, 2, 3, 1, 0, 1, 0, 1, 3, 3, 1, 0, 2])
400
<class 'dataset.FastCIFAR100'>
Dataset FastCIFAR100
    Number of datapoints: 400
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Test
    StandardTransform
Transform: Compose(
               None
               Resize(size=(32, 32), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  tensor([19, 29,  0, 11,  1, 86, 90, 28, 23, 31, 39, 96, 82, 17, 71, 39,  8, 97,
        80, 71], device='cuda:0')
TARGETS AFTER SUB:  tensor([34, 48,  7, 48, 48, 48, 34,  5,  7,  7,  5, 48,  7, 48, 48,  7, 48,  5,
         7, 34])
[5, 7, 34, 48]
TARGETS AFTER CLEANER:  tensor([2, 3, 1, 3, 3, 3, 2, 0, 1, 1, 0, 3, 1, 3, 3, 1, 3, 0, 1, 2])
2000
<class 'dataset.FastCIFAR100'>
Dataset FastCIFAR100
    Number of datapoints: 2000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Train
    StandardTransform
Transform: Compose(
               None
               Resize(size=(32, 32), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  tensor([19, 29,  0, 11,  1, 86, 90, 28, 23, 31, 39, 96, 82, 17, 71, 39,  8, 97,
        80, 71], device='cuda:0')
TARGETS AFTER SUB:  tensor([34, 48,  7, 48, 48, 48, 34,  5,  7,  7,  5, 48,  7, 48, 48,  7, 48,  5,
         7, 34])
[5, 7, 34, 48]
TARGETS AFTER CLEANER:  tensor([2, 3, 1, 3, 3, 3, 2, 0, 1, 1, 0, 3, 1, 3, 3, 1, 3, 0, 1, 2])
2000
<class 'dataset.FastCIFAR100'>
Dataset FastCIFAR100
    Number of datapoints: 2000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Train
------------------------
INDICES:  2000
IMAGE SIZE: torch.Size([10, 3, 32, 32])
SAVING FOLDER FOR UNSUP:  C100_4C_CL
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 1.59e-01	time: 00:00:11	Acc_train 0.00	Acc_test 0.00	convergence: 2.40e+01	R1: 0	Info MB:0.000e+00/SB:0.000e+00/MW:1.211e-02/SW:6.167e-01/MR:5.158e+00/SR:1.395e+00/MeD:1.071e+00/MaD:4.158e+00/MW:0.543/MAW:0.457
|       0 |      1 |       2 |       3 |       4 |       5 |       6 |      7 |       8 |       9 |      10 |      11 |      12 |      13 |      14 |      15 |         16 |      17 |      18 |      19 |      20 |      21 |      22 |      23 |      24 |         25 |      26 |      27 |      28 |      29 |
|---------+--------+---------+---------+---------+---------+---------+--------+---------+---------+---------+---------+---------+---------+---------+---------+------------+---------+---------+---------+---------+---------+---------+---------+---------+------------+---------+---------+---------+---------|
|   0.143 |   0.19 |   0.167 |   0.182 |   0.137 |   0.152 |   0.162 |   0.2  |   0.154 |   0.209 |   0.101 |   0.143 |   0.165 |   0.156 |   0.157 |   0.186 |   0.000474 |   0.141 |   0.166 |   0.175 |   0.187 |   0.168 |   0.163 |   0.189 |   0.175 |   0.000531 |   0.175 |   0.172 |   0.145 |   0.203 |
|   4.19  |   6.66 |   5.37  |   6.17  |   3.95  |   4.61  |   5.12  |   7.23 |   4.69  |   7.85  |   2.6   |   4.21  |   5.24  |   4.79  |   4.84  |   6.41  |   1        |   4.11  |   5.31  |   5.78  |   6.49  |   5.4   |   5.16  |   6.59  |   5.76  |   1        |   5.81  |   5.65  |   4.28  |   7.46  |
|   0.57  |   0.59 |   0.5   |   0.55  |   0.8   |   1.12  |   0.74  |   0.55 |   0.93  |   0.49  |   1.18  |   0.56  |   0.63  |   0.52  |   0.93  |   0.5   |  10.05     |   0.6   |   0.6   |   0.99  |   0.79  |   0.92  |   0.48  |   0.54  |   0.5   |  10.91     |   0.58  |   0.74  |   0.56  |   0.58  |
| nan     | nan    | nan     | nan     | nan     | nan     | nan     | nan    | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan        | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan        | nan     | nan     | nan     | nan     |
| nan     | nan    | nan     | nan     | nan     | nan     | nan     | nan    | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan        | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan        | nan     | nan     | nan     | nan     |
| nan     | nan    | nan     | nan     | nan     | nan     | nan     | nan    | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan        | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan        | nan     | nan     | nan     | nan     |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/C100_4C_CL/models

 ********** Hebbian Unsupervised learning of blocks [1] **********
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
TARGETS BEFORE SUB:  tensor([49, 33, 72, 51, 71, 92, 15, 14, 23,  0, 71, 75, 81, 69, 40, 43, 92, 97,
        70, 53], device='cuda:0')
TARGETS AFTER SUB:  tensor([ 7,  7, 34,  7,  7,  5, 34,  7, 34, 48,  7,  5,  7,  5,  7, 48, 48,  7,
         5, 34])
[5, 7, 34, 48]
TARGETS AFTER CLEANER:  tensor([1, 1, 2, 1, 1, 0, 2, 1, 2, 3, 1, 0, 1, 0, 1, 3, 3, 1, 0, 2])
400
<class 'dataset.FastCIFAR100'>
Dataset FastCIFAR100
    Number of datapoints: 400
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Test
    StandardTransform
Transform: Compose(
               None
               Resize(size=(32, 32), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  tensor([19, 29,  0, 11,  1, 86, 90, 28, 23, 31, 39, 96, 82, 17, 71, 39,  8, 97,
        80, 71], device='cuda:0')
TARGETS AFTER SUB:  tensor([34, 48,  7, 48, 48, 48, 34,  5,  7,  7,  5, 48,  7, 48, 48,  7, 48,  5,
         7, 34])
[5, 7, 34, 48]
TARGETS AFTER CLEANER:  tensor([2, 3, 1, 3, 3, 3, 2, 0, 1, 1, 0, 3, 1, 3, 3, 1, 3, 0, 1, 2])
2000
<class 'dataset.FastCIFAR100'>
Dataset FastCIFAR100
    Number of datapoints: 2000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Train
    StandardTransform
Transform: Compose(
               None
               Resize(size=(32, 32), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  tensor([19, 29,  0, 11,  1, 86, 90, 28, 23, 31, 39, 96, 82, 17, 71, 39,  8, 97,
        80, 71], device='cuda:0')
TARGETS AFTER SUB:  tensor([34, 48,  7, 48, 48, 48, 34,  5,  7,  7,  5, 48,  7, 48, 48,  7, 48,  5,
         7, 34])
[5, 7, 34, 48]
TARGETS AFTER CLEANER:  tensor([2, 3, 1, 3, 3, 3, 2, 0, 1, 1, 0, 3, 1, 3, 3, 1, 3, 0, 1, 2])
2000
<class 'dataset.FastCIFAR100'>
Dataset FastCIFAR100
    Number of datapoints: 2000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Train
------------------------
INDICES:  2000
IMAGE SIZE: torch.Size([10, 3, 32, 32])
SAVING FOLDER FOR UNSUP:  C100_4C_CL
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 1.59e-01	time: 00:00:22	Acc_train 0.00	Acc_test 0.00	convergence: 2.40e+01	R1: 0	Info MB:0.000e+00/SB:0.000e+00/MW:-2.498e-03/SW:6.548e-01/MR:1.907e+01/SR:2.606e+00/MeD:2.146e+00/MaD:7.799e+00/MW:0.750/MAW:0.250
|        0 |        1 |        2 |        3 |        4 |        5 |       6 |        7 |        8 |        9 |       10 |       11 |       12 |       13 |       14 |       15 |       16 |     17 |       18 |       19 |       20 |       21 |     22 |       23 |       24 |       25 |       26 |       27 |       28 |       29 |
|----------+----------+----------+----------+----------+----------+---------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+--------+----------+----------+----------+----------+--------+----------+----------+----------+----------+----------+----------+----------|
|   0.0218 |   0.0203 |   0.0214 |   0.0232 |   0.0164 |   0.0207 |   0.022 |   0.0219 |   0.0209 |   0.0215 |   0.0215 |   0.0224 |   0.0211 |   0.0223 |   0.0227 |   0.0221 |   0.0203 |   0.02 |   0.0186 |   0.0208 |   0.0223 |   0.0232 |   0.02 |   0.0199 |   0.0197 |   0.0202 |   0.0223 |   0.0209 |   0.0197 |   0.0226 |
|  20.04   |  17.4    |  19.28   |  22.46   |  11.81   |  18.18   |  20.41  |  20.2    |  18.4    |  19.52   |  19.56   |  21.01   |  18.79   |  20.86   |  21.66   |  20.5    |  17.56   |  17.05 |  14.9    |  18.29   |  20.82   |  22.44   |  17.04 |  16.9    |  16.58   |  17.37   |  20.9    |  18.47   |  16.47   |  21.46   |
|   0.27   |   0.47   |   0.35   |   0.1    |   0.67   |   0.3    |   0.25  |   0.24   |   0.3    |   0.22   |   0.27   |   0.23   |   0.46   |   0.22   |   0.16   |   0.21   |   0.38   |   0.36 |   0.54   |   0.3    |   0.12   |   0.26   |   0.55 |   0.54   |   0.7    |   0.65   |   0.03   |   0.27   |   0.42   |   0.23   |
| nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan    | nan      | nan      | nan      | nan      | nan    | nan      | nan      | nan      | nan      | nan      | nan      | nan      |
| nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan    | nan      | nan      | nan      | nan      | nan    | nan      | nan      | nan      | nan      | nan      | nan      | nan      |
| nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan    | nan      | nan      | nan      | nan      | nan    | nan      | nan      | nan      | nan      | nan      | nan      | nan      |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/C100_4C_CL/models

 ********** Hebbian Unsupervised learning of blocks [2] **********
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
TARGETS BEFORE SUB:  tensor([49, 33, 72, 51, 71, 92, 15, 14, 23,  0, 71, 75, 81, 69, 40, 43, 92, 97,
        70, 53], device='cuda:0')
TARGETS AFTER SUB:  tensor([ 7,  7, 34,  7,  7,  5, 34,  7, 34, 48,  7,  5,  7,  5,  7, 48, 48,  7,
         5, 34])
[5, 7, 34, 48]
TARGETS AFTER CLEANER:  tensor([1, 1, 2, 1, 1, 0, 2, 1, 2, 3, 1, 0, 1, 0, 1, 3, 3, 1, 0, 2])
400
<class 'dataset.FastCIFAR100'>
Dataset FastCIFAR100
    Number of datapoints: 400
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Test
    StandardTransform
Transform: Compose(
               None
               Resize(size=(32, 32), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  tensor([19, 29,  0, 11,  1, 86, 90, 28, 23, 31, 39, 96, 82, 17, 71, 39,  8, 97,
        80, 71], device='cuda:0')
TARGETS AFTER SUB:  tensor([34, 48,  7, 48, 48, 48, 34,  5,  7,  7,  5, 48,  7, 48, 48,  7, 48,  5,
         7, 34])
[5, 7, 34, 48]
TARGETS AFTER CLEANER:  tensor([2, 3, 1, 3, 3, 3, 2, 0, 1, 1, 0, 3, 1, 3, 3, 1, 3, 0, 1, 2])
2000
<class 'dataset.FastCIFAR100'>
Dataset FastCIFAR100
    Number of datapoints: 2000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Train
    StandardTransform
Transform: Compose(
               None
               Resize(size=(32, 32), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  tensor([19, 29,  0, 11,  1, 86, 90, 28, 23, 31, 39, 96, 82, 17, 71, 39,  8, 97,
        80, 71], device='cuda:0')
TARGETS AFTER SUB:  tensor([34, 48,  7, 48, 48, 48, 34,  5,  7,  7,  5, 48,  7, 48, 48,  7, 48,  5,
         7, 34])
[5, 7, 34, 48]
TARGETS AFTER CLEANER:  tensor([2, 3, 1, 3, 3, 3, 2, 0, 1, 1, 0, 3, 1, 3, 3, 1, 3, 0, 1, 2])
2000
<class 'dataset.FastCIFAR100'>
Dataset FastCIFAR100
    Number of datapoints: 2000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Train
------------------------
INDICES:  2000
IMAGE SIZE: torch.Size([10, 3, 32, 32])
SAVING FOLDER FOR UNSUP:  C100_4C_CL
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 4.69e-02	time: 00:00:34	Acc_train 0.00	Acc_test 0.00	convergence: 2.20e+01	R1: 0	Info MB:0.000e+00/SB:0.000e+00/MW:2.794e-04/SW:3.939e-01/MR:2.303e+01/SR:2.377e+00/MeD:1.901e+00/MaD:8.994e+00/MW:0.479/MAW:0.521
|        0 |        1 |        2 |        3 |        4 |        5 |        6 |        7 |        8 |        9 |       10 |       11 |       12 |       13 |       14 |       15 |       16 |       17 |       18 |       19 |       20 |       21 |       22 |       23 |       24 |       25 |       26 |       27 |       28 |       29 |
|----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------|
|   0.0494 |   0.0488 |   0.0483 |   0.0486 |   0.0465 |   0.0464 |   0.0501 |   0.0426 |   0.0488 |   0.0493 |   0.0476 |   0.0489 |   0.0484 |   0.0396 |   0.0448 |   0.0481 |   0.0444 |   0.0495 |   0.0463 |   0.0477 |   0.0448 |   0.0475 |   0.0444 |   0.0495 |   0.0468 |   0.0437 |   0.0464 |   0.0477 |   0.0456 |   0.0463 |
|  25.43   |  24.83   |  24.36   |  24.64   |  22.59   |  22.57   |  26.05   |  19.17   |  24.86   |  25.3    |  23.66   |  24.94   |  24.43   |  16.68   |  21.06   |  24.12   |  20.69   |  25.53   |  22.41   |  23.76   |  21.07   |  23.59   |  20.74   |  25.53   |  22.93   |  20.13   |  22.51   |  23.74   |  21.78   |  22.43   |
|   0.02   |   0.04   |   0.06   |   0.01   |   0.02   |   0.06   |   0.02   |   0.05   |   0.02   |   0.01   |   0.1    |   0.08   |   0.14   |   0.11   |   0.26   |   0.05   |   0.03   |   0.05   |   0.1    |   0.03   |   0.06   |   0.07   |   0.28   |   0.03   |   0.07   |   0.11   |   0.08   |   0.04   |   0.04   |   0.05   |
| nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      |
| nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      |
| nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/C100_4C_CL/models

 ********** Supervised learning of blocks [3] **********
SAVING FOLDER FOR SUP:  C100_4C_CL
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
TARGETS BEFORE SUB:  tensor([49, 33, 72, 51, 71, 92, 15, 14, 23,  0, 71, 75, 81, 69, 40, 43, 92, 97,
        70, 53], device='cuda:0')
TARGETS AFTER SUB:  tensor([ 7,  7, 34,  7,  7,  5, 34,  7, 34, 48,  7,  5,  7,  5,  7, 48, 48,  7,
         5, 34])
[5, 7, 34, 48]
TARGETS AFTER CLEANER:  tensor([1, 1, 2, 1, 1, 0, 2, 1, 2, 3, 1, 0, 1, 0, 1, 3, 3, 1, 0, 2])
400
<class 'dataset.FastCIFAR100'>
Dataset FastCIFAR100
    Number of datapoints: 400
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Test
    StandardTransform
Transform: Compose(
               None
               Resize(size=(32, 32), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  tensor([19, 29,  0, 11,  1, 86, 90, 28, 23, 31, 39, 96, 82, 17, 71, 39,  8, 97,
        80, 71], device='cuda:0')
TARGETS AFTER SUB:  tensor([34, 48,  7, 48, 48, 48, 34,  5,  7,  7,  5, 48,  7, 48, 48,  7, 48,  5,
         7, 34])
[5, 7, 34, 48]
TARGETS AFTER CLEANER:  tensor([2, 3, 1, 3, 3, 3, 2, 0, 1, 1, 0, 3, 1, 3, 3, 1, 3, 0, 1, 2])
2000
<class 'dataset.FastCIFAR100'>
Dataset FastCIFAR100
    Number of datapoints: 2000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Train
    StandardTransform
Transform: Compose(
               None
               Resize(size=(32, 32), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  tensor([19, 29,  0, 11,  1, 86, 90, 28, 23, 31, 39, 96, 82, 17, 71, 39,  8, 97,
        80, 71], device='cuda:0')
TARGETS AFTER SUB:  tensor([34, 48,  7, 48, 48, 48, 34,  5,  7,  7,  5, 48,  7, 48, 48,  7, 48,  5,
         7, 34])
[5, 7, 34, 48]
TARGETS AFTER CLEANER:  tensor([2, 3, 1, 3, 3, 3, 2, 0, 1, 1, 0, 3, 1, 3, 3, 1, 3, 0, 1, 2])
2000
<class 'dataset.FastCIFAR100'>
Dataset FastCIFAR100
    Number of datapoints: 2000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Train
------------------------
INDICES:  2000
IMAGE SIZE: torch.Size([64, 3, 32, 32])
Epoch: [1/50]	lr: 1.00e-03	time: 00:00:45	Loss_train 0.75282	Acc_train 59.50	/	Loss_test 0.04094	Acc_test 77.50
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/C100_4C_CL/models
Epoch: [10/50]	lr: 1.00e-03	time: 00:00:46	Loss_train 0.09048	Acc_train 89.53	/	Loss_test 0.01975	Acc_test 90.00
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/C100_4C_CL/models
Epoch: [20/50]	lr: 2.50e-04	time: 00:00:47	Loss_train 0.01509	Acc_train 97.33	/	Loss_test 0.01671	Acc_test 92.25
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/C100_4C_CL/models
Epoch: [30/50]	lr: 1.25e-04	time: 00:00:49	Loss_train 0.00521	Acc_train 98.62	/	Loss_test 0.01815	Acc_test 91.25
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/C100_4C_CL/models
Epoch: [40/50]	lr: 3.13e-05	time: 00:00:50	Loss_train 0.00352	Acc_train 99.03	/	Loss_test 0.01740	Acc_test 92.00
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/C100_4C_CL/models
Epoch: [50/50]	lr: 7.81e-06	time: 00:00:51	Loss_train 0.00331	Acc_train 99.19	/	Loss_test 0.01749	Acc_test 91.25
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/C100_4C_CL/models
RESULT:  {'train_loss': 0.003311157925054431, 'train_acc': 99.19000267982483, 'test_loss': 0.017489444464445114, 'test_acc': 91.25, 'convergence': 22.03382682800293, 'R1': 0, 'dataset_sup': {'name': 'CIFAR100', 'noise_std': 0, 'channels': 3, 'width': 32, 'height': 32, 'validation_split': 0.2, 'training_sample': 50000, 'testing_sample': 10000, 'out_channels': 4, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 64, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 50, 'print_freq': 10, 'validation': False, 'continual_learning': True, 'old_dataset_size': 32, 'n_classes': 4, 'selected_classes': [5, 7, 34, 48]}, 'dataset_unsup': {'name': 'CIFAR100', 'noise_std': 0, 'channels': 3, 'width': 32, 'height': 32, 'validation_split': 0.2, 'training_sample': 50000, 'testing_sample': 10000, 'out_channels': 4, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 10, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 1, 'print_freq': 50, 'validation': False, 'continual_learning': True, 'old_dataset_size': 32, 'n_classes': 4, 'selected_classes': [5, 7, 34, 48]}, 'train_config': {'t0': {'blocks': [0], 'mode': 'unsupervised', 'lr': 0.08, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 50}, 't2': {'blocks': [1], 'mode': 'unsupervised', 'lr': 0.005, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 50}, 't4': {'blocks': [2], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 50}, 't6': {'blocks': [3], 'mode': 'supervised', 'lr': 0.001, 'nb_epoch': 50, 'batch_size': 64, 'print_freq': 10}}}
IN R2:  {'R1': {'train_loss': 0.008230013772845268, 'train_acc': 97.83499836921692, 'test_loss': 0.025217700749635696, 'test_acc': 83.75, 'convergence': 23.211210250854492, 'R1': 0, 'dataset_sup': {'name': 'CIFAR100', 'noise_std': 0, 'channels': 3, 'width': 32, 'height': 32, 'validation_split': 0.2, 'training_sample': 50000, 'testing_sample': 10000, 'out_channels': 4, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 64, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 50, 'print_freq': 10, 'validation': False, 'continual_learning': True, 'old_dataset_size': 32, 'n_classes': 4, 'selected_classes': [64, 73, 94, 95]}, 'dataset_unsup': {'name': 'CIFAR100', 'noise_std': 0, 'channels': 3, 'width': 32, 'height': 32, 'validation_split': 0.2, 'training_sample': 50000, 'testing_sample': 10000, 'out_channels': 4, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 10, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 1, 'print_freq': 50, 'validation': False, 'continual_learning': True, 'old_dataset_size': 32, 'n_classes': 4, 'selected_classes': [64, 73, 94, 95]}, 'train_config': {'t0': {'blocks': [0], 'mode': 'unsupervised', 'lr': 0.08, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 50}, 't2': {'blocks': [1], 'mode': 'unsupervised', 'lr': 0.005, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 50}, 't4': {'blocks': [2], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 50}, 't6': {'blocks': [3], 'mode': 'supervised', 'lr': 0.001, 'nb_epoch': 50, 'batch_size': 64, 'print_freq': 10}}}, 'R2': {'train_loss': 0.003311157925054431, 'train_acc': 99.19000267982483, 'test_loss': 0.017489444464445114, 'test_acc': 91.25, 'convergence': 22.03382682800293, 'R1': 0, 'dataset_sup': {'name': 'CIFAR100', 'noise_std': 0, 'channels': 3, 'width': 32, 'height': 32, 'validation_split': 0.2, 'training_sample': 50000, 'testing_sample': 10000, 'out_channels': 4, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 64, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 50, 'print_freq': 10, 'validation': False, 'continual_learning': True, 'old_dataset_size': 32, 'n_classes': 4, 'selected_classes': [5, 7, 34, 48]}, 'dataset_unsup': {'name': 'CIFAR100', 'noise_std': 0, 'channels': 3, 'width': 32, 'height': 32, 'validation_split': 0.2, 'training_sample': 50000, 'testing_sample': 10000, 'out_channels': 4, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 10, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 1, 'print_freq': 50, 'validation': False, 'continual_learning': True, 'old_dataset_size': 32, 'n_classes': 4, 'selected_classes': [5, 7, 34, 48]}, 'train_config': {'t0': {'blocks': [0], 'mode': 'unsupervised', 'lr': 0.08, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 50}, 't2': {'blocks': [1], 'mode': 'unsupervised', 'lr': 0.005, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 50}, 't4': {'blocks': [2], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 50}, 't6': {'blocks': [3], 'mode': 'supervised', 'lr': 0.001, 'nb_epoch': 50, 'batch_size': 64, 'print_freq': 10}}}}
SEED:  0
block 0, size : 96 16 16
range = 2.886751345948129
block 1, size : 384 8 8
range = 0.8505172717997146
block 2, size : 1536 4 4
range = 0.4252586358998573
range = 0.11048543456039805
The device used will be: 
True
cuda:0
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.08, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 1.0, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 2, 'weight_init': 'normal', 'weight_init_range': 2.886751345948129, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 96, 'kernel_size': 5, 'in_channels': 3, 'lr_scheduler': {'lr': 0.08, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0002, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.5}}
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.005, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.65, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'normal', 'weight_init_range': 0.8505172717997146, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 384, 'kernel_size': 3, 'in_channels': 96, 'lr_scheduler': {'lr': 0.005, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0002, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.5}}
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.01, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.25, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'normal', 'weight_init_range': 0.4252586358998573, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 1536, 'kernel_size': 3, 'in_channels': 384, 'lr_scheduler': {'lr': 0.01, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0002, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.5}}
CONFIG: {'arch': 'MLP', 'lr': 0.05, 'adaptive': True, 'lr_sup': 0.001, 'speed': 0.4, 'lr_div': 100, 'lebesgue_p': 2, 't_invert': 10, 'beta': 0.01, 'power': 4.5, 'ranking_param': 3, 'delta': 0.1, 'hebbian': False, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'lr_bias': 600, 'softness': 'soft', 'soft_activation_fn': 'exp', 'plasticity': 'SoftHebb', 'metric_mode': 'unsupervised', 'weight_init': 'positive', 'weight_init_range': 0.11048543456039805, 'weight_init_offset': 0, 'weight_decay': 0, 'radius': 10, 'power_lr': 0.2, 'out_channels': 4, 'in_channels': 24576, 'old_channels': 1536, 'lr_scheduler': {'decay': 'cste', 'lr': 0.1}}

 Model C100_4C_CL loaded successfuly with best perf



 ----- Architecture Block BatchNorm2dSK3962(5, 5)1.0reflect, number 0 -----
- BatchNorm2d(3, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(3, 96, lebesgue_p=2, pruning=0, kernel_size=(5, 5), bias=False, padding_mode=reflect, t_invert=1.0, bias=False, lr_bias=0.1, ranking_param=3, delta=2, activation=exp)
- Triangle(power=0.7)
- MaxPool2d(kernel_size=4, stride=2, padding=1, dilation=1, ceil_mode=False)

 ----- Architecture Block BatchNorm2dSK963842(3, 3)0.6499999761581421reflect, number 1 -----
- BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(96, 384, lebesgue_p=2, pruning=0, kernel_size=(3, 3), bias=False, padding_mode=reflect, t_invert=0.6499999761581421, bias=False, lr_bias=0.1538, ranking_param=3, delta=2, activation=exp)
- Triangle(power=1.4)
- MaxPool2d(kernel_size=4, stride=2, padding=1, dilation=1, ceil_mode=False)

 ----- Architecture Block BatchNorm2dSK38415362(3, 3)0.25reflect, number 2 -----
- BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(384, 1536, lebesgue_p=2, pruning=0, kernel_size=(3, 3), bias=False, padding_mode=reflect, t_invert=0.25, bias=False, lr_bias=0.4, ranking_param=3, delta=2, activation=exp)
- Triangle(power=1.0)
- AvgPool2d(kernel_size=2, stride=2, padding=0)

 ----- Architecture Block FlattenDropout(p=0.5, inplace=False)Linear(in_, number 3 -----
- Flatten(start_dim=1, end_dim=-1)
- Dropout(p=0.5, inplace=False)
- Linear(in_features=24576, out_features=4, bias=True)
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
TARGETS BEFORE SUB:  tensor([49, 33, 72, 51, 71, 92, 15, 14, 23,  0, 71, 75, 81, 69, 40, 43, 92, 97,
        70, 53], device='cuda:0')
TARGETS AFTER SUB:  tensor([ 7,  7, 34,  7,  7,  5, 34,  7, 34, 48,  7,  5,  7,  5,  7, 48, 48,  7,
         5, 34])
[5, 7, 34, 48]
TARGETS AFTER CLEANER:  tensor([1, 1, 2, 1, 1, 0, 2, 1, 2, 3, 1, 0, 1, 0, 1, 3, 3, 1, 0, 2])
400
<class 'dataset.FastCIFAR100'>
Dataset FastCIFAR100
    Number of datapoints: 400
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Test
    StandardTransform
Transform: Compose(
               None
               Resize(size=(32, 32), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  tensor([19, 29,  0, 11,  1, 86, 90, 28, 23, 31, 39, 96, 82, 17, 71, 39,  8, 97,
        80, 71], device='cuda:0')
TARGETS AFTER SUB:  tensor([34, 48,  7, 48, 48, 48, 34,  5,  7,  7,  5, 48,  7, 48, 48,  7, 48,  5,
         7, 34])
[5, 7, 34, 48]
TARGETS AFTER CLEANER:  tensor([2, 3, 1, 3, 3, 3, 2, 0, 1, 1, 0, 3, 1, 3, 3, 1, 3, 0, 1, 2])
2000
<class 'dataset.FastCIFAR100'>
Dataset FastCIFAR100
    Number of datapoints: 2000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Train
    StandardTransform
Transform: Compose(
               None
               Resize(size=(32, 32), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  tensor([19, 29,  0, 11,  1, 86, 90, 28, 23, 31, 39, 96, 82, 17, 71, 39,  8, 97,
        80, 71], device='cuda:0')
TARGETS AFTER SUB:  tensor([34, 48,  7, 48, 48, 48, 34,  5,  7,  7,  5, 48,  7, 48, 48,  7, 48,  5,
         7, 34])
[5, 7, 34, 48]
TARGETS AFTER CLEANER:  tensor([2, 3, 1, 3, 3, 3, 2, 0, 1, 1, 0, 3, 1, 3, 3, 1, 3, 0, 1, 2])
2000
<class 'dataset.FastCIFAR100'>
Dataset FastCIFAR100
    Number of datapoints: 2000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Train
------------------------
INDICES:  2000
IMAGE SIZE: torch.Size([10, 3, 32, 32])
Accuracy of the network on the 1st dataset: 91.250 %
Test loss on the 1st dataset: 0.017
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
TARGETS BEFORE SUB:  tensor([49, 33, 72, 51, 71, 92, 15, 14, 23,  0, 71, 75, 81, 69, 40, 43, 92, 97,
        70, 53], device='cuda:0')
TARGETS AFTER SUB:  tensor([ 7,  7, 34,  7,  7,  5, 34,  7, 34, 48,  7,  5,  7,  5,  7, 48, 48,  7,
         5, 34])
[5, 7, 34, 48]
TARGETS AFTER CLEANER:  tensor([1, 1, 2, 1, 1, 0, 2, 1, 2, 3, 1, 0, 1, 0, 1, 3, 3, 1, 0, 2])
400
<class 'dataset.FastCIFAR100'>
Dataset FastCIFAR100
    Number of datapoints: 400
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Test
    StandardTransform
Transform: Compose(
               None
               Resize(size=(32, 32), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  tensor([19, 29,  0, 11,  1, 86, 90, 28, 23, 31, 39, 96, 82, 17, 71, 39,  8, 97,
        80, 71], device='cuda:0')
TARGETS AFTER SUB:  tensor([34, 48,  7, 48, 48, 48, 34,  5,  7,  7,  5, 48,  7, 48, 48,  7, 48,  5,
         7, 34])
[5, 7, 34, 48]
TARGETS AFTER CLEANER:  tensor([2, 3, 1, 3, 3, 3, 2, 0, 1, 1, 0, 3, 1, 3, 3, 1, 3, 0, 1, 2])
2000
<class 'dataset.FastCIFAR100'>
Dataset FastCIFAR100
    Number of datapoints: 2000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Train
    StandardTransform
Transform: Compose(
               None
               Resize(size=(32, 32), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  tensor([19, 29,  0, 11,  1, 86, 90, 28, 23, 31, 39, 96, 82, 17, 71, 39,  8, 97,
        80, 71], device='cuda:0')
TARGETS AFTER SUB:  tensor([34, 48,  7, 48, 48, 48, 34,  5,  7,  7,  5, 48,  7, 48, 48,  7, 48,  5,
         7, 34])
[5, 7, 34, 48]
TARGETS AFTER CLEANER:  tensor([2, 3, 1, 3, 3, 3, 2, 0, 1, 1, 0, 3, 1, 3, 3, 1, 3, 0, 1, 2])
2000
<class 'dataset.FastCIFAR100'>
Dataset FastCIFAR100
    Number of datapoints: 2000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Train
------------------------
INDICES:  2000
IMAGE SIZE: torch.Size([10, 3, 32, 32])
Accuracy of the network on the 1st dataset: 91.250 %
Test loss on the 1st dataset: 0.017
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
TARGETS BEFORE SUB:  tensor([49, 33, 72, 51, 71, 92, 15, 14, 23,  0, 71, 75, 81, 69, 40, 43, 92, 97,
        70, 53], device='cuda:0')
TARGETS AFTER SUB:  tensor([ 7,  7, 34,  7,  7,  5, 34,  7, 34, 48,  7,  5,  7,  5,  7, 48, 48,  7,
         5, 34])
[5, 7, 34, 48]
TARGETS AFTER CLEANER:  tensor([1, 1, 2, 1, 1, 0, 2, 1, 2, 3, 1, 0, 1, 0, 1, 3, 3, 1, 0, 2])
400
<class 'dataset.FastCIFAR100'>
Dataset FastCIFAR100
    Number of datapoints: 400
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Test
    StandardTransform
Transform: Compose(
               None
               Resize(size=(32, 32), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  tensor([19, 29,  0, 11,  1, 86, 90, 28, 23, 31, 39, 96, 82, 17, 71, 39,  8, 97,
        80, 71], device='cuda:0')
TARGETS AFTER SUB:  tensor([34, 48,  7, 48, 48, 48, 34,  5,  7,  7,  5, 48,  7, 48, 48,  7, 48,  5,
         7, 34])
[5, 7, 34, 48]
TARGETS AFTER CLEANER:  tensor([2, 3, 1, 3, 3, 3, 2, 0, 1, 1, 0, 3, 1, 3, 3, 1, 3, 0, 1, 2])
2000
<class 'dataset.FastCIFAR100'>
Dataset FastCIFAR100
    Number of datapoints: 2000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Train
    StandardTransform
Transform: Compose(
               None
               Resize(size=(32, 32), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  tensor([19, 29,  0, 11,  1, 86, 90, 28, 23, 31, 39, 96, 82, 17, 71, 39,  8, 97,
        80, 71], device='cuda:0')
TARGETS AFTER SUB:  tensor([34, 48,  7, 48, 48, 48, 34,  5,  7,  7,  5, 48,  7, 48, 48,  7, 48,  5,
         7, 34])
[5, 7, 34, 48]
TARGETS AFTER CLEANER:  tensor([2, 3, 1, 3, 3, 3, 2, 0, 1, 1, 0, 3, 1, 3, 3, 1, 3, 0, 1, 2])
2000
<class 'dataset.FastCIFAR100'>
Dataset FastCIFAR100
    Number of datapoints: 2000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Train
------------------------
INDICES:  2000
IMAGE SIZE: torch.Size([10, 3, 32, 32])
Accuracy of the network on the 1st dataset: 91.250 %
Test loss on the 1st dataset: 0.017
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
TARGETS BEFORE SUB:  tensor([49, 33, 72, 51, 71, 92, 15, 14, 23,  0, 71, 75, 81, 69, 40, 43, 92, 97,
        70, 53], device='cuda:0')
TARGETS AFTER SUB:  tensor([ 7,  7, 34,  7,  7,  5, 34,  7, 34, 48,  7,  5,  7,  5,  7, 48, 48,  7,
         5, 34])
[5, 7, 34, 48]
TARGETS AFTER CLEANER:  tensor([1, 1, 2, 1, 1, 0, 2, 1, 2, 3, 1, 0, 1, 0, 1, 3, 3, 1, 0, 2])
400
<class 'dataset.FastCIFAR100'>
Dataset FastCIFAR100
    Number of datapoints: 400
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Test
    StandardTransform
Transform: Compose(
               None
               Resize(size=(32, 32), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  tensor([19, 29,  0, 11,  1, 86, 90, 28, 23, 31, 39, 96, 82, 17, 71, 39,  8, 97,
        80, 71], device='cuda:0')
TARGETS AFTER SUB:  tensor([34, 48,  7, 48, 48, 48, 34,  5,  7,  7,  5, 48,  7, 48, 48,  7, 48,  5,
         7, 34])
[5, 7, 34, 48]
TARGETS AFTER CLEANER:  tensor([2, 3, 1, 3, 3, 3, 2, 0, 1, 1, 0, 3, 1, 3, 3, 1, 3, 0, 1, 2])
2000
<class 'dataset.FastCIFAR100'>
Dataset FastCIFAR100
    Number of datapoints: 2000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Train
    StandardTransform
Transform: Compose(
               None
               Resize(size=(32, 32), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  tensor([19, 29,  0, 11,  1, 86, 90, 28, 23, 31, 39, 96, 82, 17, 71, 39,  8, 97,
        80, 71], device='cuda:0')
TARGETS AFTER SUB:  tensor([34, 48,  7, 48, 48, 48, 34,  5,  7,  7,  5, 48,  7, 48, 48,  7, 48,  5,
         7, 34])
[5, 7, 34, 48]
TARGETS AFTER CLEANER:  tensor([2, 3, 1, 3, 3, 3, 2, 0, 1, 1, 0, 3, 1, 3, 3, 1, 3, 0, 1, 2])
2000
<class 'dataset.FastCIFAR100'>
Dataset FastCIFAR100
    Number of datapoints: 2000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Train
------------------------
INDICES:  2000
IMAGE SIZE: torch.Size([64, 3, 32, 32])
Accuracy of the network on the 1st dataset: 91.250 %
Test loss on the 1st dataset: 0.017

