BLOCKS:  {'b0': {'arch': 'CNN', 'preset': 'softkrotov-c96-k5-p2-s1-d1-b0-t1-lr0.08-lp0.5-e0', 'operation': 'batchnorm2d', 'num': 0, 'batch_norm': False, 'pool': {'type': 'avg', 'kernel_size': 4, 'stride': 2, 'padding': 1}, 'activation': {'function': 'triangle', 'param': 0.7}, 'resume': None, 'layer': {'arch': 'CNN', 'nb_train': None, 'lr': 0.08, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 1.0, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 2, 'weight_init': 'positive', 'weight_init_range': 2, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 96, 'kernel_size': 5}}, 'b1': {'arch': 'CNN', 'preset': 'softkrotov-c384-k3-p1-s1-d1-b0-t0.65-lr0.005-lp0.5-e0', 'operation': 'batchnorm2d', 'num': 1, 'batch_norm': False, 'pool': {'type': 'max', 'kernel_size': 4, 'stride': 2, 'padding': 1}, 'activation': {'function': 'triangle', 'param': 0.7}, 'resume': None, 'layer': {'arch': 'CNN', 'nb_train': None, 'lr': 0.005, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.65, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'positive', 'weight_init_range': 2, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 384, 'kernel_size': 3}}, 'b2': {'arch': 'CNN', 'preset': 'softkrotov-c1536-k3-p1-s1-d1-b0-t0.45-lr0.01-lp0.5-e0', 'operation': 'batchnorm2d', 'num': 2, 'batch_norm': False, 'pool': {'type': 'avg', 'kernel_size': 4, 'stride': 2, 'padding': 1}, 'activation': {'function': 'triangle', 'param': 1.4}, 'resume': None, 'layer': {'arch': 'CNN', 'nb_train': None, 'lr': 0.01, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.45, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'positive', 'weight_init_range': 2, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 1536, 'kernel_size': 3}}, 'b3': {'arch': 'CNN', 'preset': 'softkrotov-c6144-k3-p1-s1-d1-b0-t0.25-lr0.01-lp0.5-e0', 'operation': 'batchnorm2d', 'num': 3, 'batch_norm': False, 'pool': {'type': 'avg', 'kernel_size': 2, 'stride': 2, 'padding': 0}, 'activation': {'function': 'triangle', 'param': 1}, 'resume': None, 'layer': {'arch': 'CNN', 'nb_train': None, 'lr': 0.01, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.25, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'positive', 'weight_init_range': 2, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 6144, 'kernel_size': 3}}, 'b4': {'arch': 'MLP', 'preset': 'BP-c10', 'operation': 'flatten', 'num': 4, 'att_dropout': None, 'dropout': 0.5, 'layer': {'arch': 'MLP', 'lr': 0.05, 'adaptive': True, 'lr_sup': 0.001, 'speed': 0.4, 'lr_div': 100, 'lebesgue_p': 2, 't_invert': 10, 'beta': 0.01, 'power': 4.5, 'ranking_param': 3, 'delta': 0.1, 'hebbian': False, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'lr_bias': 600, 'softness': 'soft', 'soft_activation_fn': 'exp', 'plasticity': 'SoftHebb', 'metric_mode': 'unsupervised', 'weight_init': 'positive', 'weight_init_range': 0.25, 'weight_init_offset': 0, 'weight_decay': 0, 'radius': 10, 'power_lr': 0.2, 'out_channels': 10}, 'pool': None, 'activation': None}}
CL:  True
{'name': 'STL10', 'noise_std': 0, 'channels': 3, 'width': 96, 'height': 96, 'validation_split': 0.2, 'training_sample': 5000, 'testing_sample': 10000, 'out_channels': 10, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 32, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 50, 'print_freq': 10, 'validation': False, 'continual_learning': True}
CL:  True
{'name': 'STL10', 'noise_std': 0, 'channels': 3, 'width': 96, 'height': 96, 'validation_split': 0.2, 'training_sample': 5000, 'testing_sample': 10000, 'out_channels': 10, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 32, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 1, 'print_freq': 1, 'validation': False, 'continual_learning': True}
SEED:  0
block 0, size : 96 48 48
range = 2.886751345948129
block 1, size : 384 24 24
range = 0.8505172717997146
block 2, size : 1536 12 12
range = 0.4252586358998573
block 3, size : 6144 6 6
range = 0.21262931794992865
range = 0.036828478186799345
The device used will be: 
True
cuda:0
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.08, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 1.0, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 2, 'weight_init': 'normal', 'weight_init_range': 2.886751345948129, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 96, 'kernel_size': 5, 'in_channels': 3, 'lr_scheduler': {'lr': 0.08, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0064, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.5}}
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.005, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.65, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'normal', 'weight_init_range': 0.8505172717997146, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 384, 'kernel_size': 3, 'in_channels': 96, 'lr_scheduler': {'lr': 0.005, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0064, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.5}}
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.01, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.45, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'normal', 'weight_init_range': 0.4252586358998573, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 1536, 'kernel_size': 3, 'in_channels': 384, 'lr_scheduler': {'lr': 0.01, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0064, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.5}}
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.01, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.25, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'normal', 'weight_init_range': 0.21262931794992865, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 6144, 'kernel_size': 3, 'in_channels': 1536, 'lr_scheduler': {'lr': 0.01, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0064, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.5}}
CONFIG: {'arch': 'MLP', 'lr': 0.05, 'adaptive': True, 'lr_sup': 0.001, 'speed': 0.4, 'lr_div': 100, 'lebesgue_p': 2, 't_invert': 10, 'beta': 0.01, 'power': 4.5, 'ranking_param': 3, 'delta': 0.1, 'hebbian': False, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'lr_bias': 600, 'softness': 'soft', 'soft_activation_fn': 'exp', 'plasticity': 'SoftHebb', 'metric_mode': 'unsupervised', 'weight_init': 'positive', 'weight_init_range': 0.036828478186799345, 'weight_init_offset': 0, 'weight_decay': 0, 'radius': 10, 'power_lr': 0.2, 'out_channels': 2, 'in_channels': 221184, 'old_channels': 6144, 'lr_scheduler': {'decay': 'cste', 'lr': 0.1}}

 ----- Architecture Block BatchNorm2dSK3962(5, 5)1.0reflect, number 0 -----
- BatchNorm2d(3, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(3, 96, lebesgue_p=2, pruning=0, kernel_size=(5, 5), bias=False, padding_mode=reflect, t_invert=1.0, bias=False, lr_bias=0.1, ranking_param=3, delta=2, activation=exp)
- Triangle(power=0.7)
- AvgPool2d(kernel_size=4, stride=2, padding=1)

 ----- Architecture Block BatchNorm2dSK963842(3, 3)0.6499999761581421reflect, number 1 -----
- BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(96, 384, lebesgue_p=2, pruning=0, kernel_size=(3, 3), bias=False, padding_mode=reflect, t_invert=0.6499999761581421, bias=False, lr_bias=0.1538, ranking_param=3, delta=2, activation=exp)
- Triangle(power=0.7)
- MaxPool2d(kernel_size=4, stride=2, padding=1, dilation=1, ceil_mode=False)

 ----- Architecture Block BatchNorm2dSK38415362(3, 3)0.44999998807907104reflect, number 2 -----
- BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(384, 1536, lebesgue_p=2, pruning=0, kernel_size=(3, 3), bias=False, padding_mode=reflect, t_invert=0.44999998807907104, bias=False, lr_bias=0.2222, ranking_param=3, delta=2, activation=exp)
- Triangle(power=1.4)
- AvgPool2d(kernel_size=4, stride=2, padding=1)

 ----- Architecture Block BatchNorm2dSK153661442(3, 3)0.25reflect, number 3 -----
- BatchNorm2d(1536, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(1536, 6144, lebesgue_p=2, pruning=0, kernel_size=(3, 3), bias=False, padding_mode=reflect, t_invert=0.25, bias=False, lr_bias=0.4, ranking_param=3, delta=2, activation=exp)
- Triangle(power=1)
- AvgPool2d(kernel_size=2, stride=2, padding=0)

 ----- Architecture Block FlattenDropout(p=0.5, inplace=False)Linear(in_, number 4 -----
- Flatten(start_dim=1, end_dim=-1)
- Dropout(p=0.5, inplace=False)
- Linear(in_features=221184, out_features=2, bias=True)

 ********** Hebbian Unsupervised learning of blocks [0] **********
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
TARGETS BEFORE SUB:  tensor([6, 7, 5, 0, 3, 1, 1, 1, 4, 4, 0, 0, 4, 0, 1, 5, 4, 9, 0, 6],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([0, 3, 0, 0, 0, 0, 3, 3, 3, 0, 3, 0, 0, 0, 0, 0, 3, 3, 0, 3],
       dtype=torch.uint8)
[0, 3]
TARGETS AFTER CLEANER:  tensor([0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([3, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 3, 0, 0, 0, 3, 3, 0, 0],
       dtype=torch.uint8)
[0, 3]
TARGETS AFTER CLEANER:  tensor([1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([3, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 3, 0, 0, 0, 3, 3, 0, 0],
       dtype=torch.uint8)
[0, 3]
TARGETS AFTER CLEANER:  tensor([1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0],
       dtype=torch.uint8)
------------------------
INDICES:  1000
IMAGE SIZE: torch.Size([32, 3, 96, 96])
SAVING FOLDER FOR UNSUP:  STL10_2C_CL
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 3.60e-01	time: 00:00:39	Acc_train 0.00	Acc_test 0.00	convergence: 2.40e+01	R1: 0	Info MB:0.000e+00/SB:0.000e+00/MW:-1.369e-02/SW:2.495e+00/MR:2.139e+01/SR:3.105e+00/MeD:2.437e+00/MaD:9.675e+00/MW:0.685/MAW:0.315
|       0 |       1 |       2 |       3 |       4 |       5 |       6 |       7 |       8 |       9 |      10 |      11 |      12 |      13 |      14 |      15 |      16 |      17 |      18 |      19 |      20 |      21 |     22 |      23 |      24 |      25 |      26 |      27 |      28 |      29 |
|---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+--------+---------+---------+---------+---------+---------+---------+---------|
|   0.377 |   0.376 |   0.347 |   0.369 |   0.337 |   0.309 |   0.377 |   0.399 |   0.357 |   0.389 |   0.345 |   0.369 |   0.393 |   0.382 |   0.345 |   0.366 |   0.283 |   0.383 |   0.394 |   0.362 |   0.392 |   0.357 |   0.38 |   0.397 |   0.402 |   0.298 |   0.375 |   0.362 |   0.368 |   0.374 |
|  23.26  |  23.14  |  19.84  |  22.26  |  18.76  |  15.96  |  23.26  |  25.86  |  20.91  |  24.69  |  19.65  |  22.23  |  25.12  |  23.84  |  19.64  |  21.92  |  13.47  |  23.88  |  25.25  |  21.53  |  25.03  |  20.86  |  23.57 |  25.58  |  26.2   |  14.9   |  23     |  21.49  |  22.21  |  22.83  |
|   0.51  |   0.01  |   0.01  |   0.03  |   3.85  |   6.34  |   0.91  |   0.04  |   1.71  |   0.01  |   1.67  |   0.32  |   0.46  |   0.05  |   1.17  |   0.01  |   7.32  |   0.37  |   0.46  |   0.56  |   0.19  |   0.71  |   0.27 |   0.06  |   0.2   |   2.56  |   0.07  |   0.26  |   0.15  |   0.01  |
| nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan    | nan     | nan     | nan     | nan     | nan     | nan     | nan     |
| nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan    | nan     | nan     | nan     | nan     | nan     | nan     | nan     |
| nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan    | nan     | nan     | nan     | nan     | nan     | nan     | nan     |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/STL10_2C_CL/models

 ********** Hebbian Unsupervised learning of blocks [1] **********
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
TARGETS BEFORE SUB:  tensor([6, 7, 5, 0, 3, 1, 1, 1, 4, 4, 0, 0, 4, 0, 1, 5, 4, 9, 0, 6],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([0, 3, 0, 0, 0, 0, 3, 3, 3, 0, 3, 0, 0, 0, 0, 0, 3, 3, 0, 3],
       dtype=torch.uint8)
[0, 3]
TARGETS AFTER CLEANER:  tensor([0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([3, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 3, 0, 0, 0, 3, 3, 0, 0],
       dtype=torch.uint8)
[0, 3]
TARGETS AFTER CLEANER:  tensor([1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([3, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 3, 0, 0, 0, 3, 3, 0, 0],
       dtype=torch.uint8)
[0, 3]
TARGETS AFTER CLEANER:  tensor([1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0],
       dtype=torch.uint8)
------------------------
INDICES:  1000
IMAGE SIZE: torch.Size([32, 3, 96, 96])
SAVING FOLDER FOR UNSUP:  STL10_2C_CL
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 3.60e-01	time: 00:01:17	Acc_train 0.00	Acc_test 0.00	convergence: 2.40e+01	R1: 0	Info MB:0.000e+00/SB:0.000e+00/MW:-3.265e-03/SW:8.454e-01/MR:2.484e+01/SR:7.815e-01/MeD:5.428e-01/MaD:4.976e+00/MW:0.803/MAW:0.197
|        0 |        1 |        2 |        3 |        4 |        5 |        6 |        7 |        8 |        9 |       10 |       11 |       12 |       13 |       14 |       15 |       16 |       17 |       18 |       19 |       20 |       21 |       22 |       23 |       24 |      25 |       26 |       27 |       28 |       29 |
|----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+---------+----------+----------+----------+----------|
|   0.0247 |   0.0246 |   0.0242 |   0.0242 |   0.0238 |   0.0252 |   0.0245 |   0.0251 |   0.0244 |   0.0242 |   0.0248 |   0.0242 |   0.0248 |   0.0246 |   0.0242 |   0.0243 |   0.0241 |   0.0241 |   0.0244 |   0.0248 |   0.0239 |   0.0248 |   0.0246 |   0.0247 |   0.0242 |   0.024 |   0.0246 |   0.0242 |   0.0245 |   0.0251 |
|  25.44   |  25.12   |  24.49   |  24.34   |  23.71   |  26.35   |  24.92   |  26.24   |  24.88   |  24.52   |  25.62   |  24.34   |  25.58   |  25.19   |  24.49   |  24.59   |  24.21   |  24.31   |  24.8    |  25.67   |  23.87   |  25.69   |  25.14   |  25.43   |  24.48   |  24     |  25.24   |  24.5    |  25.05   |  26.14   |
|   0.02   |   0      |   0      |   0.01   |   2.45   |   0.12   |   0      |   0.02   |   0      |   0.09   |   0      |   0.04   |   0.08   |   0.06   |   0.01   |   0.03   |   0      |   0.81   |   0      |   0.06   |   0.09   |   0      |   0.02   |   0.02   |   0.16   |   0.28  |   0.5    |   0.02   |   0.02   |   0.01   |
| nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      |
| nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      |
| nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/STL10_2C_CL/models

 ********** Hebbian Unsupervised learning of blocks [2] **********
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
TARGETS BEFORE SUB:  tensor([6, 7, 5, 0, 3, 1, 1, 1, 4, 4, 0, 0, 4, 0, 1, 5, 4, 9, 0, 6],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([0, 3, 0, 0, 0, 0, 3, 3, 3, 0, 3, 0, 0, 0, 0, 0, 3, 3, 0, 3],
       dtype=torch.uint8)
[0, 3]
TARGETS AFTER CLEANER:  tensor([0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([3, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 3, 0, 0, 0, 3, 3, 0, 0],
       dtype=torch.uint8)
[0, 3]
TARGETS AFTER CLEANER:  tensor([1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([3, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 3, 0, 0, 0, 3, 3, 0, 0],
       dtype=torch.uint8)
[0, 3]
TARGETS AFTER CLEANER:  tensor([1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0],
       dtype=torch.uint8)
------------------------
INDICES:  1000
IMAGE SIZE: torch.Size([32, 3, 96, 96])
SAVING FOLDER FOR UNSUP:  STL10_2C_CL
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 4.90e-02	time: 00:01:59	Acc_train 0.00	Acc_test 0.00	convergence: 2.40e+01	R1: 0	Info MB:0.000e+00/SB:0.000e+00/MW:1.278e-04/SW:4.190e-01/MR:2.461e+01/SR:1.008e+00/MeD:5.582e-01/MaD:1.027e+01/MW:0.699/MAW:0.301
|       0 |        1 |        2 |        3 |        4 |        5 |        6 |        7 |        8 |        9 |       10 |       11 |      12 |       13 |       14 |       15 |       16 |       17 |       18 |       19 |       20 |       21 |       22 |       23 |       24 |       25 |      26 |       27 |       28 |       29 |
|---------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+---------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+---------+----------+----------+----------|
|   0.049 |   0.0491 |   0.0488 |   0.0491 |   0.0486 |   0.0482 |   0.0494 |   0.0486 |   0.0487 |   0.0489 |   0.0484 |   0.0494 |   0.049 |   0.0451 |   0.0487 |   0.0492 |   0.0475 |   0.0496 |   0.0484 |   0.0492 |   0.0483 |   0.0492 |   0.0482 |   0.0492 |   0.0481 |   0.0487 |   0.049 |   0.0495 |   0.0481 |   0.0488 |
|  25.01  |  25.15   |  24.8    |  25.07   |  24.65   |  24.21   |  25.37   |  24.61   |  24.67   |  24.96   |  24.45   |  25.44   |  24.96  |  21.37   |  24.75   |  25.21   |  23.57   |  25.62   |  24.44   |  25.23   |  24.31   |  25.2    |  24.26   |  25.22   |  24.09   |  24.69   |  25.02  |  25.54   |  24.1    |  24.86   |
|   0     |   0      |   0.01   |   0.01   |   0.03   |   0.08   |   0      |   0.03   |   0.04   |   0      |   0.08   |   0.01   |   0.04  |   0.42   |   0.01   |   0.02   |   0.26   |   0      |   0.01   |   0      |   0.16   |   0.01   |   0.13   |   0.01   |   0.02   |   0.01   |   0     |   0.01   |   0.16   |   0      |
| nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      |
| nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      |
| nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/STL10_2C_CL/models

 ********** Hebbian Unsupervised learning of blocks [3] **********
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
TARGETS BEFORE SUB:  tensor([6, 7, 5, 0, 3, 1, 1, 1, 4, 4, 0, 0, 4, 0, 1, 5, 4, 9, 0, 6],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([0, 3, 0, 0, 0, 0, 3, 3, 3, 0, 3, 0, 0, 0, 0, 0, 3, 3, 0, 3],
       dtype=torch.uint8)
[0, 3]
TARGETS AFTER CLEANER:  tensor([0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([3, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 3, 0, 0, 0, 3, 3, 0, 0],
       dtype=torch.uint8)
[0, 3]
TARGETS AFTER CLEANER:  tensor([1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([3, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 3, 0, 0, 0, 3, 3, 0, 0],
       dtype=torch.uint8)
[0, 3]
TARGETS AFTER CLEANER:  tensor([1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0],
       dtype=torch.uint8)
------------------------
INDICES:  1000
IMAGE SIZE: torch.Size([32, 3, 96, 96])
SAVING FOLDER FOR UNSUP:  STL10_2C_CL
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 4.86e-02	time: 00:02:40	Acc_train 0.00	Acc_test 0.00	convergence: 2.39e+01	R1: 0	Info MB:0.000e+00/SB:0.000e+00/MW:-1.967e-05/SW:2.121e-01/MR:2.493e+01/SR:6.711e-01/MeD:2.238e-01/MaD:2.015e+01/MW:0.552/MAW:0.448
|        0 |        1 |        2 |        3 |        4 |       5 |        6 |        7 |       8 |        9 |      10 |       11 |       12 |      13 |      14 |       15 |      16 |       17 |      18 |       19 |       20 |      21 |       22 |      23 |       24 |       25 |      26 |      27 |       28 |       29 |
|----------+----------+----------+----------+----------+---------+----------+----------+---------+----------+---------+----------+----------+---------+---------+----------+---------+----------+---------+----------+----------+---------+----------+---------+----------+----------+---------+---------+----------+----------|
|   0.0488 |   0.0491 |   0.0491 |   0.0493 |   0.0492 |   0.049 |   0.0493 |   0.0489 |   0.046 |   0.0488 |   0.049 |   0.0492 |   0.0488 |   0.049 |   0.049 |   0.0492 |   0.049 |   0.0491 |   0.049 |   0.0492 |   0.0491 |   0.049 |   0.0489 |   0.049 |   0.0488 |   0.0491 |   0.049 |   0.049 |   0.0491 |   0.0489 |
|  24.84   |  25.08   |  25.12   |  25.33   |  25.17   |  24.99  |  25.33   |  24.95   |  22.18  |  24.82   |  25.02  |  25.18   |  24.85   |  25.04  |  25.01  |  25.2    |  25.02  |  25.11   |  25.02  |  25.21   |  25.09   |  24.96  |  24.91   |  25.03  |  24.79   |  25.09   |  25.03  |  25.02  |  25.11   |  24.93   |
|   0      |   0      |   0      |   0      |   0.01   |   0.01  |   0      |   0      |   0.23  |   0      |   0     |   0      |   0      |   0     |   0.02  |   0      |   0     |   0      |   0     |   0      |   0      |   0.02  |   0      |   0     |   0.01   |   0      |   0.01  |   0     |   0.01   |   0      |
| nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan     | nan      | nan     | nan      | nan      | nan     | nan     | nan      | nan     | nan      | nan     | nan      | nan      | nan     | nan      | nan     | nan      | nan      | nan     | nan     | nan      | nan      |
| nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan     | nan      | nan     | nan      | nan      | nan     | nan     | nan      | nan     | nan      | nan     | nan      | nan      | nan     | nan      | nan     | nan      | nan      | nan     | nan     | nan      | nan      |
| nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan     | nan      | nan     | nan      | nan      | nan     | nan     | nan      | nan     | nan      | nan     | nan      | nan      | nan     | nan      | nan     | nan      | nan      | nan     | nan     | nan      | nan      |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/STL10_2C_CL/models

 ********** Supervised learning of blocks [4] **********
SAVING FOLDER FOR SUP:  STL10_2C_CL
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
TARGETS BEFORE SUB:  tensor([6, 7, 5, 0, 3, 1, 1, 1, 4, 4, 0, 0, 4, 0, 1, 5, 4, 9, 0, 6],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([0, 3, 0, 0, 0, 0, 3, 3, 3, 0, 3, 0, 0, 0, 0, 0, 3, 3, 0, 3],
       dtype=torch.uint8)
[0, 3]
TARGETS AFTER CLEANER:  tensor([0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([3, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 3, 0, 0, 0, 3, 3, 0, 0],
       dtype=torch.uint8)
[0, 3]
TARGETS AFTER CLEANER:  tensor([1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([3, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 3, 0, 0, 0, 3, 3, 0, 0],
       dtype=torch.uint8)
[0, 3]
TARGETS AFTER CLEANER:  tensor([1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0],
       dtype=torch.uint8)
------------------------
INDICES:  1000
IMAGE SIZE: torch.Size([32, 3, 96, 96])
Epoch: [1/50]	lr: 1.00e-03	time: 00:03:20	Loss_train 3.21985	Acc_train 86.00	/	Loss_test 1.69554	Acc_test 93.06
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/STL10_2C_CL/models
Epoch: [10/50]	lr: 1.00e-03	time: 00:03:33	Loss_train 0.36376	Acc_train 97.82	/	Loss_test 1.20152	Acc_test 96.25
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/STL10_2C_CL/models
Epoch: [20/50]	lr: 2.50e-04	time: 00:03:47	Loss_train 0.00642	Acc_train 99.92	/	Loss_test 1.22913	Acc_test 95.94
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/STL10_2C_CL/models
Epoch: [30/50]	lr: 1.25e-04	time: 00:04:01	Loss_train 0.00000	Acc_train 100.00	/	Loss_test 1.22922	Acc_test 95.94
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/STL10_2C_CL/models
Epoch: [40/50]	lr: 3.13e-05	time: 00:04:16	Loss_train 0.00000	Acc_train 100.00	/	Loss_test 1.22922	Acc_test 95.94
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/STL10_2C_CL/models
Epoch: [50/50]	lr: 7.81e-06	time: 00:04:30	Loss_train 0.00000	Acc_train 100.00	/	Loss_test 1.22922	Acc_test 95.94
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/STL10_2C_CL/models
RESULT:  {'train_loss': 0.0, 'train_acc': 100.0, 'test_loss': 1.2292165756225586, 'test_acc': 95.9375, 'convergence': 23.932241439819336, 'R1': 0, 'dataset_sup': {'name': 'STL10', 'noise_std': 0, 'channels': 3, 'width': 96, 'height': 96, 'validation_split': 0.2, 'training_sample': 5000, 'testing_sample': 10000, 'out_channels': 2, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 32, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 50, 'print_freq': 10, 'validation': False, 'continual_learning': True, 'old_dataset_size': 96, 'n_classes': 2, 'selected_classes': [0, 3]}, 'dataset_unsup': {'name': 'STL10', 'noise_std': 0, 'channels': 3, 'width': 96, 'height': 96, 'validation_split': 0.2, 'training_sample': 5000, 'testing_sample': 10000, 'out_channels': 2, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 32, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 1, 'print_freq': 1, 'validation': False, 'continual_learning': True, 'old_dataset_size': 96, 'n_classes': 2, 'selected_classes': [0, 3]}, 'train_config': {'t0': {'blocks': [0], 'mode': 'unsupervised', 'lr': 0.08, 'nb_epoch': 1, 'batch_size': 32, 'print_freq': 1}, 't2': {'blocks': [1], 'mode': 'unsupervised', 'lr': 0.005, 'nb_epoch': 1, 'batch_size': 32, 'print_freq': 1}, 't4': {'blocks': [2], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 32, 'print_freq': 1}, 't6': {'blocks': [3], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 32, 'print_freq': 1}, 't8': {'blocks': [4], 'mode': 'supervised', 'lr': 0.001, 'nb_epoch': 50, 'batch_size': 32, 'print_freq': 10}}}
IN R1:  {'R1': {'train_loss': 0.0, 'train_acc': 100.0, 'test_loss': 1.2292165756225586, 'test_acc': 95.9375, 'convergence': 23.932241439819336, 'R1': 0, 'dataset_sup': {'name': 'STL10', 'noise_std': 0, 'channels': 3, 'width': 96, 'height': 96, 'validation_split': 0.2, 'training_sample': 5000, 'testing_sample': 10000, 'out_channels': 2, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 32, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 50, 'print_freq': 10, 'validation': False, 'continual_learning': True, 'old_dataset_size': 96, 'n_classes': 2, 'selected_classes': [0, 3]}, 'dataset_unsup': {'name': 'STL10', 'noise_std': 0, 'channels': 3, 'width': 96, 'height': 96, 'validation_split': 0.2, 'training_sample': 5000, 'testing_sample': 10000, 'out_channels': 2, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 32, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 1, 'print_freq': 1, 'validation': False, 'continual_learning': True, 'old_dataset_size': 96, 'n_classes': 2, 'selected_classes': [0, 3]}, 'train_config': {'t0': {'blocks': [0], 'mode': 'unsupervised', 'lr': 0.08, 'nb_epoch': 1, 'batch_size': 32, 'print_freq': 1}, 't2': {'blocks': [1], 'mode': 'unsupervised', 'lr': 0.005, 'nb_epoch': 1, 'batch_size': 32, 'print_freq': 1}, 't4': {'blocks': [2], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 32, 'print_freq': 1}, 't6': {'blocks': [3], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 32, 'print_freq': 1}, 't8': {'blocks': [4], 'mode': 'supervised', 'lr': 0.001, 'nb_epoch': 50, 'batch_size': 32, 'print_freq': 10}}}}
SEED:  0
block 0, size : 96 48 48
range = 2.886751345948129
block 1, size : 384 24 24
range = 0.8505172717997146
block 2, size : 1536 12 12
range = 0.4252586358998573
block 3, size : 6144 6 6
range = 0.21262931794992865
range = 0.036828478186799345
The device used will be: 
True
cuda:0
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.08, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 1.0, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 2, 'weight_init': 'normal', 'weight_init_range': 2.886751345948129, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 96, 'kernel_size': 5, 'in_channels': 3, 'lr_scheduler': {'lr': 0.08, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0064, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.5}}
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.005, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.65, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'normal', 'weight_init_range': 0.8505172717997146, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 384, 'kernel_size': 3, 'in_channels': 96, 'lr_scheduler': {'lr': 0.005, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0064, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.5}}
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.01, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.45, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'normal', 'weight_init_range': 0.4252586358998573, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 1536, 'kernel_size': 3, 'in_channels': 384, 'lr_scheduler': {'lr': 0.01, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0064, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.5}}
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.01, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.25, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'normal', 'weight_init_range': 0.21262931794992865, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 6144, 'kernel_size': 3, 'in_channels': 1536, 'lr_scheduler': {'lr': 0.01, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0064, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.5}}
CONFIG: {'arch': 'MLP', 'lr': 0.05, 'adaptive': True, 'lr_sup': 0.001, 'speed': 0.4, 'lr_div': 100, 'lebesgue_p': 2, 't_invert': 10, 'beta': 0.01, 'power': 4.5, 'ranking_param': 3, 'delta': 0.1, 'hebbian': False, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'lr_bias': 600, 'softness': 'soft', 'soft_activation_fn': 'exp', 'plasticity': 'SoftHebb', 'metric_mode': 'unsupervised', 'weight_init': 'positive', 'weight_init_range': 0.036828478186799345, 'weight_init_offset': 0, 'weight_decay': 0, 'radius': 10, 'power_lr': 0.2, 'out_channels': 2, 'in_channels': 221184, 'old_channels': 6144, 'lr_scheduler': {'decay': 'cste', 'lr': 0.1}}

 Model STL10_2C_CL loaded successfuly with best perf



 ----- Architecture Block BatchNorm2dSK3962(5, 5)1.0reflect, number 0 -----
- BatchNorm2d(3, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(3, 96, lebesgue_p=2, pruning=0, kernel_size=(5, 5), bias=False, padding_mode=reflect, t_invert=1.0, bias=False, lr_bias=0.1, ranking_param=3, delta=2, activation=exp)
- Triangle(power=0.7)
- AvgPool2d(kernel_size=4, stride=2, padding=1)

 ----- Architecture Block BatchNorm2dSK963842(3, 3)0.6499999761581421reflect, number 1 -----
- BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(96, 384, lebesgue_p=2, pruning=0, kernel_size=(3, 3), bias=False, padding_mode=reflect, t_invert=0.6499999761581421, bias=False, lr_bias=0.1538, ranking_param=3, delta=2, activation=exp)
- Triangle(power=0.7)
- MaxPool2d(kernel_size=4, stride=2, padding=1, dilation=1, ceil_mode=False)

 ----- Architecture Block BatchNorm2dSK38415362(3, 3)0.44999998807907104reflect, number 2 -----
- BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(384, 1536, lebesgue_p=2, pruning=0, kernel_size=(3, 3), bias=False, padding_mode=reflect, t_invert=0.44999998807907104, bias=False, lr_bias=0.2222, ranking_param=3, delta=2, activation=exp)
- Triangle(power=1.4)
- AvgPool2d(kernel_size=4, stride=2, padding=1)

 ----- Architecture Block BatchNorm2dSK153661442(3, 3)0.25reflect, number 3 -----
- BatchNorm2d(1536, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(1536, 6144, lebesgue_p=2, pruning=0, kernel_size=(3, 3), bias=False, padding_mode=reflect, t_invert=0.25, bias=False, lr_bias=0.4, ranking_param=3, delta=2, activation=exp)
- Triangle(power=1)
- AvgPool2d(kernel_size=2, stride=2, padding=0)

 ----- Architecture Block FlattenDropout(p=0.5, inplace=False)Linear(in_, number 4 -----
- Flatten(start_dim=1, end_dim=-1)
- Dropout(p=0.5, inplace=False)
- Linear(in_features=221184, out_features=2, bias=True)

 ********** Hebbian Unsupervised learning of blocks [0] **********
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
TARGETS BEFORE SUB:  tensor([6, 7, 5, 0, 3, 1, 1, 1, 4, 4, 0, 0, 4, 0, 1, 5, 4, 9, 0, 6],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([6, 1, 1, 1, 1, 6, 1, 6, 1, 6, 1, 6, 1, 1, 6, 1, 1, 6, 1, 1],
       dtype=torch.uint8)
[1, 6]
TARGETS AFTER CLEANER:  tensor([1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([1, 1, 6, 6, 6, 6, 1, 1, 6, 1, 1, 1, 6, 1, 1, 6, 1, 6, 6, 6],
       dtype=torch.uint8)
[1, 6]
TARGETS AFTER CLEANER:  tensor([0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([1, 1, 6, 6, 6, 6, 1, 1, 6, 1, 1, 1, 6, 1, 1, 6, 1, 6, 6, 6],
       dtype=torch.uint8)
[1, 6]
TARGETS AFTER CLEANER:  tensor([0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1],
       dtype=torch.uint8)
------------------------
INDICES:  1000
IMAGE SIZE: torch.Size([32, 3, 96, 96])
SAVING FOLDER FOR UNSUP:  STL10_2C_CL
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 3.02e-01	time: 00:00:36	Acc_train 0.00	Acc_test 0.00	convergence: 2.40e+01	R1: 0	Info MB:0.000e+00/SB:0.000e+00/MW:-1.394e-02/SW:1.823e+00/MR:1.543e+01/SR:3.354e+00/MeD:2.755e+00/MaD:7.944e+00/MW:0.626/MAW:0.374
|       0 |       1 |       2 |       3 |       4 |       5 |       6 |      7 |       8 |       9 |      10 |      11 |      12 |      13 |      14 |      15 |      16 |      17 |      18 |      19 |      20 |      21 |      22 |      23 |      24 |      25 |      26 |      27 |      28 |      29 |
|---------+---------+---------+---------+---------+---------+---------+--------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------|
|   0.289 |   0.358 |   0.335 |   0.343 |   0.262 |   0.238 |   0.313 |   0.36 |   0.273 |   0.378 |   0.287 |   0.304 |   0.322 |   0.339 |   0.281 |   0.342 |   0.222 |   0.307 |   0.307 |   0.287 |   0.335 |   0.293 |   0.328 |   0.359 |   0.344 |   0.251 |   0.345 |   0.315 |   0.306 |   0.357 |
|  14.04  |  21.06  |  18.51  |  19.39  |  11.71  |   9.84  |  16.31  |  21.24 |  12.6   |  23.38  |  13.87  |  15.46  |  17.24  |  19     |  13.33  |  19.26  |   8.67  |  15.74  |  15.7   |  13.89  |  18.55  |  14.37  |  17.78  |  21.16  |  19.52  |  10.84  |  19.63  |  16.49  |  15.68  |  20.91  |
|   0.71  |   0.18  |   0.12  |   0.26  |   1.7   |   2.68  |   0.84  |   0.41 |   1.22  |   0.09  |   1.11  |   0.56  |   0.64  |   0.31  |   1.81  |   0.2   |   2.07  |   0.64  |   0.72  |   1.39  |   0.59  |   1.03  |   0.43  |   0.29  |   0.45  |   2.91  |   0.42  |   0.96  |   0.46  |   0.16  |
| nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan    | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     |
| nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan    | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     |
| nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan    | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/STL10_2C_CL/models

 ********** Hebbian Unsupervised learning of blocks [1] **********
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
TARGETS BEFORE SUB:  tensor([6, 7, 5, 0, 3, 1, 1, 1, 4, 4, 0, 0, 4, 0, 1, 5, 4, 9, 0, 6],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([6, 1, 1, 1, 1, 6, 1, 6, 1, 6, 1, 6, 1, 1, 6, 1, 1, 6, 1, 1],
       dtype=torch.uint8)
[1, 6]
TARGETS AFTER CLEANER:  tensor([1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([1, 1, 6, 6, 6, 6, 1, 1, 6, 1, 1, 1, 6, 1, 1, 6, 1, 6, 6, 6],
       dtype=torch.uint8)
[1, 6]
TARGETS AFTER CLEANER:  tensor([0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([1, 1, 6, 6, 6, 6, 1, 1, 6, 1, 1, 1, 6, 1, 1, 6, 1, 6, 6, 6],
       dtype=torch.uint8)
[1, 6]
TARGETS AFTER CLEANER:  tensor([0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1],
       dtype=torch.uint8)
------------------------
INDICES:  1000
IMAGE SIZE: torch.Size([32, 3, 96, 96])
SAVING FOLDER FOR UNSUP:  STL10_2C_CL
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 3.02e-01	time: 00:01:14	Acc_train 0.00	Acc_test 0.00	convergence: 2.40e+01	R1: 0	Info MB:0.000e+00/SB:0.000e+00/MW:-3.228e-03/SW:8.356e-01/MR:2.453e+01/SR:1.219e+00/MeD:7.564e-01/MaD:8.339e+00/MW:0.781/MAW:0.219
|        0 |        1 |        2 |        3 |        4 |       5 |        6 |        7 |        8 |        9 |       10 |       11 |       12 |       13 |       14 |       15 |       16 |       17 |       18 |       19 |       20 |       21 |       22 |       23 |       24 |       25 |       26 |       27 |       28 |       29 |
|----------+----------+----------+----------+----------+---------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------|
|   0.0247 |   0.0246 |   0.0242 |   0.0242 |   0.0225 |   0.025 |   0.0245 |   0.0251 |   0.0244 |   0.0242 |   0.0248 |   0.0241 |   0.0248 |   0.0246 |   0.0242 |   0.0243 |   0.0241 |   0.0237 |   0.0244 |   0.0247 |   0.0239 |   0.0248 |   0.0246 |   0.0247 |   0.0242 |   0.0239 |   0.0238 |   0.0242 |   0.0245 |   0.0251 |
|  25.42   |  25.12   |  24.49   |  24.34   |  21.34   |  26     |  24.92   |  26.2    |  24.88   |  24.35   |  25.62   |  24.32   |  25.5    |  25.15   |  24.48   |  24.55   |  24.21   |  23.45   |  24.8    |  25.48   |  23.75   |  25.69   |  25.14   |  25.42   |  24.39   |  23.82   |  23.73   |  24.47   |  25      |  26.14   |
|   0.03   |   0      |   0.01   |   0.01   |   2.13   |   0.18  |   0.01   |   0.04   |   0      |   0.17   |   0      |   0.03   |   0.1    |   0.07   |   0.01   |   0.04   |   0      |   0.79   |   0.01   |   0.17   |   0.12   |   0      |   0.04   |   0.03   |   0.15   |   0.32   |   1.4    |   0.02   |   0.05   |   0.01   |
| nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      |
| nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      |
| nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/STL10_2C_CL/models

 ********** Hebbian Unsupervised learning of blocks [2] **********
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
TARGETS BEFORE SUB:  tensor([6, 7, 5, 0, 3, 1, 1, 1, 4, 4, 0, 0, 4, 0, 1, 5, 4, 9, 0, 6],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([6, 1, 1, 1, 1, 6, 1, 6, 1, 6, 1, 6, 1, 1, 6, 1, 1, 6, 1, 1],
       dtype=torch.uint8)
[1, 6]
TARGETS AFTER CLEANER:  tensor([1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([1, 1, 6, 6, 6, 6, 1, 1, 6, 1, 1, 1, 6, 1, 1, 6, 1, 6, 6, 6],
       dtype=torch.uint8)
[1, 6]
TARGETS AFTER CLEANER:  tensor([0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([1, 1, 6, 6, 6, 6, 1, 1, 6, 1, 1, 1, 6, 1, 1, 6, 1, 6, 6, 6],
       dtype=torch.uint8)
[1, 6]
TARGETS AFTER CLEANER:  tensor([0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1],
       dtype=torch.uint8)
------------------------
INDICES:  1000
IMAGE SIZE: torch.Size([32, 3, 96, 96])
SAVING FOLDER FOR UNSUP:  STL10_2C_CL
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 4.90e-02	time: 00:01:52	Acc_train 0.00	Acc_test 0.00	convergence: 2.40e+01	R1: 0	Info MB:0.000e+00/SB:0.000e+00/MW:1.122e-04/SW:4.076e-01/MR:2.389e+01/SR:1.860e+00/MeD:1.288e+00/MaD:1.380e+01/MW:0.670/MAW:0.330
|       0 |        1 |        2 |        3 |        4 |        5 |        6 |        7 |        8 |        9 |       10 |       11 |       12 |       13 |       14 |      15 |       16 |       17 |       18 |       19 |       20 |       21 |      22 |       23 |       24 |       25 |      26 |       27 |       28 |       29 |
|---------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+---------+----------+----------+----------+----------+----------+----------+---------+----------+----------+----------+---------+----------+----------+----------|
|   0.049 |   0.0491 |   0.0487 |   0.0487 |   0.0479 |   0.0473 |   0.0494 |   0.0468 |   0.0484 |   0.0489 |   0.0467 |   0.0493 |   0.0482 |   0.0425 |   0.0487 |   0.049 |   0.0438 |   0.0496 |   0.0483 |   0.0492 |   0.0458 |   0.0488 |   0.046 |   0.0492 |   0.0474 |   0.0479 |   0.049 |   0.0493 |   0.0459 |   0.0488 |
|  25.01  |  25.12   |  24.73   |  24.75   |  23.96   |  23.4    |  25.37   |  22.9    |  24.38   |  24.96   |  22.83   |  25.26   |  24.24   |  19.04   |  24.67   |  24.97  |  20.18   |  25.62   |  24.32   |  25.24   |  22      |  24.77   |  22.2   |  25.19   |  23.48   |  23.98   |  24.99  |  25.28   |  22.11   |  24.85   |
|   0     |   0      |   0.03   |   0.04   |   0.05   |   0.08   |   0      |   0.09   |   0.04   |   0      |   0.11   |   0.02   |   0.05   |   0.16   |   0.03   |   0.02  |   0.31   |   0      |   0.01   |   0      |   0.18   |   0.03   |   0.21  |   0.01   |   0.05   |   0.04   |   0     |   0.03   |   0.13   |   0      |
| nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan     | nan      | nan      | nan      |
| nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan     | nan      | nan      | nan      |
| nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan     | nan      | nan      | nan      |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/STL10_2C_CL/models

 ********** Hebbian Unsupervised learning of blocks [3] **********
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
TARGETS BEFORE SUB:  tensor([6, 7, 5, 0, 3, 1, 1, 1, 4, 4, 0, 0, 4, 0, 1, 5, 4, 9, 0, 6],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([6, 1, 1, 1, 1, 6, 1, 6, 1, 6, 1, 6, 1, 1, 6, 1, 1, 6, 1, 1],
       dtype=torch.uint8)
[1, 6]
TARGETS AFTER CLEANER:  tensor([1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([1, 1, 6, 6, 6, 6, 1, 1, 6, 1, 1, 1, 6, 1, 1, 6, 1, 6, 6, 6],
       dtype=torch.uint8)
[1, 6]
TARGETS AFTER CLEANER:  tensor([0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([1, 1, 6, 6, 6, 6, 1, 1, 6, 1, 1, 1, 6, 1, 1, 6, 1, 6, 6, 6],
       dtype=torch.uint8)
[1, 6]
TARGETS AFTER CLEANER:  tensor([0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1],
       dtype=torch.uint8)
------------------------
INDICES:  1000
IMAGE SIZE: torch.Size([32, 3, 96, 96])
SAVING FOLDER FOR UNSUP:  STL10_2C_CL
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 4.78e-02	time: 00:02:31	Acc_train 0.00	Acc_test 0.00	convergence: 2.38e+01	R1: 0	Info MB:0.000e+00/SB:0.000e+00/MW:-1.441e-05/SW:2.115e-01/MR:2.484e+01/SR:1.178e+00/MeD:4.394e-01/MaD:2.356e+01/MW:0.536/MAW:0.464
|        0 |        1 |        2 |        3 |        4 |       5 |        6 |       7 |       8 |        9 |       10 |       11 |       12 |       13 |       14 |       15 |       16 |       17 |      18 |       19 |       20 |       21 |       22 |       23 |       24 |       25 |       26 |      27 |       28 |       29 |
|----------+----------+----------+----------+----------+---------+----------+---------+---------+----------+----------+----------+----------+----------+----------+----------+----------+----------+---------+----------+----------+----------+----------+----------+----------+----------+----------+---------+----------+----------|
|   0.0489 |   0.0491 |   0.0493 |   0.0494 |   0.0492 |   0.049 |   0.0494 |   0.049 |   0.042 |   0.0488 |   0.0492 |   0.0493 |   0.0488 |   0.0491 |   0.0493 |   0.0492 |   0.0491 |   0.0492 |   0.049 |   0.0493 |   0.0491 |   0.0483 |   0.0489 |   0.0491 |   0.0487 |   0.0491 |   0.0495 |   0.049 |   0.0492 |   0.0491 |
|  24.9    |  25.15   |  25.26   |  25.37   |  25.21   |  25.04  |  25.4    |  24.97  |  18.66  |  24.83   |  25.18   |  25.29   |  24.86   |  25.09   |  25.33   |  25.23   |  25.09   |  25.17   |  25.04  |  25.28   |  25.1    |  24.3    |  24.94   |  25.08   |  24.76   |  25.1    |  25.49   |  25.03  |  25.22   |  25.06   |
|   0      |   0.01   |   0      |   0      |   0.01   |   0     |   0.01   |   0     |   0.18  |   0      |   0.01   |   0.01   |   0      |   0      |   0.02   |   0      |   0      |   0      |   0     |   0      |   0      |   0.04   |   0      |   0      |   0.01   |   0.01   |   0.02   |   0     |   0      |   0      |
| nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan     | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      |
| nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan     | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      |
| nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan     | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/STL10_2C_CL/models

 ********** Supervised learning of blocks [4] **********
SAVING FOLDER FOR SUP:  STL10_2C_CL
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
TARGETS BEFORE SUB:  tensor([6, 7, 5, 0, 3, 1, 1, 1, 4, 4, 0, 0, 4, 0, 1, 5, 4, 9, 0, 6],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([6, 1, 1, 1, 1, 6, 1, 6, 1, 6, 1, 6, 1, 1, 6, 1, 1, 6, 1, 1],
       dtype=torch.uint8)
[1, 6]
TARGETS AFTER CLEANER:  tensor([1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([1, 1, 6, 6, 6, 6, 1, 1, 6, 1, 1, 1, 6, 1, 1, 6, 1, 6, 6, 6],
       dtype=torch.uint8)
[1, 6]
TARGETS AFTER CLEANER:  tensor([0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([1, 1, 6, 6, 6, 6, 1, 1, 6, 1, 1, 1, 6, 1, 1, 6, 1, 6, 6, 6],
       dtype=torch.uint8)
[1, 6]
TARGETS AFTER CLEANER:  tensor([0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1],
       dtype=torch.uint8)
------------------------
INDICES:  1000
IMAGE SIZE: torch.Size([32, 3, 96, 96])
Epoch: [1/50]	lr: 1.00e-03	time: 00:03:11	Loss_train 12.26796	Acc_train 69.00	/	Loss_test 5.18370	Acc_test 79.94
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/STL10_2C_CL/models
Epoch: [10/50]	lr: 1.00e-03	time: 00:03:24	Loss_train 1.27920	Acc_train 92.39	/	Loss_test 3.38549	Acc_test 85.25
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/STL10_2C_CL/models
Epoch: [20/50]	lr: 2.50e-04	time: 00:03:38	Loss_train 0.05030	Acc_train 99.26	/	Loss_test 3.15557	Acc_test 86.62
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/STL10_2C_CL/models
Epoch: [30/50]	lr: 1.25e-04	time: 00:03:52	Loss_train 0.00322	Acc_train 99.91	/	Loss_test 2.96699	Acc_test 87.56
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/STL10_2C_CL/models
Epoch: [40/50]	lr: 3.13e-05	time: 00:04:06	Loss_train 0.00167	Acc_train 99.94	/	Loss_test 2.97808	Acc_test 87.19
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/STL10_2C_CL/models
Epoch: [50/50]	lr: 7.81e-06	time: 00:04:21	Loss_train 0.00085	Acc_train 99.98	/	Loss_test 2.97388	Acc_test 87.25
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/STL10_2C_CL/models
RESULT:  {'train_loss': 0.0008465317660011351, 'train_acc': 99.98000264167786, 'test_loss': 2.973883628845215, 'test_acc': 87.25, 'convergence': 23.84358787536621, 'R1': 0, 'dataset_sup': {'name': 'STL10', 'noise_std': 0, 'channels': 3, 'width': 96, 'height': 96, 'validation_split': 0.2, 'training_sample': 5000, 'testing_sample': 10000, 'out_channels': 2, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 32, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 50, 'print_freq': 10, 'validation': False, 'continual_learning': True, 'old_dataset_size': 96, 'n_classes': 2, 'selected_classes': [1, 6]}, 'dataset_unsup': {'name': 'STL10', 'noise_std': 0, 'channels': 3, 'width': 96, 'height': 96, 'validation_split': 0.2, 'training_sample': 5000, 'testing_sample': 10000, 'out_channels': 2, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 32, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 1, 'print_freq': 1, 'validation': False, 'continual_learning': True, 'old_dataset_size': 96, 'n_classes': 2, 'selected_classes': [1, 6]}, 'train_config': {'t0': {'blocks': [0], 'mode': 'unsupervised', 'lr': 0.08, 'nb_epoch': 1, 'batch_size': 32, 'print_freq': 1}, 't2': {'blocks': [1], 'mode': 'unsupervised', 'lr': 0.005, 'nb_epoch': 1, 'batch_size': 32, 'print_freq': 1}, 't4': {'blocks': [2], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 32, 'print_freq': 1}, 't6': {'blocks': [3], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 32, 'print_freq': 1}, 't8': {'blocks': [4], 'mode': 'supervised', 'lr': 0.001, 'nb_epoch': 50, 'batch_size': 32, 'print_freq': 10}}}
IN R2:  {'R1': {'train_loss': 0.0, 'train_acc': 100.0, 'test_loss': 1.2292165756225586, 'test_acc': 95.9375, 'convergence': 23.932241439819336, 'R1': 0, 'dataset_sup': {'name': 'STL10', 'noise_std': 0, 'channels': 3, 'width': 96, 'height': 96, 'validation_split': 0.2, 'training_sample': 5000, 'testing_sample': 10000, 'out_channels': 2, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 32, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 50, 'print_freq': 10, 'validation': False, 'continual_learning': True, 'old_dataset_size': 96, 'n_classes': 2, 'selected_classes': [0, 3]}, 'dataset_unsup': {'name': 'STL10', 'noise_std': 0, 'channels': 3, 'width': 96, 'height': 96, 'validation_split': 0.2, 'training_sample': 5000, 'testing_sample': 10000, 'out_channels': 2, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 32, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 1, 'print_freq': 1, 'validation': False, 'continual_learning': True, 'old_dataset_size': 96, 'n_classes': 2, 'selected_classes': [0, 3]}, 'train_config': {'t0': {'blocks': [0], 'mode': 'unsupervised', 'lr': 0.08, 'nb_epoch': 1, 'batch_size': 32, 'print_freq': 1}, 't2': {'blocks': [1], 'mode': 'unsupervised', 'lr': 0.005, 'nb_epoch': 1, 'batch_size': 32, 'print_freq': 1}, 't4': {'blocks': [2], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 32, 'print_freq': 1}, 't6': {'blocks': [3], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 32, 'print_freq': 1}, 't8': {'blocks': [4], 'mode': 'supervised', 'lr': 0.001, 'nb_epoch': 50, 'batch_size': 32, 'print_freq': 10}}}, 'R2': {'train_loss': 0.0008465317660011351, 'train_acc': 99.98000264167786, 'test_loss': 2.973883628845215, 'test_acc': 87.25, 'convergence': 23.84358787536621, 'R1': 0, 'dataset_sup': {'name': 'STL10', 'noise_std': 0, 'channels': 3, 'width': 96, 'height': 96, 'validation_split': 0.2, 'training_sample': 5000, 'testing_sample': 10000, 'out_channels': 2, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 32, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 50, 'print_freq': 10, 'validation': False, 'continual_learning': True, 'old_dataset_size': 96, 'n_classes': 2, 'selected_classes': [1, 6]}, 'dataset_unsup': {'name': 'STL10', 'noise_std': 0, 'channels': 3, 'width': 96, 'height': 96, 'validation_split': 0.2, 'training_sample': 5000, 'testing_sample': 10000, 'out_channels': 2, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 32, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 1, 'print_freq': 1, 'validation': False, 'continual_learning': True, 'old_dataset_size': 96, 'n_classes': 2, 'selected_classes': [1, 6]}, 'train_config': {'t0': {'blocks': [0], 'mode': 'unsupervised', 'lr': 0.08, 'nb_epoch': 1, 'batch_size': 32, 'print_freq': 1}, 't2': {'blocks': [1], 'mode': 'unsupervised', 'lr': 0.005, 'nb_epoch': 1, 'batch_size': 32, 'print_freq': 1}, 't4': {'blocks': [2], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 32, 'print_freq': 1}, 't6': {'blocks': [3], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 32, 'print_freq': 1}, 't8': {'blocks': [4], 'mode': 'supervised', 'lr': 0.001, 'nb_epoch': 50, 'batch_size': 32, 'print_freq': 10}}}}
SEED:  0
block 0, size : 96 48 48
range = 2.886751345948129
block 1, size : 384 24 24
range = 0.8505172717997146
block 2, size : 1536 12 12
range = 0.4252586358998573
block 3, size : 6144 6 6
range = 0.21262931794992865
range = 0.036828478186799345
The device used will be: 
True
cuda:0
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.08, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 1.0, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 2, 'weight_init': 'normal', 'weight_init_range': 2.886751345948129, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 96, 'kernel_size': 5, 'in_channels': 3, 'lr_scheduler': {'lr': 0.08, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0064, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.5}}
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.005, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.65, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'normal', 'weight_init_range': 0.8505172717997146, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 384, 'kernel_size': 3, 'in_channels': 96, 'lr_scheduler': {'lr': 0.005, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0064, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.5}}
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.01, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.45, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'normal', 'weight_init_range': 0.4252586358998573, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 1536, 'kernel_size': 3, 'in_channels': 384, 'lr_scheduler': {'lr': 0.01, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0064, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.5}}
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.01, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.25, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'normal', 'weight_init_range': 0.21262931794992865, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 6144, 'kernel_size': 3, 'in_channels': 1536, 'lr_scheduler': {'lr': 0.01, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0064, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.5}}
CONFIG: {'arch': 'MLP', 'lr': 0.05, 'adaptive': True, 'lr_sup': 0.001, 'speed': 0.4, 'lr_div': 100, 'lebesgue_p': 2, 't_invert': 10, 'beta': 0.01, 'power': 4.5, 'ranking_param': 3, 'delta': 0.1, 'hebbian': False, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'lr_bias': 600, 'softness': 'soft', 'soft_activation_fn': 'exp', 'plasticity': 'SoftHebb', 'metric_mode': 'unsupervised', 'weight_init': 'positive', 'weight_init_range': 0.036828478186799345, 'weight_init_offset': 0, 'weight_decay': 0, 'radius': 10, 'power_lr': 0.2, 'out_channels': 2, 'in_channels': 221184, 'old_channels': 6144, 'lr_scheduler': {'decay': 'cste', 'lr': 0.1}}

 Model STL10_2C_CL loaded successfuly with best perf



 ----- Architecture Block BatchNorm2dSK3962(5, 5)1.0reflect, number 0 -----
- BatchNorm2d(3, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(3, 96, lebesgue_p=2, pruning=0, kernel_size=(5, 5), bias=False, padding_mode=reflect, t_invert=1.0, bias=False, lr_bias=0.1, ranking_param=3, delta=2, activation=exp)
- Triangle(power=0.7)
- AvgPool2d(kernel_size=4, stride=2, padding=1)

 ----- Architecture Block BatchNorm2dSK963842(3, 3)0.6499999761581421reflect, number 1 -----
- BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(96, 384, lebesgue_p=2, pruning=0, kernel_size=(3, 3), bias=False, padding_mode=reflect, t_invert=0.6499999761581421, bias=False, lr_bias=0.1538, ranking_param=3, delta=2, activation=exp)
- Triangle(power=0.7)
- MaxPool2d(kernel_size=4, stride=2, padding=1, dilation=1, ceil_mode=False)

 ----- Architecture Block BatchNorm2dSK38415362(3, 3)0.44999998807907104reflect, number 2 -----
- BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(384, 1536, lebesgue_p=2, pruning=0, kernel_size=(3, 3), bias=False, padding_mode=reflect, t_invert=0.44999998807907104, bias=False, lr_bias=0.2222, ranking_param=3, delta=2, activation=exp)
- Triangle(power=1.4)
- AvgPool2d(kernel_size=4, stride=2, padding=1)

 ----- Architecture Block BatchNorm2dSK153661442(3, 3)0.25reflect, number 3 -----
- BatchNorm2d(1536, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(1536, 6144, lebesgue_p=2, pruning=0, kernel_size=(3, 3), bias=False, padding_mode=reflect, t_invert=0.25, bias=False, lr_bias=0.4, ranking_param=3, delta=2, activation=exp)
- Triangle(power=1)
- AvgPool2d(kernel_size=2, stride=2, padding=0)

 ----- Architecture Block FlattenDropout(p=0.5, inplace=False)Linear(in_, number 4 -----
- Flatten(start_dim=1, end_dim=-1)
- Dropout(p=0.5, inplace=False)
- Linear(in_features=221184, out_features=2, bias=True)

 ********** Hebbian Unsupervised learning of blocks [0] **********
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
TARGETS BEFORE SUB:  tensor([6, 7, 5, 0, 3, 1, 1, 1, 4, 4, 0, 0, 4, 0, 1, 5, 4, 9, 0, 6],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([0, 3, 0, 0, 0, 0, 3, 3, 3, 0, 3, 0, 0, 0, 0, 0, 3, 3, 0, 3],
       dtype=torch.uint8)
[0, 3]
TARGETS AFTER CLEANER:  tensor([0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([3, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 3, 0, 0, 0, 3, 3, 0, 0],
       dtype=torch.uint8)
[0, 3]
TARGETS AFTER CLEANER:  tensor([1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([3, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 3, 0, 0, 0, 3, 3, 0, 0],
       dtype=torch.uint8)
[0, 3]
TARGETS AFTER CLEANER:  tensor([1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0],
       dtype=torch.uint8)
------------------------
INDICES:  1000
IMAGE SIZE: torch.Size([32, 3, 96, 96])
SAVING FOLDER FOR UNSUP:  STL10_2C_CL
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 2.74e-01	time: 00:00:36	Acc_train 0.00	Acc_test 0.00	convergence: 2.40e+01	R1: 0	Info MB:0.000e+00/SB:0.000e+00/MW:-7.417e-03/SW:1.516e+00/MR:1.286e+01/SR:2.683e+00/MeD:2.134e+00/MaD:7.267e+00/MW:0.535/MAW:0.465
|       0 |       1 |       2 |       3 |       4 |       5 |       6 |       7 |       8 |      9 |      10 |      11 |      12 |     13 |      14 |      15 |      16 |      17 |      18 |      19 |      20 |      21 |      22 |      23 |      24 |      25 |      26 |     27 |     28 |      29 |
|---------+---------+---------+---------+---------+---------+---------+---------+---------+--------+---------+---------+---------+--------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+--------+--------+---------|
|   0.267 |   0.332 |   0.295 |   0.307 |   0.253 |   0.227 |   0.273 |   0.332 |   0.257 |   0.35 |   0.248 |   0.268 |   0.289 |   0.31 |   0.257 |   0.316 |   0.206 |   0.274 |   0.284 |   0.263 |   0.299 |   0.262 |   0.288 |   0.326 |   0.305 |   0.219 |   0.307 |   0.28 |   0.28 |   0.331 |
|  12.18  |  18.2   |  14.56  |  15.75  |  11.04  |   9.04  |  12.66  |  18.19  |  11.3   |  20.12 |  10.57  |  12.23  |  14.02  |  15.97 |  11.32  |  16.61  |   7.63  |  12.7   |  13.62  |  11.84  |  14.94  |  11.7   |  13.99  |  17.64  |  15.51  |   8.52  |  15.69  |  13.24 |  13.25 |  18.1   |
|   0.33  |   0.27  |   0.31  |   0.37  |   1.96  |   3.68  |   0.77  |   0.34  |   0.83  |   0.24 |   1.04  |   0.45  |   0.45  |   0.28 |   1.63  |   0.26  |   3.01  |   0.43  |   0.41  |   0.98  |   0.56  |   0.97  |   0.39  |   0.31  |   0.41  |   3.22  |   0.57  |   1.12 |   0.31 |   0.26  |
| nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan    | nan     | nan     | nan     | nan    | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan    | nan    | nan     |
| nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan    | nan     | nan     | nan     | nan    | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan    | nan    | nan     |
| nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan    | nan     | nan     | nan     | nan    | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan    | nan    | nan     |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/STL10_2C_CL/models

 ********** Hebbian Unsupervised learning of blocks [1] **********
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
TARGETS BEFORE SUB:  tensor([6, 7, 5, 0, 3, 1, 1, 1, 4, 4, 0, 0, 4, 0, 1, 5, 4, 9, 0, 6],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([0, 3, 0, 0, 0, 0, 3, 3, 3, 0, 3, 0, 0, 0, 0, 0, 3, 3, 0, 3],
       dtype=torch.uint8)
[0, 3]
TARGETS AFTER CLEANER:  tensor([0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([3, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 3, 0, 0, 0, 3, 3, 0, 0],
       dtype=torch.uint8)
[0, 3]
TARGETS AFTER CLEANER:  tensor([1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([3, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 3, 0, 0, 0, 3, 3, 0, 0],
       dtype=torch.uint8)
[0, 3]
TARGETS AFTER CLEANER:  tensor([1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0],
       dtype=torch.uint8)
------------------------
INDICES:  1000
IMAGE SIZE: torch.Size([32, 3, 96, 96])
SAVING FOLDER FOR UNSUP:  STL10_2C_CL
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 2.74e-01	time: 00:01:14	Acc_train 0.00	Acc_test 0.00	convergence: 2.40e+01	R1: 0	Info MB:0.000e+00/SB:0.000e+00/MW:-3.204e-03/SW:8.260e-01/MR:2.423e+01/SR:1.598e+00/MeD:1.046e+00/MaD:9.202e+00/MW:0.737/MAW:0.263
|        0 |        1 |        2 |        3 |        4 |        5 |        6 |        7 |        8 |        9 |       10 |       11 |       12 |       13 |       14 |       15 |       16 |       17 |       18 |       19 |       20 |       21 |       22 |       23 |      24 |       25 |       26 |       27 |       28 |       29 |
|----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+---------+----------+----------+----------+----------+----------|
|   0.0247 |   0.0246 |   0.0242 |   0.0242 |   0.0218 |   0.0248 |   0.0245 |   0.0251 |   0.0244 |   0.0241 |   0.0248 |   0.0241 |   0.0247 |   0.0245 |   0.0242 |   0.0242 |   0.0241 |   0.0231 |   0.0244 |   0.0246 |   0.0237 |   0.0248 |   0.0246 |   0.0247 |   0.024 |   0.0237 |   0.0234 |   0.0242 |   0.0245 |   0.0251 |
|  25.38   |  25.12   |  24.49   |  24.33   |  20.03   |  25.54   |  24.92   |  26.12   |  24.87   |  24.18   |  25.62   |  24.27   |  25.36   |  25.08   |  24.47   |  24.52   |  24.21   |  22.42   |  24.79   |  25.21   |  23.46   |  25.69   |  25.12   |  25.41   |  24.12  |  23.46   |  22.88   |  24.41   |  24.94   |  26.14   |
|   0.03   |   0      |   0.01   |   0.01   |   1.23   |   0.19   |   0.01   |   0.06   |   0      |   0.15   |   0      |   0.06   |   0.13   |   0.1    |   0.02   |   0.04   |   0      |   0.85   |   0.01   |   0.18   |   0.21   |   0      |   0.1    |   0.07   |   0.29  |   0.48   |   0.88   |   0.03   |   0.04   |   0.01   |
| nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan      |
| nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan      |
| nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan      |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/STL10_2C_CL/models

 ********** Hebbian Unsupervised learning of blocks [2] **********
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
TARGETS BEFORE SUB:  tensor([6, 7, 5, 0, 3, 1, 1, 1, 4, 4, 0, 0, 4, 0, 1, 5, 4, 9, 0, 6],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([0, 3, 0, 0, 0, 0, 3, 3, 3, 0, 3, 0, 0, 0, 0, 0, 3, 3, 0, 3],
       dtype=torch.uint8)
[0, 3]
TARGETS AFTER CLEANER:  tensor([0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([3, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 3, 0, 0, 0, 3, 3, 0, 0],
       dtype=torch.uint8)
[0, 3]
TARGETS AFTER CLEANER:  tensor([1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([3, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 3, 0, 0, 0, 3, 3, 0, 0],
       dtype=torch.uint8)
[0, 3]
TARGETS AFTER CLEANER:  tensor([1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0],
       dtype=torch.uint8)
------------------------
INDICES:  1000
IMAGE SIZE: torch.Size([32, 3, 96, 96])
SAVING FOLDER FOR UNSUP:  STL10_2C_CL
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 4.90e-02	time: 00:01:52	Acc_train 0.00	Acc_test 0.00	convergence: 2.40e+01	R1: 0	Info MB:0.000e+00/SB:0.000e+00/MW:1.067e-04/SW:4.000e-01/MR:2.340e+01/SR:2.302e+00/MeD:1.728e+00/MaD:1.411e+01/MW:0.629/MAW:0.371
|       0 |        1 |        2 |        3 |        4 |       5 |        6 |        7 |        8 |       9 |       10 |       11 |       12 |       13 |       14 |      15 |       16 |       17 |       18 |       19 |       20 |       21 |      22 |       23 |       24 |       25 |      26 |       27 |       28 |       29 |
|---------+----------+----------+----------+----------+---------+----------+----------+----------+---------+----------+----------+----------+----------+----------+---------+----------+----------+----------+----------+----------+----------+---------+----------+----------+----------+---------+----------+----------+----------|
|   0.049 |   0.0491 |   0.0486 |   0.0485 |   0.0467 |   0.046 |   0.0494 |   0.0458 |   0.0474 |   0.049 |   0.0444 |   0.0492 |   0.0474 |   0.0399 |   0.0486 |   0.048 |   0.0427 |   0.0496 |   0.0481 |   0.0492 |   0.0448 |   0.0486 |   0.045 |   0.0489 |   0.0469 |   0.0473 |   0.049 |   0.0487 |   0.0439 |   0.0488 |
|  25.02  |  25.12   |  24.58   |  24.5    |  22.83   |  22.15  |  25.36   |  21.95   |  23.43   |  24.96  |  20.7    |  25.18   |  23.46   |  16.94   |  24.59   |  24.06  |  19.26   |  25.63   |  24.1    |  25.24   |  21.06   |  24.63   |  21.26  |  24.93   |  23.03   |  23.42   |  25     |  24.75   |  20.27   |  24.84   |
|   0     |   0      |   0.04   |   0.09   |   0.09   |   0.13  |   0      |   0.06   |   0.09   |   0     |   0.15   |   0.02   |   0.06   |   0.17   |   0.03   |   0.06  |   0.2    |   0      |   0.02   |   0      |   0.14   |   0.02   |   0.15  |   0.03   |   0.04   |   0.04   |   0     |   0.04   |   0.13   |   0      |
| nan     | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan     | nan      | nan      | nan      |
| nan     | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan     | nan      | nan      | nan      |
| nan     | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan     | nan      | nan      | nan      |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/STL10_2C_CL/models

 ********** Hebbian Unsupervised learning of blocks [3] **********
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
TARGETS BEFORE SUB:  tensor([6, 7, 5, 0, 3, 1, 1, 1, 4, 4, 0, 0, 4, 0, 1, 5, 4, 9, 0, 6],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([0, 3, 0, 0, 0, 0, 3, 3, 3, 0, 3, 0, 0, 0, 0, 0, 3, 3, 0, 3],
       dtype=torch.uint8)
[0, 3]
TARGETS AFTER CLEANER:  tensor([0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([3, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 3, 0, 0, 0, 3, 3, 0, 0],
       dtype=torch.uint8)
[0, 3]
TARGETS AFTER CLEANER:  tensor([1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([3, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 3, 0, 0, 0, 3, 3, 0, 0],
       dtype=torch.uint8)
[0, 3]
TARGETS AFTER CLEANER:  tensor([1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0],
       dtype=torch.uint8)
------------------------
INDICES:  1000
IMAGE SIZE: torch.Size([32, 3, 96, 96])
SAVING FOLDER FOR UNSUP:  STL10_2C_CL
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 4.73e-02	time: 00:02:32	Acc_train 0.00	Acc_test 0.00	convergence: 2.38e+01	R1: 0	Info MB:0.000e+00/SB:0.000e+00/MW:-1.055e-05/SW:2.113e-01/MR:2.480e+01/SR:1.532e+00/MeD:6.190e-01/MaD:2.376e+01/MW:0.557/MAW:0.443
|        0 |        1 |        2 |        3 |        4 |       5 |        6 |       7 |        8 |        9 |       10 |       11 |       12 |       13 |       14 |       15 |       16 |       17 |       18 |       19 |       20 |       21 |      22 |      23 |       24 |       25 |       26 |      27 |       28 |       29 |
|----------+----------+----------+----------+----------+---------+----------+---------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+---------+---------+----------+----------+----------+---------+----------+----------|
|   0.0489 |   0.0492 |   0.0494 |   0.0494 |   0.0493 |   0.049 |   0.0495 |   0.049 |   0.0402 |   0.0488 |   0.0494 |   0.0493 |   0.0489 |   0.0491 |   0.0488 |   0.0492 |   0.0492 |   0.0492 |   0.0491 |   0.0493 |   0.0491 |   0.0481 |   0.049 |   0.049 |   0.0481 |   0.0491 |   0.0498 |   0.049 |   0.0494 |   0.0491 |
|  24.95   |  25.25   |  25.37   |  25.39   |  25.28   |  25.04  |  25.53   |  25     |  17.13   |  24.84   |  25.36   |  25.3    |  24.87   |  25.13   |  24.82   |  25.25   |  25.24   |  25.21   |  25.06   |  25.29   |  25.11   |  24.13   |  24.97  |  24.97  |  24.11   |  25.11   |  25.77   |  25.03  |  25.44   |  25.1    |
|   0      |   0      |   0      |   0      |   0      |   0.01  |   0      |   0     |   0.11   |   0      |   0      |   0      |   0      |   0      |   0.02   |   0      |   0      |   0      |   0      |   0      |   0      |   0.02   |   0     |   0     |   0.01   |   0.01   |   0.02   |   0     |   0.01   |   0      |
| nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan     | nan      | nan      | nan      | nan     | nan      | nan      |
| nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan     | nan      | nan      | nan      | nan     | nan      | nan      |
| nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan     | nan      | nan      | nan      | nan     | nan      | nan      |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/STL10_2C_CL/models
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
TARGETS BEFORE SUB:  tensor([6, 7, 5, 0, 3, 1, 1, 1, 4, 4, 0, 0, 4, 0, 1, 5, 4, 9, 0, 6],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([0, 3, 0, 0, 0, 0, 3, 3, 3, 0, 3, 0, 0, 0, 0, 0, 3, 3, 0, 3],
       dtype=torch.uint8)
[0, 3]
TARGETS AFTER CLEANER:  tensor([0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([3, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 3, 0, 0, 0, 3, 3, 0, 0],
       dtype=torch.uint8)
[0, 3]
TARGETS AFTER CLEANER:  tensor([1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([3, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 3, 0, 0, 0, 3, 3, 0, 0],
       dtype=torch.uint8)
[0, 3]
TARGETS AFTER CLEANER:  tensor([1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0],
       dtype=torch.uint8)
------------------------
INDICES:  1000
IMAGE SIZE: torch.Size([32, 3, 96, 96])
Accuracy of the network on the 1st dataset: 78.438 %
Test loss on the 1st dataset: 5.343

