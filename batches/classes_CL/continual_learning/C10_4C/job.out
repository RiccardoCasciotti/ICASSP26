BLOCKS:  {'b0': {'arch': 'CNN', 'preset': 'softkrotov-c96-k5-p2-s1-d1-b0-t1-lr0.08-lp0.5-e0', 'operation': 'batchnorm2d', 'num': 0, 'batch_norm': False, 'pool': {'type': 'max', 'kernel_size': 4, 'stride': 2, 'padding': 1}, 'activation': {'function': 'triangle', 'param': 0.7}, 'resume': None, 'layer': {'arch': 'CNN', 'nb_train': None, 'lr': 0.08, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 1.0, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 2, 'weight_init': 'positive', 'weight_init_range': 2, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 96, 'kernel_size': 5}}, 'b1': {'arch': 'CNN', 'preset': 'softkrotov-c384-k3-p1-s1-d1-b0-t0.65-lr0.005-lp0.5-e0', 'operation': 'batchnorm2d', 'num': 1, 'batch_norm': False, 'pool': {'type': 'max', 'kernel_size': 4, 'stride': 2, 'padding': 1}, 'activation': {'function': 'triangle', 'param': 1.4}, 'resume': None, 'layer': {'arch': 'CNN', 'nb_train': None, 'lr': 0.005, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.65, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'positive', 'weight_init_range': 2, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 384, 'kernel_size': 3}}, 'b2': {'arch': 'CNN', 'preset': 'softkrotov-c1536-k3-p1-s1-d1-b0-t0.25-lr0.01-lp0.5-e0', 'operation': 'batchnorm2d', 'num': 2, 'batch_norm': False, 'pool': {'type': 'avg', 'kernel_size': 2, 'stride': 2, 'padding': 0}, 'activation': {'function': 'triangle', 'param': 1.0}, 'resume': None, 'layer': {'arch': 'CNN', 'nb_train': None, 'lr': 0.01, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.25, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'positive', 'weight_init_range': 2, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 1536, 'kernel_size': 3}}, 'b3': {'arch': 'MLP', 'preset': 'BP-c10', 'operation': 'flatten', 'num': 3, 'att_dropout': None, 'dropout': 0.5, 'layer': {'arch': 'MLP', 'lr': 0.05, 'adaptive': True, 'lr_sup': 0.001, 'speed': 0.4, 'lr_div': 100, 'lebesgue_p': 2, 't_invert': 10, 'beta': 0.01, 'power': 4.5, 'ranking_param': 3, 'delta': 0.1, 'hebbian': False, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'lr_bias': 600, 'softness': 'soft', 'soft_activation_fn': 'exp', 'plasticity': 'SoftHebb', 'metric_mode': 'unsupervised', 'weight_init': 'positive', 'weight_init_range': 0.25, 'weight_init_offset': 0, 'weight_decay': 0, 'radius': 10, 'power_lr': 0.2, 'out_channels': 10}, 'pool': None, 'activation': None}}
CL:  True
{'name': 'CIFAR10', 'noise_std': 0, 'channels': 3, 'width': 32, 'height': 32, 'validation_split': 0.2, 'training_sample': 50000, 'testing_sample': 10000, 'out_channels': 10, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 64, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 50, 'print_freq': 10, 'validation': False, 'continual_learning': True}
CL:  True
{'name': 'CIFAR10', 'noise_std': 0, 'channels': 3, 'width': 32, 'height': 32, 'validation_split': 0.2, 'training_sample': 50000, 'testing_sample': 10000, 'out_channels': 10, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 10, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 1, 'print_freq': 10, 'validation': False, 'continual_learning': True}
SEED:  0
block 0, size : 96 16 16
range = 2.886751345948129
block 1, size : 384 8 8
range = 0.8505172717997146
block 2, size : 1536 4 4
range = 0.4252586358998573
range = 0.11048543456039805
The device used will be: 
True
cuda:0
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.08, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 1.0, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 2, 'weight_init': 'normal', 'weight_init_range': 2.886751345948129, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 96, 'kernel_size': 5, 'in_channels': 3, 'lr_scheduler': {'lr': 0.08, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0002, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.5}}
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.005, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.65, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'normal', 'weight_init_range': 0.8505172717997146, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 384, 'kernel_size': 3, 'in_channels': 96, 'lr_scheduler': {'lr': 0.005, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0002, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.5}}
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.01, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.25, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'normal', 'weight_init_range': 0.4252586358998573, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 1536, 'kernel_size': 3, 'in_channels': 384, 'lr_scheduler': {'lr': 0.01, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0002, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.5}}
CONFIG: {'arch': 'MLP', 'lr': 0.05, 'adaptive': True, 'lr_sup': 0.001, 'speed': 0.4, 'lr_div': 100, 'lebesgue_p': 2, 't_invert': 10, 'beta': 0.01, 'power': 4.5, 'ranking_param': 3, 'delta': 0.1, 'hebbian': False, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'lr_bias': 600, 'softness': 'soft', 'soft_activation_fn': 'exp', 'plasticity': 'SoftHebb', 'metric_mode': 'unsupervised', 'weight_init': 'positive', 'weight_init_range': 0.11048543456039805, 'weight_init_offset': 0, 'weight_decay': 0, 'radius': 10, 'power_lr': 0.2, 'out_channels': 4, 'in_channels': 24576, 'old_channels': 1536, 'lr_scheduler': {'decay': 'cste', 'lr': 0.1}}

 ----- Architecture Block BatchNorm2dSK3962(5, 5)1.0reflect, number 0 -----
- BatchNorm2d(3, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(3, 96, lebesgue_p=2, pruning=0, kernel_size=(5, 5), bias=False, padding_mode=reflect, t_invert=1.0, bias=False, lr_bias=0.1, ranking_param=3, delta=2, activation=exp)
- Triangle(power=0.7)
- MaxPool2d(kernel_size=4, stride=2, padding=1, dilation=1, ceil_mode=False)

 ----- Architecture Block BatchNorm2dSK963842(3, 3)0.6499999761581421reflect, number 1 -----
- BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(96, 384, lebesgue_p=2, pruning=0, kernel_size=(3, 3), bias=False, padding_mode=reflect, t_invert=0.6499999761581421, bias=False, lr_bias=0.1538, ranking_param=3, delta=2, activation=exp)
- Triangle(power=1.4)
- MaxPool2d(kernel_size=4, stride=2, padding=1, dilation=1, ceil_mode=False)

 ----- Architecture Block BatchNorm2dSK38415362(3, 3)0.25reflect, number 2 -----
- BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(384, 1536, lebesgue_p=2, pruning=0, kernel_size=(3, 3), bias=False, padding_mode=reflect, t_invert=0.25, bias=False, lr_bias=0.4, ranking_param=3, delta=2, activation=exp)
- Triangle(power=1.0)
- AvgPool2d(kernel_size=2, stride=2, padding=0)

 ----- Architecture Block FlattenDropout(p=0.5, inplace=False)Linear(in_, number 3 -----
- Flatten(start_dim=1, end_dim=-1)
- Dropout(p=0.5, inplace=False)
- Linear(in_features=24576, out_features=4, bias=True)

 ********** Hebbian Unsupervised learning of blocks [0] **********
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
TARGETS BEFORE SUB:  tensor([3, 8, 8, 0, 6, 6, 1, 6, 3, 1, 0, 9, 5, 7, 9, 8, 5, 7, 8, 6],
       device='cuda:0')
TARGETS AFTER SUB:  tensor([6, 6, 1, 6, 1, 9, 9, 6, 9, 2, 9, 6, 6, 9, 2, 1, 9, 6, 6, 9])
[1, 2, 6, 9]
TARGETS AFTER CLEANER:  tensor([2, 2, 0, 2, 0, 3, 3, 2, 3, 1, 3, 2, 2, 3, 1, 0, 3, 2, 2, 3])
4000
<class 'dataset.FastCIFAR10'>
Dataset FastCIFAR10
    Number of datapoints: 4000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Test
    StandardTransform
Transform: Compose(
               ToTensor()
               Resize(size=(32, 32), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  tensor([6, 9, 9, 4, 1, 1, 2, 7, 8, 3, 4, 7, 7, 2, 9, 9, 9, 3, 2, 6],
       device='cuda:0')
TARGETS AFTER SUB:  tensor([6, 9, 9, 1, 1, 2, 2, 9, 9, 9, 2, 6, 6, 6, 2, 6, 9, 1, 2, 2])
[1, 2, 6, 9]
TARGETS AFTER CLEANER:  tensor([2, 3, 3, 0, 0, 1, 1, 3, 3, 3, 1, 2, 2, 2, 1, 2, 3, 0, 1, 1])
20000
<class 'dataset.FastCIFAR10'>
Dataset FastCIFAR10
    Number of datapoints: 20000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Train
    StandardTransform
Transform: Compose(
               ToTensor()
               Resize(size=(32, 32), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  tensor([6, 9, 9, 4, 1, 1, 2, 7, 8, 3, 4, 7, 7, 2, 9, 9, 9, 3, 2, 6],
       device='cuda:0')
TARGETS AFTER SUB:  tensor([6, 9, 9, 1, 1, 2, 2, 9, 9, 9, 2, 6, 6, 6, 2, 6, 9, 1, 2, 2])
[1, 2, 6, 9]
TARGETS AFTER CLEANER:  tensor([2, 3, 3, 0, 0, 1, 1, 3, 3, 3, 1, 2, 2, 2, 1, 2, 3, 0, 1, 1])
20000
<class 'dataset.FastCIFAR10'>
Dataset FastCIFAR10
    Number of datapoints: 20000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Train
    StandardTransform
Transform: ToTensor()
------------------------
INDICES:  20000
IMAGE SIZE: torch.Size([10, 3, 32, 32])
SAVING FOLDER FOR UNSUP:  C10_4C_CL
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 1.30e-01	time: 00:00:41	Acc_train 0.00	Acc_test 0.00	convergence: 2.40e+01	R1: 0	Info MB:0.000e+00/SB:0.000e+00/MW:1.525e-02/SW:4.848e-01/MR:3.957e+00/SR:1.418e+00/MeD:1.045e+00/MaD:4.379e+00/MW:0.567/MAW:0.433
|        0 |      1 |       2 |       3 |       4 |       5 |      6 |       7 |       8 |       9 |        10 |      11 |     12 |      13 |      14 |      15 |         16 |      17 |      18 |      19 |      20 |      21 |     22 |      23 |      24 |         25 |      26 |       27 |      28 |      29 |
|----------+--------+---------+---------+---------+---------+--------+---------+---------+---------+-----------+---------+--------+---------+---------+---------+------------+---------+---------+---------+---------+---------+--------+---------+---------+------------+---------+----------+---------+---------|
|   0.0988 |   0.11 |   0.103 |   0.148 |   0.142 |   0.119 |   0.14 |   0.178 |   0.128 |   0.142 |   0.00133 |   0.148 |   0.15 |   0.107 |   0.137 |   0.151 |   4.78e-05 |   0.146 |   0.138 |   0.144 |   0.163 |   0.123 |   0.13 |   0.172 |   0.168 |   3.38e-05 |   0.179 |   0.0627 |   0.142 |   0.153 |
|   2.53   |   2.89 |   2.65  |   4.41  |   4.14  |   3.21  |   4.05 |   5.94  |   3.56  |   4.14  |   1       |   4.42  |   4.51 |   2.8   |   3.93  |   4.58  |   1        |   4.34  |   3.98  |   4.23  |   5.14  |   3.37  |   3.64 |   5.62  |   5.41  |   1        |   6.01  |   1.62   |   4.16  |   4.64  |
|   0.61   |   0.51 |   0.53  |   0.6   |   0.64  |   0.72  |   0.46 |   0.56  |   0.64  |   0.54  |   2.73    |   0.56  |   0.55 |   0.52  |   0.61  |   0.45  |  15.39     |   0.58  |   0.52  |   0.62  |   0.62  |   0.55  |   0.56 |   0.58  |   0.59  |  22.41     |   0.42  |   0.88   |   0.52  |   0.52  |
| nan      | nan    | nan     | nan     | nan     | nan     | nan    | nan     | nan     | nan     | nan       | nan     | nan    | nan     | nan     | nan     | nan        | nan     | nan     | nan     | nan     | nan     | nan    | nan     | nan     | nan        | nan     | nan      | nan     | nan     |
| nan      | nan    | nan     | nan     | nan     | nan     | nan    | nan     | nan     | nan     | nan       | nan     | nan    | nan     | nan     | nan     | nan        | nan     | nan     | nan     | nan     | nan     | nan    | nan     | nan     | nan        | nan     | nan      | nan     | nan     |
| nan      | nan    | nan     | nan     | nan     | nan     | nan    | nan     | nan     | nan     | nan       | nan     | nan    | nan     | nan     | nan     | nan        | nan     | nan     | nan     | nan     | nan     | nan    | nan     | nan     | nan        | nan     | nan      | nan     | nan     |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/C10_4C_CL/models

 ********** Hebbian Unsupervised learning of blocks [1] **********
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
TARGETS BEFORE SUB:  tensor([3, 8, 8, 0, 6, 6, 1, 6, 3, 1, 0, 9, 5, 7, 9, 8, 5, 7, 8, 6],
       device='cuda:0')
TARGETS AFTER SUB:  tensor([6, 6, 1, 6, 1, 9, 9, 6, 9, 2, 9, 6, 6, 9, 2, 1, 9, 6, 6, 9])
[1, 2, 6, 9]
TARGETS AFTER CLEANER:  tensor([2, 2, 0, 2, 0, 3, 3, 2, 3, 1, 3, 2, 2, 3, 1, 0, 3, 2, 2, 3])
4000
<class 'dataset.FastCIFAR10'>
Dataset FastCIFAR10
    Number of datapoints: 4000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Test
    StandardTransform
Transform: Compose(
               ToTensor()
               Resize(size=(32, 32), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  tensor([6, 9, 9, 4, 1, 1, 2, 7, 8, 3, 4, 7, 7, 2, 9, 9, 9, 3, 2, 6],
       device='cuda:0')
TARGETS AFTER SUB:  tensor([6, 9, 9, 1, 1, 2, 2, 9, 9, 9, 2, 6, 6, 6, 2, 6, 9, 1, 2, 2])
[1, 2, 6, 9]
TARGETS AFTER CLEANER:  tensor([2, 3, 3, 0, 0, 1, 1, 3, 3, 3, 1, 2, 2, 2, 1, 2, 3, 0, 1, 1])
20000
<class 'dataset.FastCIFAR10'>
Dataset FastCIFAR10
    Number of datapoints: 20000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Train
    StandardTransform
Transform: Compose(
               ToTensor()
               Resize(size=(32, 32), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  tensor([6, 9, 9, 4, 1, 1, 2, 7, 8, 3, 4, 7, 7, 2, 9, 9, 9, 3, 2, 6],
       device='cuda:0')
TARGETS AFTER SUB:  tensor([6, 9, 9, 1, 1, 2, 2, 9, 9, 9, 2, 6, 6, 6, 2, 6, 9, 1, 2, 2])
[1, 2, 6, 9]
TARGETS AFTER CLEANER:  tensor([2, 3, 3, 0, 0, 1, 1, 3, 3, 3, 1, 2, 2, 2, 1, 2, 3, 0, 1, 1])
20000
<class 'dataset.FastCIFAR10'>
Dataset FastCIFAR10
    Number of datapoints: 20000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Train
    StandardTransform
Transform: ToTensor()
------------------------
INDICES:  20000
IMAGE SIZE: torch.Size([10, 3, 32, 32])
SAVING FOLDER FOR UNSUP:  C10_4C_CL
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 1.30e-01	time: 00:01:22	Acc_train 0.00	Acc_test 0.00	convergence: 2.40e+01	R1: 0	Info MB:0.000e+00/SB:0.000e+00/MW:4.918e-03/SW:1.821e-01/MR:5.189e+00/SR:1.320e+00/MeD:1.028e+00/MaD:4.189e+00/MW:0.529/MAW:0.471
|      0 |         1 |         2 |         3 |          4 |         5 |         6 |         7 |        8 |         9 |       10 |        11 |       12 |       13 |       14 |       15 |        16 |        17 |        18 |        19 |       20 |       21 |       22 |      23 |       24 |       25 |      26 |        27 |       28 |        29 |
|--------+-----------+-----------+-----------+------------+-----------+-----------+-----------+----------+-----------+----------+-----------+----------+----------+----------+----------+-----------+-----------+-----------+-----------+----------+----------+----------+---------+----------+----------+---------+-----------+----------+-----------|
|   0.01 |   0.00994 |   0.00854 |   0.00773 |   5.71e-05 |   0.00854 |   0.00939 |   0.00957 |   0.0107 |   0.00983 |   0.0105 |   0.00636 |   0.0103 |   0.0115 |   0.0107 |   0.0102 |   0.00792 |   0.00995 |   0.00506 |   0.00904 |   0.0121 |   0.0129 |   0.0103 |   0.012 |   0.0104 |   0.0114 |   0.011 |   0.00906 |   0.0124 |   0.00636 |
|   5.03 |   4.95    |   3.92    |   3.39    |   1        |   3.92    |   4.53    |   4.67    |   5.59   |   4.86    |   5.41   |   2.62    |   5.26   |   6.33   |   5.56   |   5.16   |   3.51    |   4.96    |   2.02    |   4.27    |   6.86   |   7.63   |   5.27   |   6.74  |   5.34   |   6.2    |   5.8   |   4.29    |   7.15   |   2.62    |
|   0.2  |   0.18    |   0.24    |   0.22    |   5.16     |   0.19    |   0.31    |   0.25    |   0.19   |   0.21    |   0.28   |   0.24    |   0.3    |   0.27   |   0.18   |   0.21   |   0.17    |   0.32    |   0.26    |   0.27    |   0.18   |   0.29   |   0.44   |   0.27  |   0.4    |   0.41   |   0.29  |   0.2     |   0.2    |   0.27    |
| nan    | nan       | nan       | nan       | nan        | nan       | nan       | nan       | nan      | nan       | nan      | nan       | nan      | nan      | nan      | nan      | nan       | nan       | nan       | nan       | nan      | nan      | nan      | nan     | nan      | nan      | nan     | nan       | nan      | nan       |
| nan    | nan       | nan       | nan       | nan        | nan       | nan       | nan       | nan      | nan       | nan      | nan       | nan      | nan      | nan      | nan      | nan       | nan       | nan       | nan       | nan      | nan      | nan      | nan     | nan      | nan      | nan     | nan       | nan      | nan       |
| nan    | nan       | nan       | nan       | nan        | nan       | nan       | nan       | nan      | nan       | nan      | nan       | nan      | nan      | nan      | nan      | nan       | nan       | nan       | nan       | nan      | nan      | nan      | nan     | nan      | nan      | nan     | nan       | nan      | nan       |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/C10_4C_CL/models

 ********** Hebbian Unsupervised learning of blocks [2] **********
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
TARGETS BEFORE SUB:  tensor([3, 8, 8, 0, 6, 6, 1, 6, 3, 1, 0, 9, 5, 7, 9, 8, 5, 7, 8, 6],
       device='cuda:0')
TARGETS AFTER SUB:  tensor([6, 6, 1, 6, 1, 9, 9, 6, 9, 2, 9, 6, 6, 9, 2, 1, 9, 6, 6, 9])
[1, 2, 6, 9]
TARGETS AFTER CLEANER:  tensor([2, 2, 0, 2, 0, 3, 3, 2, 3, 1, 3, 2, 2, 3, 1, 0, 3, 2, 2, 3])
4000
<class 'dataset.FastCIFAR10'>
Dataset FastCIFAR10
    Number of datapoints: 4000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Test
    StandardTransform
Transform: Compose(
               ToTensor()
               Resize(size=(32, 32), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  tensor([6, 9, 9, 4, 1, 1, 2, 7, 8, 3, 4, 7, 7, 2, 9, 9, 9, 3, 2, 6],
       device='cuda:0')
TARGETS AFTER SUB:  tensor([6, 9, 9, 1, 1, 2, 2, 9, 9, 9, 2, 6, 6, 6, 2, 6, 9, 1, 2, 2])
[1, 2, 6, 9]
TARGETS AFTER CLEANER:  tensor([2, 3, 3, 0, 0, 1, 1, 3, 3, 3, 1, 2, 2, 2, 1, 2, 3, 0, 1, 1])
20000
<class 'dataset.FastCIFAR10'>
Dataset FastCIFAR10
    Number of datapoints: 20000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Train
    StandardTransform
Transform: Compose(
               ToTensor()
               Resize(size=(32, 32), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  tensor([6, 9, 9, 4, 1, 1, 2, 7, 8, 3, 4, 7, 7, 2, 9, 9, 9, 3, 2, 6],
       device='cuda:0')
TARGETS AFTER SUB:  tensor([6, 9, 9, 1, 1, 2, 2, 9, 9, 9, 2, 6, 6, 6, 2, 6, 9, 1, 2, 2])
[1, 2, 6, 9]
TARGETS AFTER CLEANER:  tensor([2, 3, 3, 0, 0, 1, 1, 3, 3, 3, 1, 2, 2, 2, 1, 2, 3, 0, 1, 1])
20000
<class 'dataset.FastCIFAR10'>
Dataset FastCIFAR10
    Number of datapoints: 20000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Train
    StandardTransform
Transform: ToTensor()
------------------------
INDICES:  20000
IMAGE SIZE: torch.Size([10, 3, 32, 32])
SAVING FOLDER FOR UNSUP:  C10_4C_CL
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 4.23e-02	time: 00:02:05	Acc_train 0.00	Acc_test 0.00	convergence: 1.80e+01	R1: 0	Info MB:0.000e+00/SB:0.000e+00/MW:3.276e-03/SW:3.257e-01/MR:1.897e+01/SR:2.616e+00/MeD:2.052e+00/MaD:1.793e+01/MW:0.416/MAW:0.584
|        0 |        1 |        2 |        3 |        4 |        5 |        6 |        7 |        8 |        9 |       10 |       11 |       12 |       13 |       14 |       15 |       16 |       17 |       18 |       19 |       20 |       21 |       22 |       23 |       24 |       25 |       26 |       27 |       28 |       29 |
|----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------|
|   0.0451 |   0.0449 |   0.0441 |   0.0438 |   0.0402 |   0.0438 |   0.0437 |   0.0355 |   0.0408 |   0.0477 |   0.0386 |   0.0445 |   0.0371 |   0.0393 |   0.0442 |   0.0381 |   0.0413 |   0.0457 |   0.0457 |   0.0442 |   0.0438 |   0.0402 |   0.0358 |   0.0438 |   0.0389 |   0.0339 |   0.0415 |   0.0465 |   0.0392 |   0.0445 |
|  21.34   |  21.18   |  20.41   |  20.14   |  17.18   |  20.17   |  20.13   |  13.59   |  17.64   |  23.73   |  15.89   |  20.82   |  14.77   |  16.42   |  20.5    |  15.49   |  18.05   |  21.9    |  21.9    |  20.57   |  20.15   |  17.15   |  13.81   |  20.23   |  16.1    |  12.52   |  18.23   |  22.66   |  16.4    |  20.76   |
|   0.04   |   0.03   |   0.05   |   0.06   |   0.03   |   0.04   |   0.07   |   0.03   |   0.06   |   0.04   |   0.08   |   0.08   |   0.18   |   0.06   |   0.17   |   0.05   |   0.05   |   0.08   |   0.07   |   0.03   |   0.07   |   0.05   |   0.14   |   0.04   |   0.06   |   0.06   |   0.06   |   0.04   |   0.04   |   0.04   |
| nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      |
| nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      |
| nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/C10_4C_CL/models

 ********** Supervised learning of blocks [3] **********
SAVING FOLDER FOR SUP:  C10_4C_CL
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
TARGETS BEFORE SUB:  tensor([3, 8, 8, 0, 6, 6, 1, 6, 3, 1, 0, 9, 5, 7, 9, 8, 5, 7, 8, 6],
       device='cuda:0')
TARGETS AFTER SUB:  tensor([6, 6, 1, 6, 1, 9, 9, 6, 9, 2, 9, 6, 6, 9, 2, 1, 9, 6, 6, 9])
[1, 2, 6, 9]
TARGETS AFTER CLEANER:  tensor([2, 2, 0, 2, 0, 3, 3, 2, 3, 1, 3, 2, 2, 3, 1, 0, 3, 2, 2, 3])
4000
<class 'dataset.FastCIFAR10'>
Dataset FastCIFAR10
    Number of datapoints: 4000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Test
    StandardTransform
Transform: Compose(
               ToTensor()
               Resize(size=(32, 32), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  tensor([6, 9, 9, 4, 1, 1, 2, 7, 8, 3, 4, 7, 7, 2, 9, 9, 9, 3, 2, 6],
       device='cuda:0')
TARGETS AFTER SUB:  tensor([6, 9, 9, 1, 1, 2, 2, 9, 9, 9, 2, 6, 6, 6, 2, 6, 9, 1, 2, 2])
[1, 2, 6, 9]
TARGETS AFTER CLEANER:  tensor([2, 3, 3, 0, 0, 1, 1, 3, 3, 3, 1, 2, 2, 2, 1, 2, 3, 0, 1, 1])
20000
<class 'dataset.FastCIFAR10'>
Dataset FastCIFAR10
    Number of datapoints: 20000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Train
    StandardTransform
Transform: Compose(
               ToTensor()
               Resize(size=(32, 32), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  tensor([6, 9, 9, 4, 1, 1, 2, 7, 8, 3, 4, 7, 7, 2, 9, 9, 9, 3, 2, 6],
       device='cuda:0')
TARGETS AFTER SUB:  tensor([6, 9, 9, 1, 1, 2, 2, 9, 9, 9, 2, 6, 6, 6, 2, 6, 9, 1, 2, 2])
[1, 2, 6, 9]
TARGETS AFTER CLEANER:  tensor([2, 3, 3, 0, 0, 1, 1, 3, 3, 3, 1, 2, 2, 2, 1, 2, 3, 0, 1, 1])
20000
<class 'dataset.FastCIFAR10'>
Dataset FastCIFAR10
    Number of datapoints: 20000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Train
    StandardTransform
Transform: ToTensor()
------------------------
INDICES:  20000
IMAGE SIZE: torch.Size([64, 3, 32, 32])
Epoch: [1/50]	lr: 1.00e-03	time: 00:02:41	Loss_train 0.17963	Acc_train 77.68	/	Loss_test 0.00549	Acc_test 86.53
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/C10_4C_CL/models
Epoch: [10/50]	lr: 1.00e-03	time: 00:02:54	Loss_train 0.13856	Acc_train 87.53	/	Loss_test 0.01074	Acc_test 89.05
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/C10_4C_CL/models
Epoch: [20/50]	lr: 2.50e-04	time: 00:03:07	Loss_train 0.08927	Acc_train 92.21	/	Loss_test 0.00765	Acc_test 91.07
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/C10_4C_CL/models
Epoch: [30/50]	lr: 1.25e-04	time: 00:03:20	Loss_train 0.06237	Acc_train 93.70	/	Loss_test 0.00721	Acc_test 91.43
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/C10_4C_CL/models
Epoch: [40/50]	lr: 3.13e-05	time: 00:03:34	Loss_train 0.04935	Acc_train 94.44	/	Loss_test 0.00690	Acc_test 91.18
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/C10_4C_CL/models
Epoch: [50/50]	lr: 7.81e-06	time: 00:03:47	Loss_train 0.04659	Acc_train 94.63	/	Loss_test 0.00676	Acc_test 91.38
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/C10_4C_CL/models
RESULT:  {'train_loss': 0.04659469053149223, 'train_acc': 94.62550282478333, 'test_loss': 0.006758906412869692, 'test_acc': 91.375, 'convergence': 17.969764709472656, 'R1': 0, 'dataset_sup': {'name': 'CIFAR10', 'noise_std': 0, 'channels': 3, 'width': 32, 'height': 32, 'validation_split': 0.2, 'training_sample': 50000, 'testing_sample': 10000, 'out_channels': 4, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 64, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 50, 'print_freq': 10, 'validation': False, 'continual_learning': True, 'old_dataset_size': 32, 'n_classes': 4, 'selected_classes': [1, 2, 6, 9]}, 'dataset_unsup': {'name': 'CIFAR10', 'noise_std': 0, 'channels': 3, 'width': 32, 'height': 32, 'validation_split': 0.2, 'training_sample': 50000, 'testing_sample': 10000, 'out_channels': 4, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 10, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 1, 'print_freq': 10, 'validation': False, 'continual_learning': True, 'old_dataset_size': 32, 'n_classes': 4, 'selected_classes': [1, 2, 6, 9]}, 'train_config': {'t0': {'blocks': [0], 'mode': 'unsupervised', 'lr': 0.08, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 10}, 't2': {'blocks': [1], 'mode': 'unsupervised', 'lr': 0.005, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 10}, 't4': {'blocks': [2], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 10}, 't6': {'blocks': [3], 'mode': 'supervised', 'lr': 0.001, 'nb_epoch': 50, 'batch_size': 64, 'print_freq': 10}}}
IN R1:  {'R1': {'train_loss': 0.04659469053149223, 'train_acc': 94.62550282478333, 'test_loss': 0.006758906412869692, 'test_acc': 91.375, 'convergence': 17.969764709472656, 'R1': 0, 'dataset_sup': {'name': 'CIFAR10', 'noise_std': 0, 'channels': 3, 'width': 32, 'height': 32, 'validation_split': 0.2, 'training_sample': 50000, 'testing_sample': 10000, 'out_channels': 4, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 64, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 50, 'print_freq': 10, 'validation': False, 'continual_learning': True, 'old_dataset_size': 32, 'n_classes': 4, 'selected_classes': [1, 2, 6, 9]}, 'dataset_unsup': {'name': 'CIFAR10', 'noise_std': 0, 'channels': 3, 'width': 32, 'height': 32, 'validation_split': 0.2, 'training_sample': 50000, 'testing_sample': 10000, 'out_channels': 4, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 10, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 1, 'print_freq': 10, 'validation': False, 'continual_learning': True, 'old_dataset_size': 32, 'n_classes': 4, 'selected_classes': [1, 2, 6, 9]}, 'train_config': {'t0': {'blocks': [0], 'mode': 'unsupervised', 'lr': 0.08, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 10}, 't2': {'blocks': [1], 'mode': 'unsupervised', 'lr': 0.005, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 10}, 't4': {'blocks': [2], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 10}, 't6': {'blocks': [3], 'mode': 'supervised', 'lr': 0.001, 'nb_epoch': 50, 'batch_size': 64, 'print_freq': 10}}}}
SEED:  0
block 0, size : 96 16 16
range = 2.886751345948129
block 1, size : 384 8 8
range = 0.8505172717997146
block 2, size : 1536 4 4
range = 0.4252586358998573
range = 0.11048543456039805
The device used will be: 
True
cuda:0
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.08, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 1.0, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 2, 'weight_init': 'normal', 'weight_init_range': 2.886751345948129, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 96, 'kernel_size': 5, 'in_channels': 3, 'lr_scheduler': {'lr': 0.08, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0002, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.5}}
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.005, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.65, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'normal', 'weight_init_range': 0.8505172717997146, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 384, 'kernel_size': 3, 'in_channels': 96, 'lr_scheduler': {'lr': 0.005, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0002, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.5}}
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.01, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.25, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'normal', 'weight_init_range': 0.4252586358998573, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 1536, 'kernel_size': 3, 'in_channels': 384, 'lr_scheduler': {'lr': 0.01, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0002, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.5}}
CONFIG: {'arch': 'MLP', 'lr': 0.05, 'adaptive': True, 'lr_sup': 0.001, 'speed': 0.4, 'lr_div': 100, 'lebesgue_p': 2, 't_invert': 10, 'beta': 0.01, 'power': 4.5, 'ranking_param': 3, 'delta': 0.1, 'hebbian': False, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'lr_bias': 600, 'softness': 'soft', 'soft_activation_fn': 'exp', 'plasticity': 'SoftHebb', 'metric_mode': 'unsupervised', 'weight_init': 'positive', 'weight_init_range': 0.11048543456039805, 'weight_init_offset': 0, 'weight_decay': 0, 'radius': 10, 'power_lr': 0.2, 'out_channels': 4, 'in_channels': 24576, 'old_channels': 1536, 'lr_scheduler': {'decay': 'cste', 'lr': 0.1}}

 Model C10_4C_CL loaded successfuly with best perf



 ----- Architecture Block BatchNorm2dSK3962(5, 5)1.0reflect, number 0 -----
- BatchNorm2d(3, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(3, 96, lebesgue_p=2, pruning=0, kernel_size=(5, 5), bias=False, padding_mode=reflect, t_invert=1.0, bias=False, lr_bias=0.1, ranking_param=3, delta=2, activation=exp)
- Triangle(power=0.7)
- MaxPool2d(kernel_size=4, stride=2, padding=1, dilation=1, ceil_mode=False)

 ----- Architecture Block BatchNorm2dSK963842(3, 3)0.6499999761581421reflect, number 1 -----
- BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(96, 384, lebesgue_p=2, pruning=0, kernel_size=(3, 3), bias=False, padding_mode=reflect, t_invert=0.6499999761581421, bias=False, lr_bias=0.1538, ranking_param=3, delta=2, activation=exp)
- Triangle(power=1.4)
- MaxPool2d(kernel_size=4, stride=2, padding=1, dilation=1, ceil_mode=False)

 ----- Architecture Block BatchNorm2dSK38415362(3, 3)0.25reflect, number 2 -----
- BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(384, 1536, lebesgue_p=2, pruning=0, kernel_size=(3, 3), bias=False, padding_mode=reflect, t_invert=0.25, bias=False, lr_bias=0.4, ranking_param=3, delta=2, activation=exp)
- Triangle(power=1.0)
- AvgPool2d(kernel_size=2, stride=2, padding=0)

 ----- Architecture Block FlattenDropout(p=0.5, inplace=False)Linear(in_, number 3 -----
- Flatten(start_dim=1, end_dim=-1)
- Dropout(p=0.5, inplace=False)
- Linear(in_features=24576, out_features=4, bias=True)

 ********** Hebbian Unsupervised learning of blocks [0] **********
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
TARGETS BEFORE SUB:  tensor([3, 8, 8, 0, 6, 6, 1, 6, 3, 1, 0, 9, 5, 7, 9, 8, 5, 7, 8, 6],
       device='cuda:0')
TARGETS AFTER SUB:  tensor([3, 3, 5, 7, 5, 7, 7, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 3, 7, 3])
[3, 4, 5, 7]
TARGETS AFTER CLEANER:  tensor([0, 0, 2, 3, 2, 3, 3, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 0, 3, 0])
4000
<class 'dataset.FastCIFAR10'>
Dataset FastCIFAR10
    Number of datapoints: 4000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Test
    StandardTransform
Transform: Compose(
               ToTensor()
               Resize(size=(32, 32), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  tensor([6, 9, 9, 4, 1, 1, 2, 7, 8, 3, 4, 7, 7, 2, 9, 9, 9, 3, 2, 6],
       device='cuda:0')
TARGETS AFTER SUB:  tensor([4, 7, 3, 4, 7, 7, 3, 4, 3, 3, 5, 4, 3, 4, 3, 7, 3, 3, 5, 7])
[3, 4, 5, 7]
TARGETS AFTER CLEANER:  tensor([1, 3, 0, 1, 3, 3, 0, 1, 0, 0, 2, 1, 0, 1, 0, 3, 0, 0, 2, 3])
20000
<class 'dataset.FastCIFAR10'>
Dataset FastCIFAR10
    Number of datapoints: 20000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Train
    StandardTransform
Transform: Compose(
               ToTensor()
               Resize(size=(32, 32), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  tensor([6, 9, 9, 4, 1, 1, 2, 7, 8, 3, 4, 7, 7, 2, 9, 9, 9, 3, 2, 6],
       device='cuda:0')
TARGETS AFTER SUB:  tensor([4, 7, 3, 4, 7, 7, 3, 4, 3, 3, 5, 4, 3, 4, 3, 7, 3, 3, 5, 7])
[3, 4, 5, 7]
TARGETS AFTER CLEANER:  tensor([1, 3, 0, 1, 3, 3, 0, 1, 0, 0, 2, 1, 0, 1, 0, 3, 0, 0, 2, 3])
20000
<class 'dataset.FastCIFAR10'>
Dataset FastCIFAR10
    Number of datapoints: 20000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Train
    StandardTransform
Transform: ToTensor()
------------------------
INDICES:  20000
IMAGE SIZE: torch.Size([10, 3, 32, 32])
SAVING FOLDER FOR UNSUP:  C10_4C_CL
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 1.47e-01	time: 00:00:40	Acc_train 0.00	Acc_test 0.00	convergence: 2.40e+01	R1: 0	Info MB:0.000e+00/SB:0.000e+00/MW:9.441e-03/SW:6.078e-01/MR:4.866e+00/SR:2.018e+00/MeD:1.411e+00/MaD:8.613e+00/MW:0.598/MAW:0.402
|       0 |       1 |       2 |       3 |       4 |       5 |       6 |       7 |       8 |       9 |        10 |      11 |      12 |      13 |      14 |      15 |         16 |      17 |      18 |      19 |      20 |      21 |     22 |      23 |     24 |         25 |      26 |      27 |      28 |      29 |
|---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+-----------+---------+---------+---------+---------+---------+------------+---------+---------+---------+---------+---------+--------+---------+--------+------------+---------+---------+---------+---------|
|   0.131 |   0.124 |   0.118 |   0.165 |   0.147 |   0.143 |   0.179 |   0.206 |   0.172 |   0.152 |   0.00114 |   0.163 |   0.207 |   0.117 |   0.135 |   0.181 |   5.52e-05 |   0.159 |   0.149 |   0.187 |   0.171 |   0.154 |   0.16 |   0.172 |   0.19 |   4.37e-05 |   0.232 |   0.133 |   0.151 |   0.188 |
|   3.67  |   3.4   |   3.16  |   5.24  |   4.39  |   4.19  |   6.01  |   7.65  |   5.64  |   4.61  |   1       |   5.13  |   7.67  |   3.16  |   3.83  |   6.12  |   1        |   4.97  |   4.48  |   6.44  |   5.59  |   4.71  |   5.02 |   5.65  |   6.66 |   1        |   9.42  |   3.78  |   4.55  |   6.51  |
|   0.58  |   0.48  |   0.54  |   0.56  |   0.5   |   0.54  |   0.42  |   0.5   |   0.51  |   0.44  |   3.26    |   0.53  |   0.47  |   0.59  |   0.46  |   0.49  |  19.83     |   0.53  |   0.47  |   0.5   |   0.51  |   0.46  |   0.48 |   0.53  |   0.53 |  26.12     |   0.43  |   0.64  |   0.58  |   0.51  |
| nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan       | nan     | nan     | nan     | nan     | nan     | nan        | nan     | nan     | nan     | nan     | nan     | nan    | nan     | nan    | nan        | nan     | nan     | nan     | nan     |
| nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan       | nan     | nan     | nan     | nan     | nan     | nan        | nan     | nan     | nan     | nan     | nan     | nan    | nan     | nan    | nan        | nan     | nan     | nan     | nan     |
| nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan       | nan     | nan     | nan     | nan     | nan     | nan        | nan     | nan     | nan     | nan     | nan     | nan    | nan     | nan    | nan        | nan     | nan     | nan     | nan     |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/C10_4C_CL/models

 ********** Hebbian Unsupervised learning of blocks [1] **********
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
TARGETS BEFORE SUB:  tensor([3, 8, 8, 0, 6, 6, 1, 6, 3, 1, 0, 9, 5, 7, 9, 8, 5, 7, 8, 6],
       device='cuda:0')
TARGETS AFTER SUB:  tensor([3, 3, 5, 7, 5, 7, 7, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 3, 7, 3])
[3, 4, 5, 7]
TARGETS AFTER CLEANER:  tensor([0, 0, 2, 3, 2, 3, 3, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 0, 3, 0])
4000
<class 'dataset.FastCIFAR10'>
Dataset FastCIFAR10
    Number of datapoints: 4000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Test
    StandardTransform
Transform: Compose(
               ToTensor()
               Resize(size=(32, 32), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  tensor([6, 9, 9, 4, 1, 1, 2, 7, 8, 3, 4, 7, 7, 2, 9, 9, 9, 3, 2, 6],
       device='cuda:0')
TARGETS AFTER SUB:  tensor([4, 7, 3, 4, 7, 7, 3, 4, 3, 3, 5, 4, 3, 4, 3, 7, 3, 3, 5, 7])
[3, 4, 5, 7]
TARGETS AFTER CLEANER:  tensor([1, 3, 0, 1, 3, 3, 0, 1, 0, 0, 2, 1, 0, 1, 0, 3, 0, 0, 2, 3])
20000
<class 'dataset.FastCIFAR10'>
Dataset FastCIFAR10
    Number of datapoints: 20000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Train
    StandardTransform
Transform: Compose(
               ToTensor()
               Resize(size=(32, 32), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  tensor([6, 9, 9, 4, 1, 1, 2, 7, 8, 3, 4, 7, 7, 2, 9, 9, 9, 3, 2, 6],
       device='cuda:0')
TARGETS AFTER SUB:  tensor([4, 7, 3, 4, 7, 7, 3, 4, 3, 3, 5, 4, 3, 4, 3, 7, 3, 3, 5, 7])
[3, 4, 5, 7]
TARGETS AFTER CLEANER:  tensor([1, 3, 0, 1, 3, 3, 0, 1, 0, 0, 2, 1, 0, 1, 0, 3, 0, 0, 2, 3])
20000
<class 'dataset.FastCIFAR10'>
Dataset FastCIFAR10
    Number of datapoints: 20000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Train
    StandardTransform
Transform: ToTensor()
------------------------
INDICES:  20000
IMAGE SIZE: torch.Size([10, 3, 32, 32])
SAVING FOLDER FOR UNSUP:  C10_4C_CL
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 1.47e-01	time: 00:01:20	Acc_train 0.00	Acc_test 0.00	convergence: 2.40e+01	R1: 0	Info MB:0.000e+00/SB:0.000e+00/MW:7.032e-03/SW:1.574e-01/MR:4.395e+00/SR:1.466e+00/MeD:1.183e+00/MaD:3.395e+00/MW:0.557/MAW:0.443
|         0 |        1 |         2 |         3 |          4 |         5 |         6 |         7 |         8 |        9 |       10 |        11 |        12 |       13 |       14 |        15 |       16 |       17 |       18 |       19 |       20 |        21 |       22 |       23 |        24 |       25 |       26 |        27 |       28 |        29 |
|-----------+----------+-----------+-----------+------------+-----------+-----------+-----------+-----------+----------+----------+-----------+-----------+----------+----------+-----------+----------+----------+----------+----------+----------+-----------+----------+----------+-----------+----------+----------+-----------+----------+-----------|
|   0.00363 |   0.0086 |   0.00475 |   0.00427 |   2.01e-05 |   0.00887 |   0.00618 |   0.00608 |   0.00967 |   0.0092 |   0.0106 |   0.00389 |   0.00945 |   0.0106 |   0.0107 |   0.00792 |   0.0107 |   0.0067 |   0.0015 |   0.0107 |   0.0108 |   0.00963 |   0.0101 |   0.0106 |   0.00949 |   0.0092 |   0.0121 |   0.00851 |   0.0118 |   0.00557 |
|   1.53    |   3.96   |   1.9     |   1.73    |   1        |   4.15    |   2.53    |   2.48    |   4.74    |   4.38   |   5.48   |   1.61    |   4.57    |   5.47   |   5.56   |   3.51    |   5.54   |   2.79   |   1.09   |   5.58   |   5.63   |   4.71    |   5.08   |   5.52   |   4.61    |   4.38   |   6.84   |   3.9     |   6.59   |   2.24    |
|   0.24    |   0.17   |   0.24    |   0.12    |  12.24     |   0.12    |   0.25    |   0.17    |   0.16    |   0.19   |   0.22   |   0.15    |   0.22    |   0.19   |   0.17   |   0.13    |   0.12   |   0.18   |   0.15   |   0.17   |   0.2    |   0.13    |   0.17   |   0.2    |   0.16    |   0.23   |   0.21   |   0.14    |   0.21   |   0.13    |
| nan       | nan      | nan       | nan       | nan        | nan       | nan       | nan       | nan       | nan      | nan      | nan       | nan       | nan      | nan      | nan       | nan      | nan      | nan      | nan      | nan      | nan       | nan      | nan      | nan       | nan      | nan      | nan       | nan      | nan       |
| nan       | nan      | nan       | nan       | nan        | nan       | nan       | nan       | nan       | nan      | nan      | nan       | nan       | nan      | nan      | nan       | nan      | nan      | nan      | nan      | nan      | nan       | nan      | nan      | nan       | nan      | nan      | nan       | nan      | nan       |
| nan       | nan      | nan       | nan       | nan        | nan       | nan       | nan       | nan       | nan      | nan      | nan       | nan       | nan      | nan      | nan       | nan      | nan      | nan      | nan      | nan      | nan       | nan      | nan      | nan       | nan      | nan      | nan       | nan      | nan       |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/C10_4C_CL/models

 ********** Hebbian Unsupervised learning of blocks [2] **********
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
TARGETS BEFORE SUB:  tensor([3, 8, 8, 0, 6, 6, 1, 6, 3, 1, 0, 9, 5, 7, 9, 8, 5, 7, 8, 6],
       device='cuda:0')
TARGETS AFTER SUB:  tensor([3, 3, 5, 7, 5, 7, 7, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 3, 7, 3])
[3, 4, 5, 7]
TARGETS AFTER CLEANER:  tensor([0, 0, 2, 3, 2, 3, 3, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 0, 3, 0])
4000
<class 'dataset.FastCIFAR10'>
Dataset FastCIFAR10
    Number of datapoints: 4000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Test
    StandardTransform
Transform: Compose(
               ToTensor()
               Resize(size=(32, 32), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  tensor([6, 9, 9, 4, 1, 1, 2, 7, 8, 3, 4, 7, 7, 2, 9, 9, 9, 3, 2, 6],
       device='cuda:0')
TARGETS AFTER SUB:  tensor([4, 7, 3, 4, 7, 7, 3, 4, 3, 3, 5, 4, 3, 4, 3, 7, 3, 3, 5, 7])
[3, 4, 5, 7]
TARGETS AFTER CLEANER:  tensor([1, 3, 0, 1, 3, 3, 0, 1, 0, 0, 2, 1, 0, 1, 0, 3, 0, 0, 2, 3])
20000
<class 'dataset.FastCIFAR10'>
Dataset FastCIFAR10
    Number of datapoints: 20000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Train
    StandardTransform
Transform: Compose(
               ToTensor()
               Resize(size=(32, 32), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  tensor([6, 9, 9, 4, 1, 1, 2, 7, 8, 3, 4, 7, 7, 2, 9, 9, 9, 3, 2, 6],
       device='cuda:0')
TARGETS AFTER SUB:  tensor([4, 7, 3, 4, 7, 7, 3, 4, 3, 3, 5, 4, 3, 4, 3, 7, 3, 3, 5, 7])
[3, 4, 5, 7]
TARGETS AFTER CLEANER:  tensor([1, 3, 0, 1, 3, 3, 0, 1, 0, 0, 2, 1, 0, 1, 0, 3, 0, 0, 2, 3])
20000
<class 'dataset.FastCIFAR10'>
Dataset FastCIFAR10
    Number of datapoints: 20000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Train
    StandardTransform
Transform: ToTensor()
------------------------
INDICES:  20000
IMAGE SIZE: torch.Size([10, 3, 32, 32])
SAVING FOLDER FOR UNSUP:  C10_4C_CL
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 4.06e-02	time: 00:02:03	Acc_train 0.00	Acc_test 0.00	convergence: 1.65e+01	R1: 1	Info MB:0.000e+00/SB:0.000e+00/MW:8.016e-03/SW:2.999e-01/MR:1.752e+01/SR:1.985e+00/MeD:1.541e+00/MaD:1.652e+01/MW:0.439/MAW:0.561
|        0 |       1 |        2 |        3 |        4 |        5 |        6 |        7 |        8 |        9 |       10 |       11 |       12 |       13 |       14 |       15 |       16 |       17 |       18 |       19 |       20 |       21 |       22 |       23 |       24 |       25 |       26 |       27 |       28 |       29 |
|----------+---------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------|
|   0.0411 |   0.046 |   0.0416 |   0.0417 |   0.0403 |   0.0412 |   0.0398 |   0.0393 |   0.0389 |   0.0457 |   0.0394 |   0.0405 |   0.0398 |   0.0409 |   0.0396 |   0.0361 |   0.0383 |   0.0392 |   0.0422 |   0.0438 |   0.0406 |   0.0398 |   0.0382 |   0.0414 |   0.0377 |   0.0384 |   0.0431 |   0.0435 |   0.0373 |   0.0414 |
|  17.91   |  22.2   |  18.33   |  18.38   |  17.22   |  17.99   |  16.83   |  16.45   |  16.1    |  21.92   |  16.51   |  17.43   |  16.87   |  17.75   |  16.66   |  14.01   |  15.66   |  16.37   |  18.82   |  20.2    |  17.49   |  16.82   |  15.62   |  18.11   |  15.18   |  15.71   |  19.58   |  19.9    |  14.93   |  18.16   |
|   0.05   |   0.04  |   0.07   |   0.08   |   0.03   |   0.03   |   0.07   |   0.02   |   0.06   |   0.07   |   0.09   |   0.05   |   0.07   |   0.03   |   0.08   |   0.04   |   0.05   |   0.08   |   0.06   |   0.04   |   0.06   |   0.06   |   0.04   |   0.08   |   0.06   |   0.05   |   0.08   |   0.08   |   0.05   |   0.08   |
| nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      |
| nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      |
| nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/C10_4C_CL/models

 ********** Supervised learning of blocks [3] **********
SAVING FOLDER FOR SUP:  C10_4C_CL
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
TARGETS BEFORE SUB:  tensor([3, 8, 8, 0, 6, 6, 1, 6, 3, 1, 0, 9, 5, 7, 9, 8, 5, 7, 8, 6],
       device='cuda:0')
TARGETS AFTER SUB:  tensor([3, 3, 5, 7, 5, 7, 7, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 3, 7, 3])
[3, 4, 5, 7]
TARGETS AFTER CLEANER:  tensor([0, 0, 2, 3, 2, 3, 3, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 0, 3, 0])
4000
<class 'dataset.FastCIFAR10'>
Dataset FastCIFAR10
    Number of datapoints: 4000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Test
    StandardTransform
Transform: Compose(
               ToTensor()
               Resize(size=(32, 32), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  tensor([6, 9, 9, 4, 1, 1, 2, 7, 8, 3, 4, 7, 7, 2, 9, 9, 9, 3, 2, 6],
       device='cuda:0')
TARGETS AFTER SUB:  tensor([4, 7, 3, 4, 7, 7, 3, 4, 3, 3, 5, 4, 3, 4, 3, 7, 3, 3, 5, 7])
[3, 4, 5, 7]
TARGETS AFTER CLEANER:  tensor([1, 3, 0, 1, 3, 3, 0, 1, 0, 0, 2, 1, 0, 1, 0, 3, 0, 0, 2, 3])
20000
<class 'dataset.FastCIFAR10'>
Dataset FastCIFAR10
    Number of datapoints: 20000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Train
    StandardTransform
Transform: Compose(
               ToTensor()
               Resize(size=(32, 32), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  tensor([6, 9, 9, 4, 1, 1, 2, 7, 8, 3, 4, 7, 7, 2, 9, 9, 9, 3, 2, 6],
       device='cuda:0')
TARGETS AFTER SUB:  tensor([4, 7, 3, 4, 7, 7, 3, 4, 3, 3, 5, 4, 3, 4, 3, 7, 3, 3, 5, 7])
[3, 4, 5, 7]
TARGETS AFTER CLEANER:  tensor([1, 3, 0, 1, 3, 3, 0, 1, 0, 0, 2, 1, 0, 1, 0, 3, 0, 0, 2, 3])
20000
<class 'dataset.FastCIFAR10'>
Dataset FastCIFAR10
    Number of datapoints: 20000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Train
    StandardTransform
Transform: ToTensor()
------------------------
INDICES:  20000
IMAGE SIZE: torch.Size([64, 3, 32, 32])
Epoch: [1/50]	lr: 1.00e-03	time: 00:02:39	Loss_train 0.80169	Acc_train 57.24	/	Loss_test 0.02644	Acc_test 68.93
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/C10_4C_CL/models
Epoch: [10/50]	lr: 1.00e-03	time: 00:02:51	Loss_train 0.37434	Acc_train 73.05	/	Loss_test 0.01983	Acc_test 75.75
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/C10_4C_CL/models
Epoch: [20/50]	lr: 2.50e-04	time: 00:03:05	Loss_train 0.22754	Acc_train 79.59	/	Loss_test 0.01464	Acc_test 78.32
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/C10_4C_CL/models
Epoch: [30/50]	lr: 1.25e-04	time: 00:03:18	Loss_train 0.16864	Acc_train 81.74	/	Loss_test 0.01333	Acc_test 78.93
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/C10_4C_CL/models
Epoch: [40/50]	lr: 3.13e-05	time: 00:03:32	Loss_train 0.14182	Acc_train 82.99	/	Loss_test 0.01226	Acc_test 79.38
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/C10_4C_CL/models
Epoch: [50/50]	lr: 7.81e-06	time: 00:03:45	Loss_train 0.13429	Acc_train 83.31	/	Loss_test 0.01198	Acc_test 79.55
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/C10_4C_CL/models
RESULT:  {'train_loss': 0.13429495692253113, 'train_acc': 83.30699801445007, 'test_loss': 0.011980300769209862, 'test_acc': 79.55000305175781, 'convergence': 16.521926879882812, 'R1': 1, 'dataset_sup': {'name': 'CIFAR10', 'noise_std': 0, 'channels': 3, 'width': 32, 'height': 32, 'validation_split': 0.2, 'training_sample': 50000, 'testing_sample': 10000, 'out_channels': 4, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 64, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 50, 'print_freq': 10, 'validation': False, 'continual_learning': True, 'old_dataset_size': 32, 'n_classes': 4, 'selected_classes': [3, 4, 5, 7]}, 'dataset_unsup': {'name': 'CIFAR10', 'noise_std': 0, 'channels': 3, 'width': 32, 'height': 32, 'validation_split': 0.2, 'training_sample': 50000, 'testing_sample': 10000, 'out_channels': 4, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 10, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 1, 'print_freq': 10, 'validation': False, 'continual_learning': True, 'old_dataset_size': 32, 'n_classes': 4, 'selected_classes': [3, 4, 5, 7]}, 'train_config': {'t0': {'blocks': [0], 'mode': 'unsupervised', 'lr': 0.08, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 10}, 't2': {'blocks': [1], 'mode': 'unsupervised', 'lr': 0.005, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 10}, 't4': {'blocks': [2], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 10}, 't6': {'blocks': [3], 'mode': 'supervised', 'lr': 0.001, 'nb_epoch': 50, 'batch_size': 64, 'print_freq': 10}}}
IN R2:  {'R1': {'train_loss': 0.04659469053149223, 'train_acc': 94.62550282478333, 'test_loss': 0.006758906412869692, 'test_acc': 91.375, 'convergence': 17.969764709472656, 'R1': 0, 'dataset_sup': {'name': 'CIFAR10', 'noise_std': 0, 'channels': 3, 'width': 32, 'height': 32, 'validation_split': 0.2, 'training_sample': 50000, 'testing_sample': 10000, 'out_channels': 4, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 64, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 50, 'print_freq': 10, 'validation': False, 'continual_learning': True, 'old_dataset_size': 32, 'n_classes': 4, 'selected_classes': [1, 2, 6, 9]}, 'dataset_unsup': {'name': 'CIFAR10', 'noise_std': 0, 'channels': 3, 'width': 32, 'height': 32, 'validation_split': 0.2, 'training_sample': 50000, 'testing_sample': 10000, 'out_channels': 4, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 10, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 1, 'print_freq': 10, 'validation': False, 'continual_learning': True, 'old_dataset_size': 32, 'n_classes': 4, 'selected_classes': [1, 2, 6, 9]}, 'train_config': {'t0': {'blocks': [0], 'mode': 'unsupervised', 'lr': 0.08, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 10}, 't2': {'blocks': [1], 'mode': 'unsupervised', 'lr': 0.005, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 10}, 't4': {'blocks': [2], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 10}, 't6': {'blocks': [3], 'mode': 'supervised', 'lr': 0.001, 'nb_epoch': 50, 'batch_size': 64, 'print_freq': 10}}}, 'R2': {'train_loss': 0.13429495692253113, 'train_acc': 83.30699801445007, 'test_loss': 0.011980300769209862, 'test_acc': 79.55000305175781, 'convergence': 16.521926879882812, 'R1': 1, 'dataset_sup': {'name': 'CIFAR10', 'noise_std': 0, 'channels': 3, 'width': 32, 'height': 32, 'validation_split': 0.2, 'training_sample': 50000, 'testing_sample': 10000, 'out_channels': 4, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 64, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 50, 'print_freq': 10, 'validation': False, 'continual_learning': True, 'old_dataset_size': 32, 'n_classes': 4, 'selected_classes': [3, 4, 5, 7]}, 'dataset_unsup': {'name': 'CIFAR10', 'noise_std': 0, 'channels': 3, 'width': 32, 'height': 32, 'validation_split': 0.2, 'training_sample': 50000, 'testing_sample': 10000, 'out_channels': 4, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 10, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 1, 'print_freq': 10, 'validation': False, 'continual_learning': True, 'old_dataset_size': 32, 'n_classes': 4, 'selected_classes': [3, 4, 5, 7]}, 'train_config': {'t0': {'blocks': [0], 'mode': 'unsupervised', 'lr': 0.08, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 10}, 't2': {'blocks': [1], 'mode': 'unsupervised', 'lr': 0.005, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 10}, 't4': {'blocks': [2], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 10}, 't6': {'blocks': [3], 'mode': 'supervised', 'lr': 0.001, 'nb_epoch': 50, 'batch_size': 64, 'print_freq': 10}}}}
SEED:  0
block 0, size : 96 16 16
range = 2.886751345948129
block 1, size : 384 8 8
range = 0.8505172717997146
block 2, size : 1536 4 4
range = 0.4252586358998573
range = 0.11048543456039805
The device used will be: 
True
cuda:0
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.08, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 1.0, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 2, 'weight_init': 'normal', 'weight_init_range': 2.886751345948129, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 96, 'kernel_size': 5, 'in_channels': 3, 'lr_scheduler': {'lr': 0.08, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0002, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.5}}
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.005, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.65, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'normal', 'weight_init_range': 0.8505172717997146, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 384, 'kernel_size': 3, 'in_channels': 96, 'lr_scheduler': {'lr': 0.005, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0002, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.5}}
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.01, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.25, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'normal', 'weight_init_range': 0.4252586358998573, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 1536, 'kernel_size': 3, 'in_channels': 384, 'lr_scheduler': {'lr': 0.01, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0002, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.5}}
CONFIG: {'arch': 'MLP', 'lr': 0.05, 'adaptive': True, 'lr_sup': 0.001, 'speed': 0.4, 'lr_div': 100, 'lebesgue_p': 2, 't_invert': 10, 'beta': 0.01, 'power': 4.5, 'ranking_param': 3, 'delta': 0.1, 'hebbian': False, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'lr_bias': 600, 'softness': 'soft', 'soft_activation_fn': 'exp', 'plasticity': 'SoftHebb', 'metric_mode': 'unsupervised', 'weight_init': 'positive', 'weight_init_range': 0.11048543456039805, 'weight_init_offset': 0, 'weight_decay': 0, 'radius': 10, 'power_lr': 0.2, 'out_channels': 4, 'in_channels': 24576, 'old_channels': 1536, 'lr_scheduler': {'decay': 'cste', 'lr': 0.1}}

 Model C10_4C_CL loaded successfuly with best perf



 ----- Architecture Block BatchNorm2dSK3962(5, 5)1.0reflect, number 0 -----
- BatchNorm2d(3, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(3, 96, lebesgue_p=2, pruning=0, kernel_size=(5, 5), bias=False, padding_mode=reflect, t_invert=1.0, bias=False, lr_bias=0.1, ranking_param=3, delta=2, activation=exp)
- Triangle(power=0.7)
- MaxPool2d(kernel_size=4, stride=2, padding=1, dilation=1, ceil_mode=False)

 ----- Architecture Block BatchNorm2dSK963842(3, 3)0.6499999761581421reflect, number 1 -----
- BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(96, 384, lebesgue_p=2, pruning=0, kernel_size=(3, 3), bias=False, padding_mode=reflect, t_invert=0.6499999761581421, bias=False, lr_bias=0.1538, ranking_param=3, delta=2, activation=exp)
- Triangle(power=1.4)
- MaxPool2d(kernel_size=4, stride=2, padding=1, dilation=1, ceil_mode=False)

 ----- Architecture Block BatchNorm2dSK38415362(3, 3)0.25reflect, number 2 -----
- BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(384, 1536, lebesgue_p=2, pruning=0, kernel_size=(3, 3), bias=False, padding_mode=reflect, t_invert=0.25, bias=False, lr_bias=0.4, ranking_param=3, delta=2, activation=exp)
- Triangle(power=1.0)
- AvgPool2d(kernel_size=2, stride=2, padding=0)

 ----- Architecture Block FlattenDropout(p=0.5, inplace=False)Linear(in_, number 3 -----
- Flatten(start_dim=1, end_dim=-1)
- Dropout(p=0.5, inplace=False)
- Linear(in_features=24576, out_features=4, bias=True)
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
TARGETS BEFORE SUB:  tensor([3, 8, 8, 0, 6, 6, 1, 6, 3, 1, 0, 9, 5, 7, 9, 8, 5, 7, 8, 6],
       device='cuda:0')
TARGETS AFTER SUB:  tensor([6, 6, 1, 6, 1, 9, 9, 6, 9, 2, 9, 6, 6, 9, 2, 1, 9, 6, 6, 9])
[1, 2, 6, 9]
TARGETS AFTER CLEANER:  tensor([2, 2, 0, 2, 0, 3, 3, 2, 3, 1, 3, 2, 2, 3, 1, 0, 3, 2, 2, 3])
4000
<class 'dataset.FastCIFAR10'>
Dataset FastCIFAR10
    Number of datapoints: 4000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Test
    StandardTransform
Transform: Compose(
               ToTensor()
               Resize(size=(32, 32), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  tensor([6, 9, 9, 4, 1, 1, 2, 7, 8, 3, 4, 7, 7, 2, 9, 9, 9, 3, 2, 6],
       device='cuda:0')
TARGETS AFTER SUB:  tensor([6, 9, 9, 1, 1, 2, 2, 9, 9, 9, 2, 6, 6, 6, 2, 6, 9, 1, 2, 2])
[1, 2, 6, 9]
TARGETS AFTER CLEANER:  tensor([2, 3, 3, 0, 0, 1, 1, 3, 3, 3, 1, 2, 2, 2, 1, 2, 3, 0, 1, 1])
20000
<class 'dataset.FastCIFAR10'>
Dataset FastCIFAR10
    Number of datapoints: 20000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Train
    StandardTransform
Transform: Compose(
               ToTensor()
               Resize(size=(32, 32), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  tensor([6, 9, 9, 4, 1, 1, 2, 7, 8, 3, 4, 7, 7, 2, 9, 9, 9, 3, 2, 6],
       device='cuda:0')
TARGETS AFTER SUB:  tensor([6, 9, 9, 1, 1, 2, 2, 9, 9, 9, 2, 6, 6, 6, 2, 6, 9, 1, 2, 2])
[1, 2, 6, 9]
TARGETS AFTER CLEANER:  tensor([2, 3, 3, 0, 0, 1, 1, 3, 3, 3, 1, 2, 2, 2, 1, 2, 3, 0, 1, 1])
20000
<class 'dataset.FastCIFAR10'>
Dataset FastCIFAR10
    Number of datapoints: 20000
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data
    Split: Train
    StandardTransform
Transform: ToTensor()
------------------------
INDICES:  20000
IMAGE SIZE: torch.Size([64, 3, 32, 32])
Accuracy of the network on the 1st dataset: 35.275 %
Test loss on the 1st dataset: 0.072

