BLOCKS:  {'b0': {'arch': 'CNN', 'preset': 'softkrotov-c48-k5-p2-s1-d1-b0-t1.1-lr0.08', 'operation': 'batchnorm2d', 'num': 0, 'batch_norm': False, 'pool': {'type': 'max', 'kernel_size': 4, 'stride': 2, 'padding': 1}, 'activation': {'function': 'triangle', 'param': 0.7}, 'resume': None, 'layer': {'arch': 'CNN', 'nb_train': None, 'lr': 0.08, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 1.1, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 2, 'weight_init': 'positive', 'weight_init_range': 2, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.75, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 48, 'kernel_size': 5}}, 'b1': {'arch': 'CNN', 'preset': 'softkrotov-c192-k3-p1-s1-d1-b0-t0.7-lr0.01', 'operation': 'batchnorm2d', 'num': 1, 'batch_norm': False, 'pool': {'type': 'max', 'kernel_size': 4, 'stride': 2, 'padding': 1}, 'activation': {'function': 'triangle', 'param': 0.7}, 'resume': None, 'layer': {'arch': 'CNN', 'nb_train': None, 'lr': 0.01, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.7, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'positive', 'weight_init_range': 2, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.75, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 192, 'kernel_size': 3}}, 'b2': {'arch': 'CNN', 'preset': 'softkrotov-c768-k3-p1-s1-d1-b0-t0.5-lr0.01', 'operation': 'batchnorm2d', 'num': 2, 'batch_norm': False, 'pool': {'type': 'max', 'kernel_size': 4, 'stride': 2, 'padding': 1}, 'activation': {'function': 'triangle', 'param': 0.7}, 'resume': None, 'layer': {'arch': 'CNN', 'nb_train': None, 'lr': 0.01, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.5, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'positive', 'weight_init_range': 2, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.75, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 768, 'kernel_size': 3}}, 'b3': {'arch': 'CNN', 'preset': 'softkrotov-c3072-k3-p1-s1-d1-b0-t0.4-lr0.01', 'operation': 'batchnorm2d', 'num': 3, 'batch_norm': False, 'pool': {'type': 'max', 'kernel_size': 4, 'stride': 2, 'padding': 1}, 'activation': {'function': 'triangle', 'param': 1.4}, 'resume': None, 'layer': {'arch': 'CNN', 'nb_train': None, 'lr': 0.01, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.4, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'positive', 'weight_init_range': 2, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.75, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 3072, 'kernel_size': 3}}, 'b4': {'arch': 'CNN', 'preset': 'softkrotov-c12288-k3-p1-s1-d1-b0-t0.25-lr0.01', 'operation': 'batchnorm2d', 'num': 4, 'batch_norm': False, 'pool': {'type': 'avg', 'kernel_size': 2, 'stride': 2, 'padding': 0}, 'activation': {'function': 'triangle', 'param': 1.0}, 'resume': None, 'layer': {'arch': 'CNN', 'nb_train': None, 'lr': 0.01, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.25, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'positive', 'weight_init_range': 2, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.75, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 12288, 'kernel_size': 3}}, 'b5': {'arch': 'MLP', 'preset': 'BP-c1000', 'operation': 'flatten', 'num': 5, 'att_dropout': None, 'dropout': 0.5, 'layer': {'arch': 'MLP', 'lr': 0.05, 'adaptive': True, 'lr_sup': 0.001, 'speed': 0.4, 'lr_div': 100, 'lebesgue_p': 2, 't_invert': 10, 'beta': 0.01, 'power': 4.5, 'ranking_param': 3, 'delta': 0.1, 'hebbian': False, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'lr_bias': 600, 'softness': 'soft', 'soft_activation_fn': 'exp', 'plasticity': 'SoftHebb', 'metric_mode': 'unsupervised', 'weight_init': 'positive', 'weight_init_range': 0.25, 'weight_init_offset': 0, 'weight_decay': 0, 'radius': 10, 'power_lr': 0.2, 'out_channels': 1000}, 'pool': None, 'activation': None}}
CL:  True
{'name': 'ImageNette', 'noise_std': 0, 'channels': 3, 'width': 160, 'height': 160, 'validation_split': 0.2, 'training_sample': 9469, 'testing_sample': 10000, 'out_channels': 10, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 32, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'px': 160, 'nb_epoch': 50, 'print_freq': 10, 'validation': False, 'continual_learning': True}
CL:  True
{'name': 'ImageNette', 'noise_std': 0, 'channels': 3, 'width': 160, 'height': 160, 'validation_split': 0.2, 'training_sample': 9469, 'testing_sample': 10000, 'out_channels': 10, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 10, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'px': 160, 'nb_epoch': 1, 'print_freq': 10, 'validation': False, 'continual_learning': True}
SEED:  0
block 0, size : 48 80 80
range = 2.886751345948129
block 1, size : 192 40 40
range = 1.2028130608117202
block 2, size : 768 20 20
range = 0.6014065304058601
block 3, size : 3072 10 10
range = 0.30070326520293006
block 4, size : 12288 5 5
range = 0.15035163260146503
range = 0.03125
The device used will be: 
True
cuda:0
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.08, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 1.1, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 2, 'weight_init': 'normal', 'weight_init_range': 2.886751345948129, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.75, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 48, 'kernel_size': 5, 'in_channels': 3, 'lr_scheduler': {'lr': 0.08, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0010560777273207309, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.75}}
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.01, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.7, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'normal', 'weight_init_range': 1.2028130608117202, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.75, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 192, 'kernel_size': 3, 'in_channels': 48, 'lr_scheduler': {'lr': 0.01, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0010560777273207309, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.75}}
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.01, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.5, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'normal', 'weight_init_range': 0.6014065304058601, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.75, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 768, 'kernel_size': 3, 'in_channels': 192, 'lr_scheduler': {'lr': 0.01, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0010560777273207309, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.75}}
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.01, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.4, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'normal', 'weight_init_range': 0.30070326520293006, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.75, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 3072, 'kernel_size': 3, 'in_channels': 768, 'lr_scheduler': {'lr': 0.01, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0010560777273207309, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.75}}
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.01, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.25, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'normal', 'weight_init_range': 0.15035163260146503, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.75, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 12288, 'kernel_size': 3, 'in_channels': 3072, 'lr_scheduler': {'lr': 0.01, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0010560777273207309, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.75}}
CONFIG: {'arch': 'MLP', 'lr': 0.05, 'adaptive': True, 'lr_sup': 0.001, 'speed': 0.4, 'lr_div': 100, 'lebesgue_p': 2, 't_invert': 10, 'beta': 0.01, 'power': 4.5, 'ranking_param': 3, 'delta': 0.1, 'hebbian': False, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'lr_bias': 600, 'softness': 'soft', 'soft_activation_fn': 'exp', 'plasticity': 'SoftHebb', 'metric_mode': 'unsupervised', 'weight_init': 'positive', 'weight_init_range': 0.03125, 'weight_init_offset': 0, 'weight_decay': 0, 'radius': 10, 'power_lr': 0.2, 'out_channels': 2, 'in_channels': 307200, 'old_channels': 12288, 'lr_scheduler': {'decay': 'cste', 'lr': 0.1}}

 ----- Architecture Block BatchNorm2dSK3482(5, 5)1.100000023841858reflect, number 0 -----
- BatchNorm2d(3, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(3, 48, lebesgue_p=2, pruning=0, kernel_size=(5, 5), bias=False, padding_mode=reflect, t_invert=1.100000023841858, bias=False, lr_bias=0.0909, ranking_param=3, delta=2, activation=exp)
- Triangle(power=0.7)
- MaxPool2d(kernel_size=4, stride=2, padding=1, dilation=1, ceil_mode=False)

 ----- Architecture Block BatchNorm2dSK481922(3, 3)0.699999988079071reflect, number 1 -----
- BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(48, 192, lebesgue_p=2, pruning=0, kernel_size=(3, 3), bias=False, padding_mode=reflect, t_invert=0.699999988079071, bias=False, lr_bias=0.1429, ranking_param=3, delta=2, activation=exp)
- Triangle(power=0.7)
- MaxPool2d(kernel_size=4, stride=2, padding=1, dilation=1, ceil_mode=False)

 ----- Architecture Block BatchNorm2dSK1927682(3, 3)0.5reflect, number 2 -----
- BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(192, 768, lebesgue_p=2, pruning=0, kernel_size=(3, 3), bias=False, padding_mode=reflect, t_invert=0.5, bias=False, lr_bias=0.2, ranking_param=3, delta=2, activation=exp)
- Triangle(power=0.7)
- MaxPool2d(kernel_size=4, stride=2, padding=1, dilation=1, ceil_mode=False)

 ----- Architecture Block BatchNorm2dSK76830722(3, 3)0.4000000059604645reflect, number 3 -----
- BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(768, 3072, lebesgue_p=2, pruning=0, kernel_size=(3, 3), bias=False, padding_mode=reflect, t_invert=0.4000000059604645, bias=False, lr_bias=0.25, ranking_param=3, delta=2, activation=exp)
- Triangle(power=1.4)
- MaxPool2d(kernel_size=4, stride=2, padding=1, dilation=1, ceil_mode=False)

 ----- Architecture Block BatchNorm2dSK3072122882(3, 3)0.25reflect, number 4 -----
- BatchNorm2d(3072, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(3072, 12288, lebesgue_p=2, pruning=0, kernel_size=(3, 3), bias=False, padding_mode=reflect, t_invert=0.25, bias=False, lr_bias=0.4, ranking_param=3, delta=2, activation=exp)
- Triangle(power=1.0)
- AvgPool2d(kernel_size=2, stride=2, padding=0)

 ----- Architecture Block FlattenDropout(p=0.5, inplace=False)Linear(in_, number 5 -----
- Flatten(start_dim=1, end_dim=-1)
- Dropout(p=0.5, inplace=False)
- Linear(in_features=307200, out_features=2, bias=True)

 ********** Hebbian Unsupervised learning of blocks [0] **********
SEED:  0
BEFORE RESIZING
AFTER RESIZING
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
[6, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
779
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 779
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/val
    Split: val
    StandardTransform
Transform: Compose(
               Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
[6, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
1921
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 1921
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/train
    Split: train
    StandardTransform
Transform: Compose(
               Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
[6, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
1921
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 1921
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/train
    Split: train
    StandardTransform
Transform: Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
------------------------
INDICES:  1921
IMAGE SIZE: torch.Size([10, 3, 160, 160])
SAVING FOLDER FOR UNSUP:  IMG_2C_CL
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 2.16e-01	time: 00:00:25	Acc_train 0.00	Acc_test 0.00	convergence: 2.40e+01	R1: 0	Info MB:0.000e+00/SB:0.000e+00/MW:-5.406e-03/SW:5.984e-01/MR:4.888e+00/SR:1.738e+00/MeD:1.302e+00/MaD:4.332e+00/MW:0.649/MAW:0.351
|       0 |       1 |       2 |       3 |        4 |       5 |       6 |       7 |       8 |      9 |     10 |      11 |      12 |      13 |      14 |      15 |        16 |      17 |     18 |      19 |     20 |      21 |      22 |      23 |      24 |       25 |      26 |      27 |      28 |      29 |
|---------+---------+---------+---------+----------+---------+---------+---------+---------+--------+--------+---------+---------+---------+---------+---------+-----------+---------+--------+---------+--------+---------+---------+---------+---------+----------+---------+---------+---------+---------|
|   0.164 |   0.299 |   0.223 |   0.256 |   0.0494 |   0.212 |   0.192 |   0.335 |   0.188 |   0.3  |   0.12 |   0.192 |   0.224 |   0.224 |   0.219 |   0.277 |   0.00139 |   0.171 |   0.25 |   0.157 |   0.26 |   0.207 |   0.253 |   0.308 |   0.265 |   0.0016 |   0.222 |   0.134 |   0.191 |   0.285 |
|   3.61  |   6.81  |   4.93  |   5.71  |   1.53   |   4.66  |   4.21  |   7.74  |   4.13  |   6.84 |   2.71 |   4.22  |   4.95  |   4.94  |   4.83  |   6.24  |   1       |   3.74  |   5.58 |   3.45  |   5.82 |   4.55  |   5.65  |   7.04  |   5.94  |   1.01   |   4.9   |   2.99  |   4.18  |   6.44  |
|   0.96  |   0.45  |   0.39  |   0.55  |   4.18   |   5.69  |   1.44  |   0.58  |   2.8   |   0.43 |   1.95 |   1     |   0.82  |   0.5   |   3.14  |   0.54  |  10.41    |   0.72  |   1.36 |   2.35  |   1.05 |   2.23  |   0.84  |   0.58  |   0.63  |   8.41   |   0.83  |   2.61  |   0.55  |   0.44  |
| nan     | nan     | nan     | nan     | nan      | nan     | nan     | nan     | nan     | nan    | nan    | nan     | nan     | nan     | nan     | nan     | nan       | nan     | nan    | nan     | nan    | nan     | nan     | nan     | nan     | nan      | nan     | nan     | nan     | nan     |
| nan     | nan     | nan     | nan     | nan      | nan     | nan     | nan     | nan     | nan    | nan    | nan     | nan     | nan     | nan     | nan     | nan       | nan     | nan    | nan     | nan    | nan     | nan     | nan     | nan     | nan      | nan     | nan     | nan     | nan     |
| nan     | nan     | nan     | nan     | nan      | nan     | nan     | nan     | nan     | nan    | nan    | nan     | nan     | nan     | nan     | nan     | nan       | nan     | nan    | nan     | nan    | nan     | nan     | nan     | nan     | nan      | nan     | nan     | nan     | nan     |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/IMG_2C_CL/models

 ********** Hebbian Unsupervised learning of blocks [1] **********
SEED:  0
BEFORE RESIZING
AFTER RESIZING
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
[6, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
779
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 779
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/val
    Split: val
    StandardTransform
Transform: Compose(
               Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
[6, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
1921
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 1921
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/train
    Split: train
    StandardTransform
Transform: Compose(
               Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
[6, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
1921
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 1921
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/train
    Split: train
    StandardTransform
Transform: Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
------------------------
INDICES:  1921
IMAGE SIZE: torch.Size([10, 3, 160, 160])
SAVING FOLDER FOR UNSUP:  IMG_2C_CL
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 2.16e-01	time: 00:00:50	Acc_train 0.00	Acc_test 0.00	convergence: 2.40e+01	R1: 0	Info MB:0.000e+00/SB:0.000e+00/MW:-1.939e-03/SW:7.460e-01/MR:1.516e+01/SR:3.245e+00/MeD:2.669e+00/MaD:7.632e+00/MW:0.615/MAW:0.385
|       0 |        1 |        2 |        3 |        4 |        5 |        6 |        7 |        8 |      9 |       10 |       11 |       12 |       13 |       14 |       15 |       16 |       17 |     18 |       19 |       20 |       21 |       22 |       23 |       24 |       25 |       26 |       27 |       28 |      29 |
|---------+----------+----------+----------+----------+----------+----------+----------+----------+--------+----------+----------+----------+----------+----------+----------+----------+----------+--------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+---------|
|   0.072 |   0.0885 |   0.0867 |   0.0609 |   0.0812 |   0.0536 |   0.0663 |   0.0686 |   0.0695 |   0.08 |   0.0752 |   0.0958 |   0.0789 |   0.0795 |   0.0773 |   0.0659 |   0.0661 |   0.0435 |   0.1  |   0.0564 |   0.0512 |   0.0822 |   0.0616 |   0.0683 |   0.0756 |   0.0808 |   0.0751 |   0.0775 |   0.0878 |   0.059 |
|  14.9   |  19.31   |  18.81   |  12.12   |  17.31   |  10.38   |  13.46   |  14.04   |  14.27   |  16.99 |  15.72   |  21.33   |  16.72   |  16.87   |  16.28   |  13.34   |  13.4    |   8.11   |  22.55 |  11.04   |   9.82   |  17.59   |  12.3    |  13.97   |  15.83   |  17.22   |  15.7    |  16.35   |  19.11   |  11.66  |
|   0.51  |   0.31   |   0.16   |   2.58   |   0.15   |   1.82   |   0.39   |   0.43   |   0.3    |   0.15 |   0.81   |   0.12   |   0.18   |   0.19   |   0.53   |   0.4    |   0.68   |   4.18   |   0.08 |   0.68   |   1.58   |   0.23   |   0.36   |   0.29   |   0.28   |   0.16   |   0.8    |   0.22   |   0.12   |   0.49  |
| nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan    | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan    | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     |
| nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan    | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan    | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     |
| nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan    | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan    | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/IMG_2C_CL/models

 ********** Hebbian Unsupervised learning of blocks [2] **********
SEED:  0
BEFORE RESIZING
AFTER RESIZING
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
[6, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
779
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 779
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/val
    Split: val
    StandardTransform
Transform: Compose(
               Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
[6, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
1921
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 1921
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/train
    Split: train
    StandardTransform
Transform: Compose(
               Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
[6, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
1921
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 1921
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/train
    Split: train
    StandardTransform
Transform: Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
------------------------
INDICES:  1921
IMAGE SIZE: torch.Size([10, 3, 160, 160])
SAVING FOLDER FOR UNSUP:  IMG_2C_CL
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 1.08e-01	time: 00:01:12	Acc_train 0.00	Acc_test 0.00	convergence: 2.40e+01	R1: 0	Info MB:0.000e+00/SB:0.000e+00/MW:-3.199e-04/SW:4.865e-01/MR:1.994e+01/SR:3.346e+00/MeD:2.767e+00/MaD:1.007e+01/MW:0.594/MAW:0.406
|       0 |        1 |       2 |        3 |        4 |        5 |       6 |        7 |        8 |       9 |       10 |      11 |       12 |      13 |       14 |      15 |      16 |       17 |       18 |      19 |       20 |       21 |       22 |       23 |      24 |     25 |       26 |       27 |       28 |     29 |
|---------+----------+---------+----------+----------+----------+---------+----------+----------+---------+----------+---------+----------+---------+----------+---------+---------+----------+----------+---------+----------+----------+----------+----------+---------+--------+----------+----------+----------+--------|
|   0.104 |   0.0782 |   0.101 |   0.0969 |   0.0894 |   0.0877 |   0.102 |   0.0876 |   0.0842 |   0.108 |   0.0968 |   0.102 |   0.0912 |   0.105 |   0.0874 |   0.102 |   0.106 |   0.0704 |   0.0859 |   0.079 |   0.0965 |   0.0701 |   0.0833 |   0.0802 |   0.103 |   0.11 |   0.0977 |   0.0899 |   0.0933 |   0.1  |
|  23.65  |  16.53   |  22.92  |  21.66   |  19.56   |  19.09   |  23.18  |  19.06   |  18.14   |  24.8   |  21.64   |  23.16  |  20.05   |  23.96  |  19      |  22.99  |  24.39  |  14.5    |  18.6    |  16.73  |  21.55   |  14.42   |  17.89   |  17.06   |  23.42  |  25.6  |  21.89   |  19.69   |  20.63   |  22.67 |
|   0.02  |   0.35   |   0.03  |   0.04   |   0.11   |   0.1    |   0.04  |   0.06   |   0.11   |   0     |   0.04   |   0.05  |   0.09   |   0.02  |   0.07   |   0.02  |   0.01  |   0.25   |   0.1    |   0.09  |   0.07   |   0.28   |   0.16   |   0.23   |   0.02  |   0.01 |   0.1    |   0.08   |   0.04   |   0.02 |
| nan     | nan      | nan     | nan      | nan      | nan      | nan     | nan      | nan      | nan     | nan      | nan     | nan      | nan     | nan      | nan     | nan     | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan     | nan    | nan      | nan      | nan      | nan    |
| nan     | nan      | nan     | nan      | nan      | nan      | nan     | nan      | nan      | nan     | nan      | nan     | nan      | nan     | nan      | nan     | nan     | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan     | nan    | nan      | nan      | nan      | nan    |
| nan     | nan      | nan     | nan      | nan      | nan      | nan     | nan      | nan      | nan     | nan      | nan     | nan      | nan     | nan      | nan     | nan     | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan     | nan    | nan      | nan      | nan      | nan    |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/IMG_2C_CL/models

 ********** Hebbian Unsupervised learning of blocks [3] **********
SEED:  0
BEFORE RESIZING
AFTER RESIZING
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
[6, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
779
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 779
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/val
    Split: val
    StandardTransform
Transform: Compose(
               Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
[6, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
1921
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 1921
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/train
    Split: train
    StandardTransform
Transform: Compose(
               Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
[6, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
1921
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 1921
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/train
    Split: train
    StandardTransform
Transform: Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
------------------------
INDICES:  1921
IMAGE SIZE: torch.Size([10, 3, 160, 160])
SAVING FOLDER FOR UNSUP:  IMG_2C_CL
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 9.74e-02	time: 00:01:39	Acc_train 0.00	Acc_test 0.00	convergence: 2.40e+01	R1: 0	Info MB:0.000e+00/SB:0.000e+00/MW:1.217e-04/SW:2.663e-01/MR:2.188e+01/SR:3.423e+00/MeD:2.670e+00/MaD:2.074e+01/MW:0.625/MAW:0.375
|        0 |       1 |       2 |       3 |        4 |        5 |       6 |        7 |       8 |        9 |       10 |      11 |      12 |      13 |       14 |       15 |      16 |       17 |       18 |       19 |      20 |      21 |      22 |       23 |      24 |      25 |       26 |       27 |      28 |       29 |
|----------+---------+---------+---------+----------+----------+---------+----------+---------+----------+----------+---------+---------+---------+----------+----------+---------+----------+----------+----------+---------+---------+---------+----------+---------+---------+----------+----------+---------+----------|
|   0.0888 |   0.106 |   0.096 |   0.109 |   0.0967 |   0.0883 |   0.108 |   0.0922 |   0.105 |   0.0978 |   0.0772 |   0.103 |   0.108 |   0.086 |   0.0799 |   0.0941 |   0.104 |   0.0917 |   0.0969 |   0.0961 |   0.104 |   0.108 |   0.102 |   0.0868 |   0.107 |   0.104 |   0.0921 |   0.0664 |   0.107 |   0.0906 |
|  19.38   |  24.39  |  21.4   |  25.04  |  21.6    |  19.25   |  24.91  |  20.33   |  23.86  |  21.92   |  16.27   |  23.51  |  24.92  |  18.61  |  16.97   |  20.86   |  23.78  |  20.19   |  21.66   |  21.44   |  23.6   |  24.76  |  23.25  |  18.84   |  24.5   |  23.83  |  20.3    |  13.48   |  24.68  |  19.89   |
|   0.07   |   0.01  |   0.02  |   0     |   0.02   |   0.08   |   0.01  |   0.03   |   0.01  |   0.01   |   0.07   |   0.01  |   0     |   0.05  |   0.08   |   0.04   |   0.01  |   0.03   |   0.02   |   0.02   |   0.01  |   0     |   0.01  |   0.04   |   0     |   0.01  |   0.05   |   0.15   |   0     |   0.04   |
| nan      | nan     | nan     | nan     | nan      | nan      | nan     | nan      | nan     | nan      | nan      | nan     | nan     | nan     | nan      | nan      | nan     | nan      | nan      | nan      | nan     | nan     | nan     | nan      | nan     | nan     | nan      | nan      | nan     | nan      |
| nan      | nan     | nan     | nan     | nan      | nan      | nan     | nan      | nan     | nan      | nan      | nan     | nan     | nan     | nan      | nan      | nan     | nan      | nan      | nan      | nan     | nan     | nan     | nan      | nan     | nan     | nan      | nan      | nan     | nan      |
| nan      | nan     | nan     | nan     | nan      | nan      | nan     | nan      | nan     | nan      | nan      | nan     | nan     | nan     | nan      | nan      | nan     | nan      | nan      | nan      | nan     | nan     | nan     | nan      | nan     | nan     | nan      | nan      | nan     | nan      |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/IMG_2C_CL/models

 ********** Hebbian Unsupervised learning of blocks [4] **********
SEED:  0
BEFORE RESIZING
AFTER RESIZING
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
[6, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
779
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 779
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/val
    Split: val
    StandardTransform
Transform: Compose(
               Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
[6, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
1921
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 1921
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/train
    Split: train
    StandardTransform
Transform: Compose(
               Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
[6, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
1921
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 1921
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/train
    Split: train
    StandardTransform
Transform: Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
------------------------
INDICES:  1921
IMAGE SIZE: torch.Size([10, 3, 160, 160])
SAVING FOLDER FOR UNSUP:  IMG_2C_CL
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 9.05e-02	time: 00:02:20	Acc_train 0.00	Acc_test 0.00	convergence: 2.38e+01	R1: 3	Info MB:0.000e+00/SB:0.000e+00/MW:-6.739e-06/SW:1.499e-01/MR:2.483e+01/SR:2.294e+00/MeD:1.010e+00/MaD:2.382e+01/MW:0.712/MAW:0.288
|       0 |       1 |       2 |       3 |        4 |       5 |       6 |       7 |        8 |       9 |      10 |      11 |      12 |      13 |     14 |       15 |      16 |      17 |     18 |      19 |     20 |      21 |      22 |      23 |      24 |      25 |      26 |      27 |      28 |      29 |
|---------+---------+---------+---------+----------+---------+---------+---------+----------+---------+---------+---------+---------+---------+--------+----------+---------+---------+--------+---------+--------+---------+---------+---------+---------+---------+---------+---------+---------+---------|
|   0.101 |   0.109 |   0.109 |   0.108 |   0.0927 |   0.107 |   0.109 |   0.108 |   0.0021 |   0.107 |   0.109 |   0.108 |   0.109 |   0.112 |   0.11 |   0.0998 |   0.109 |   0.103 |   0.11 |   0.111 |   0.11 |   0.112 |   0.109 |   0.109 |   0.109 |   0.108 |   0.108 |   0.113 |   0.108 |   0.106 |
|  22.84  |  25.19  |  25.07  |  24.98  |  20.47   |  24.66  |  25.13  |  24.95  |   1.12   |  24.56  |  25.12  |  24.83  |  25.25  |  26.07  |  25.51 |  22.5    |  25.29  |  23.52  |  25.38 |  25.91  |  25.48 |  26.13  |  25.13  |  25.1   |  25.15  |  24.75  |  24.74  |  26.25  |  24.9   |  24.27  |
|   0.01  |   0     |   0     |   0     |   0.02   |   0     |   0     |   0     |   0.69   |   0     |   0     |   0     |   0     |   0     |   0    |   0.01   |   0     |   0     |   0    |   0     |   0    |   0     |   0     |   0     |   0     |   0.02  |   0     |   0     |   0     |   0     |
| nan     | nan     | nan     | nan     | nan      | nan     | nan     | nan     | nan      | nan     | nan     | nan     | nan     | nan     | nan    | nan      | nan     | nan     | nan    | nan     | nan    | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     |
| nan     | nan     | nan     | nan     | nan      | nan     | nan     | nan     | nan      | nan     | nan     | nan     | nan     | nan     | nan    | nan      | nan     | nan     | nan    | nan     | nan    | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     |
| nan     | nan     | nan     | nan     | nan      | nan     | nan     | nan     | nan      | nan     | nan     | nan     | nan     | nan     | nan    | nan      | nan     | nan     | nan    | nan     | nan    | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/IMG_2C_CL/models

 ********** Supervised learning of blocks [5] **********
SAVING FOLDER FOR SUP:  IMG_2C_CL
SEED:  0
BEFORE RESIZING
AFTER RESIZING
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
[6, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
779
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 779
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/val
    Split: val
    StandardTransform
Transform: Compose(
               Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
[6, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
1921
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 1921
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/train
    Split: train
    StandardTransform
Transform: Compose(
               Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
[6, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
1921
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 1921
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/train
    Split: train
    StandardTransform
Transform: Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
------------------------
INDICES:  1921
IMAGE SIZE: torch.Size([32, 3, 160, 160])
Epoch: [1/50]	lr: 1.00e-03	time: 00:02:40	Loss_train 5.76202	Acc_train 88.86	/	Loss_test 1.99735	Acc_test 93.45
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/IMG_2C_CL/models
Epoch: [10/50]	lr: 1.00e-03	time: 00:04:23	Loss_train 0.62121	Acc_train 97.41	/	Loss_test 2.11256	Acc_test 95.25
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/IMG_2C_CL/models
Epoch: [20/50]	lr: 2.50e-04	time: 00:06:15	Loss_train 0.02618	Acc_train 99.80	/	Loss_test 1.95448	Acc_test 95.51
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/IMG_2C_CL/models
Epoch: [30/50]	lr: 1.25e-04	time: 00:08:10	Loss_train 0.00020	Acc_train 99.98	/	Loss_test 1.58886	Acc_test 96.53
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/IMG_2C_CL/models
Epoch: [40/50]	lr: 3.13e-05	time: 00:10:03	Loss_train 0.00000	Acc_train 100.00	/	Loss_test 1.38465	Acc_test 96.53
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/IMG_2C_CL/models
Epoch: [50/50]	lr: 7.81e-06	time: 00:11:58	Loss_train 0.00009	Acc_train 99.99	/	Loss_test 1.43976	Acc_test 96.53
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/IMG_2C_CL/models
RESULT:  {'train_loss': 9.376359957968816e-05, 'train_acc': 99.99479651451111, 'test_loss': 1.439763069152832, 'test_acc': 96.53401947021484, 'convergence': 23.82562255859375, 'R1': 3, 'dataset_sup': {'name': 'ImageNette', 'noise_std': 0, 'channels': 3, 'width': 160, 'height': 160, 'validation_split': 0.2, 'training_sample': 9469, 'testing_sample': 10000, 'out_channels': 2, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 32, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'px': 160, 'nb_epoch': 50, 'print_freq': 10, 'validation': False, 'continual_learning': True, 'old_dataset_size': 160, 'n_classes': 2, 'selected_classes': [6, 9]}, 'dataset_unsup': {'name': 'ImageNette', 'noise_std': 0, 'channels': 3, 'width': 160, 'height': 160, 'validation_split': 0.2, 'training_sample': 9469, 'testing_sample': 10000, 'out_channels': 2, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 10, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'px': 160, 'nb_epoch': 1, 'print_freq': 10, 'validation': False, 'continual_learning': True, 'old_dataset_size': 160, 'n_classes': 2, 'selected_classes': [6, 9]}, 'train_config': {'t0': {'blocks': [0], 'mode': 'unsupervised', 'lr': 0.08, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 10}, 't2': {'blocks': [1], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 10}, 't4': {'blocks': [2], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 10}, 't6': {'blocks': [3], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 10}, 't8': {'blocks': [4], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 10}, 't10': {'blocks': [5], 'mode': 'supervised', 'lr': 0.001, 'nb_epoch': 50, 'batch_size': 32, 'print_freq': 10}}}
IN R1:  {'R1': {'train_loss': 9.376359957968816e-05, 'train_acc': 99.99479651451111, 'test_loss': 1.439763069152832, 'test_acc': 96.53401947021484, 'convergence': 23.82562255859375, 'R1': 3, 'dataset_sup': {'name': 'ImageNette', 'noise_std': 0, 'channels': 3, 'width': 160, 'height': 160, 'validation_split': 0.2, 'training_sample': 9469, 'testing_sample': 10000, 'out_channels': 2, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 32, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'px': 160, 'nb_epoch': 50, 'print_freq': 10, 'validation': False, 'continual_learning': True, 'old_dataset_size': 160, 'n_classes': 2, 'selected_classes': [6, 9]}, 'dataset_unsup': {'name': 'ImageNette', 'noise_std': 0, 'channels': 3, 'width': 160, 'height': 160, 'validation_split': 0.2, 'training_sample': 9469, 'testing_sample': 10000, 'out_channels': 2, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 10, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'px': 160, 'nb_epoch': 1, 'print_freq': 10, 'validation': False, 'continual_learning': True, 'old_dataset_size': 160, 'n_classes': 2, 'selected_classes': [6, 9]}, 'train_config': {'t0': {'blocks': [0], 'mode': 'unsupervised', 'lr': 0.08, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 10}, 't2': {'blocks': [1], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 10}, 't4': {'blocks': [2], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 10}, 't6': {'blocks': [3], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 10}, 't8': {'blocks': [4], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 10}, 't10': {'blocks': [5], 'mode': 'supervised', 'lr': 0.001, 'nb_epoch': 50, 'batch_size': 32, 'print_freq': 10}}}}
SEED:  0
block 0, size : 48 80 80
range = 2.886751345948129
block 1, size : 192 40 40
range = 1.2028130608117202
block 2, size : 768 20 20
range = 0.6014065304058601
block 3, size : 3072 10 10
range = 0.30070326520293006
block 4, size : 12288 5 5
range = 0.15035163260146503
range = 0.03125
The device used will be: 
True
cuda:0
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.08, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 1.1, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 2, 'weight_init': 'normal', 'weight_init_range': 2.886751345948129, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.75, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 48, 'kernel_size': 5, 'in_channels': 3, 'lr_scheduler': {'lr': 0.08, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0010560777273207309, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.75}}
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.01, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.7, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'normal', 'weight_init_range': 1.2028130608117202, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.75, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 192, 'kernel_size': 3, 'in_channels': 48, 'lr_scheduler': {'lr': 0.01, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0010560777273207309, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.75}}
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.01, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.5, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'normal', 'weight_init_range': 0.6014065304058601, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.75, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 768, 'kernel_size': 3, 'in_channels': 192, 'lr_scheduler': {'lr': 0.01, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0010560777273207309, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.75}}
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.01, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.4, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'normal', 'weight_init_range': 0.30070326520293006, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.75, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 3072, 'kernel_size': 3, 'in_channels': 768, 'lr_scheduler': {'lr': 0.01, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0010560777273207309, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.75}}
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.01, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.25, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'normal', 'weight_init_range': 0.15035163260146503, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.75, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 12288, 'kernel_size': 3, 'in_channels': 3072, 'lr_scheduler': {'lr': 0.01, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0010560777273207309, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.75}}
CONFIG: {'arch': 'MLP', 'lr': 0.05, 'adaptive': True, 'lr_sup': 0.001, 'speed': 0.4, 'lr_div': 100, 'lebesgue_p': 2, 't_invert': 10, 'beta': 0.01, 'power': 4.5, 'ranking_param': 3, 'delta': 0.1, 'hebbian': False, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'lr_bias': 600, 'softness': 'soft', 'soft_activation_fn': 'exp', 'plasticity': 'SoftHebb', 'metric_mode': 'unsupervised', 'weight_init': 'positive', 'weight_init_range': 0.03125, 'weight_init_offset': 0, 'weight_decay': 0, 'radius': 10, 'power_lr': 0.2, 'out_channels': 2, 'in_channels': 307200, 'old_channels': 12288, 'lr_scheduler': {'decay': 'cste', 'lr': 0.1}}

 Model IMG_2C_CL loaded successfuly with best perf



 ----- Architecture Block BatchNorm2dSK3482(5, 5)1.100000023841858reflect, number 0 -----
- BatchNorm2d(3, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(3, 48, lebesgue_p=2, pruning=0, kernel_size=(5, 5), bias=False, padding_mode=reflect, t_invert=1.100000023841858, bias=False, lr_bias=0.0909, ranking_param=3, delta=2, activation=exp)
- Triangle(power=0.7)
- MaxPool2d(kernel_size=4, stride=2, padding=1, dilation=1, ceil_mode=False)

 ----- Architecture Block BatchNorm2dSK481922(3, 3)0.699999988079071reflect, number 1 -----
- BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(48, 192, lebesgue_p=2, pruning=0, kernel_size=(3, 3), bias=False, padding_mode=reflect, t_invert=0.699999988079071, bias=False, lr_bias=0.1429, ranking_param=3, delta=2, activation=exp)
- Triangle(power=0.7)
- MaxPool2d(kernel_size=4, stride=2, padding=1, dilation=1, ceil_mode=False)

 ----- Architecture Block BatchNorm2dSK1927682(3, 3)0.5reflect, number 2 -----
- BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(192, 768, lebesgue_p=2, pruning=0, kernel_size=(3, 3), bias=False, padding_mode=reflect, t_invert=0.5, bias=False, lr_bias=0.2, ranking_param=3, delta=2, activation=exp)
- Triangle(power=0.7)
- MaxPool2d(kernel_size=4, stride=2, padding=1, dilation=1, ceil_mode=False)

 ----- Architecture Block BatchNorm2dSK76830722(3, 3)0.4000000059604645reflect, number 3 -----
- BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(768, 3072, lebesgue_p=2, pruning=0, kernel_size=(3, 3), bias=False, padding_mode=reflect, t_invert=0.4000000059604645, bias=False, lr_bias=0.25, ranking_param=3, delta=2, activation=exp)
- Triangle(power=1.4)
- MaxPool2d(kernel_size=4, stride=2, padding=1, dilation=1, ceil_mode=False)

 ----- Architecture Block BatchNorm2dSK3072122882(3, 3)0.25reflect, number 4 -----
- BatchNorm2d(3072, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(3072, 12288, lebesgue_p=2, pruning=0, kernel_size=(3, 3), bias=False, padding_mode=reflect, t_invert=0.25, bias=False, lr_bias=0.4, ranking_param=3, delta=2, activation=exp)
- Triangle(power=1.0)
- AvgPool2d(kernel_size=2, stride=2, padding=0)

 ----- Architecture Block FlattenDropout(p=0.5, inplace=False)Linear(in_, number 5 -----
- Flatten(start_dim=1, end_dim=-1)
- Dropout(p=0.5, inplace=False)
- Linear(in_features=307200, out_features=2, bias=True)

 ********** Hebbian Unsupervised learning of blocks [0] **********
SEED:  0
BEFORE RESIZING
AFTER RESIZING
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 8]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
756
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 756
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/val
    Split: val
    StandardTransform
Transform: Compose(
               Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 8]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
1944
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 1944
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/train
    Split: train
    StandardTransform
Transform: Compose(
               Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 8]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
1944
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 1944
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/train
    Split: train
    StandardTransform
Transform: Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
------------------------
INDICES:  1944
IMAGE SIZE: torch.Size([10, 3, 160, 160])
SAVING FOLDER FOR UNSUP:  IMG_2C_CL
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 1.57e-01	time: 00:00:24	Acc_train 0.00	Acc_test 0.00	convergence: 2.40e+01	R1: 0	Info MB:0.000e+00/SB:0.000e+00/MW:9.452e-03/SW:4.733e-01/MR:3.675e+00/SR:1.835e+00/MeD:1.521e+00/MaD:4.263e+00/MW:0.732/MAW:0.268
|        0 |       1 |      2 |       3 |        4 |       5 |      6 |       7 |        8 |       9 |       10 |      11 |      12 |      13 |      14 |      15 |         16 |       17 |      18 |       19 |      20 |       21 |      22 |      23 |      24 |        25 |      26 |      27 |       28 |      29 |
|----------+---------+--------+---------+----------+---------+--------+---------+----------+---------+----------+---------+---------+---------+---------+---------+------------+----------+---------+----------+---------+----------+---------+---------+---------+-----------+---------+---------+----------+---------|
|   0.0566 |   0.185 |   0.18 |   0.128 |   0.0331 |   0.155 |   0.18 |   0.265 |   0.0672 |   0.216 |   0.0125 |   0.145 |   0.179 |   0.129 |   0.147 |   0.266 |   6.14e-05 |   0.0818 |   0.229 |   0.0101 |   0.221 |   0.0928 |   0.174 |   0.278 |   0.221 |   6.5e-05 |   0.261 |   0.248 |   0.0568 |   0.243 |
|   1.63   |   4.07  |   3.96 |   2.87  |   1.31   |   3.42  |   3.95 |   5.95  |   1.79   |   4.75  |   1.08   |   3.21  |   3.92  |   2.9   |   3.24  |   5.95  |   1        |   2.03   |   5.07  |   1.06   |   4.87  |   2.22   |   3.81  |   6.25  |   4.89  |   1       |   5.84  |   5.51  |   1.63   |   5.41  |
|   0.57   |   0.67  |   0.55 |   0.63  |   1.24   |   0.56  |   0.73 |   0.87  |   0.75   |   0.52  |   2.29   |   0.65  |   0.78  |   0.53  |   0.54  |   0.6   |  27.05     |   0.63   |   0.59  |   2.13   |   0.74  |   0.68   |   0.65  |   0.66  |   0.65  |  35.5     |   0.87  |   1.2   |   0.67   |   0.66  |
| nan      | nan     | nan    | nan     | nan      | nan     | nan    | nan     | nan      | nan     | nan      | nan     | nan     | nan     | nan     | nan     | nan        | nan      | nan     | nan      | nan     | nan      | nan     | nan     | nan     | nan       | nan     | nan     | nan      | nan     |
| nan      | nan     | nan    | nan     | nan      | nan     | nan    | nan     | nan      | nan     | nan      | nan     | nan     | nan     | nan     | nan     | nan        | nan      | nan     | nan      | nan     | nan      | nan     | nan     | nan     | nan       | nan     | nan     | nan      | nan     |
| nan      | nan     | nan    | nan     | nan      | nan     | nan    | nan     | nan      | nan     | nan      | nan     | nan     | nan     | nan     | nan     | nan        | nan      | nan     | nan      | nan     | nan      | nan     | nan     | nan     | nan       | nan     | nan     | nan      | nan     |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/IMG_2C_CL/models

 ********** Hebbian Unsupervised learning of blocks [1] **********
SEED:  0
BEFORE RESIZING
AFTER RESIZING
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 8]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
756
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 756
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/val
    Split: val
    StandardTransform
Transform: Compose(
               Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 8]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
1944
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 1944
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/train
    Split: train
    StandardTransform
Transform: Compose(
               Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 8]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
1944
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 1944
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/train
    Split: train
    StandardTransform
Transform: Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
------------------------
INDICES:  1944
IMAGE SIZE: torch.Size([10, 3, 160, 160])
SAVING FOLDER FOR UNSUP:  IMG_2C_CL
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 1.57e-01	time: 00:00:49	Acc_train 0.00	Acc_test 0.00	convergence: 2.40e+01	R1: 0	Info MB:0.000e+00/SB:0.000e+00/MW:1.843e-03/SW:4.907e-01/MR:9.932e+00/SR:2.330e+00/MeD:1.889e+00/MaD:7.003e+00/MW:0.556/MAW:0.444
|        0 |        1 |        2 |        3 |        4 |        5 |        6 |        7 |        8 |        9 |       10 |       11 |       12 |       13 |     14 |       15 |       16 |      17 |       18 |       19 |       20 |       21 |      22 |       23 |       24 |       25 |       26 |       27 |       28 |       29 |
|----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+--------+----------+----------+---------+----------+----------+----------+----------+---------+----------+----------+----------+----------+----------+----------+----------|
|   0.0654 |   0.0589 |   0.0722 |   0.0525 |   0.0537 |   0.0551 |   0.0472 |   0.0516 |   0.0482 |   0.0536 |   0.0613 |   0.0516 |   0.0523 |   0.0584 |   0.06 |   0.0543 |   0.0621 |   0.032 |   0.0615 |   0.0408 |   0.0497 |   0.0532 |   0.035 |   0.0452 |   0.0551 |   0.0492 |   0.0798 |   0.0468 |   0.0529 |   0.0456 |
|  13.24   |  11.63   |  14.96   |  10.12   |  10.41   |  10.72   |   8.92   |   9.92   |   9.14   |  10.38   |  12.22   |   9.93   |  10.07   |  11.52   |  11.9  |  10.54   |  12.41   |   5.73  |  12.27   |   7.52   |   9.49   |  10.28   |   6.32  |   8.48   |  10.73   |   9.37   |  16.94   |   8.84   |  10.23   |   8.57   |
|   0.19   |   1.02   |   0.1    |   1.03   |   0.24   |   0.05   |   0.25   |   0.27   |   0.31   |   0.24   |   0.82   |   0.66   |   0.31   |   0.39   |   0.42 |   0.19   |   0.15   |   1.66  |   0.5    |   0.46   |   0.12   |   0.3    |   0.38  |   0.33   |   0.24   |   0.67   |   0.48   |   0.41   |   0.59   |   0.18   |
| nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan    | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      |
| nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan    | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      |
| nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan    | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/IMG_2C_CL/models

 ********** Hebbian Unsupervised learning of blocks [2] **********
SEED:  0
BEFORE RESIZING
AFTER RESIZING
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 8]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
756
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 756
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/val
    Split: val
    StandardTransform
Transform: Compose(
               Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 8]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
1944
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 1944
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/train
    Split: train
    StandardTransform
Transform: Compose(
               Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 8]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
1944
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 1944
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/train
    Split: train
    StandardTransform
Transform: Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
------------------------
INDICES:  1944
IMAGE SIZE: torch.Size([10, 3, 160, 160])
SAVING FOLDER FOR UNSUP:  IMG_2C_CL
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 1.08e-01	time: 00:01:13	Acc_train 0.00	Acc_test 0.00	convergence: 2.40e+01	R1: 0	Info MB:0.000e+00/SB:0.000e+00/MW:7.681e-04/SW:3.712e-01/MR:1.513e+01/SR:3.052e+00/MeD:2.439e+00/MaD:1.386e+01/MW:0.579/MAW:0.421
|       0 |        1 |        2 |       3 |       4 |        5 |        6 |        7 |        8 |        9 |       10 |       11 |       12 |       13 |       14 |       15 |       16 |       17 |       18 |       19 |       20 |       21 |       22 |       23 |       24 |       25 |       26 |       27 |       28 |       29 |
|---------+----------+----------+---------+---------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------|
|   0.092 |   0.0644 |   0.0784 |   0.077 |   0.074 |   0.0669 |   0.0759 |   0.0719 |   0.0711 |   0.0943 |   0.0663 |   0.0904 |   0.0622 |   0.0732 |   0.0762 |   0.0677 |   0.0853 |   0.0517 |   0.0725 |   0.0615 |   0.0917 |   0.0644 |   0.0628 |   0.0797 |   0.0943 |   0.0825 |   0.0671 |   0.0717 |   0.0611 |   0.0659 |
|  20.27  |  12.99   |  16.57   |  16.2   |  15.42  |  13.61   |  15.92   |  14.88   |  14.68   |  20.92   |  13.45   |  19.84   |  12.43   |  15.2    |  15.98   |  13.8    |  18.43   |   9.94   |  15.03   |  12.27   |  20.2    |  12.97   |  12.59   |  16.93   |  20.93   |  17.67   |  13.66   |  14.83   |  12.16   |  13.36   |
|   0.08  |   0.19   |   0.1    |   0.07  |   0.08  |   0.08   |   0.12   |   0.06   |   0.09   |   0.04   |   0.12   |   0.05   |   0.13   |   0.11   |   0.04   |   0.22   |   0.06   |   0.18   |   0.07   |   0.09   |   0.02   |   0.05   |   0.19   |   0.04   |   0.05   |   0.12   |   0.27   |   0.06   |   0.09   |   0.16   |
| nan     | nan      | nan      | nan     | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      |
| nan     | nan      | nan      | nan     | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      |
| nan     | nan      | nan      | nan     | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/IMG_2C_CL/models

 ********** Hebbian Unsupervised learning of blocks [3] **********
SEED:  0
BEFORE RESIZING
AFTER RESIZING
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 8]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
756
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 756
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/val
    Split: val
    StandardTransform
Transform: Compose(
               Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 8]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
1944
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 1944
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/train
    Split: train
    StandardTransform
Transform: Compose(
               Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 8]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
1944
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 1944
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/train
    Split: train
    StandardTransform
Transform: Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
------------------------
INDICES:  1944
IMAGE SIZE: torch.Size([10, 3, 160, 160])
SAVING FOLDER FOR UNSUP:  IMG_2C_CL
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 8.56e-02	time: 00:01:39	Acc_train 0.00	Acc_test 0.00	convergence: 2.40e+01	R1: 0	Info MB:0.000e+00/SB:0.000e+00/MW:3.702e-04/SW:2.283e-01/MR:1.862e+01/SR:3.689e+00/MeD:2.865e+00/MaD:1.760e+01/MW:0.624/MAW:0.376
|        0 |        1 |        2 |        3 |        4 |        5 |        6 |        7 |       8 |        9 |      10 |       11 |      12 |       13 |       14 |       15 |       16 |       17 |       18 |       19 |      20 |      21 |       22 |       23 |       24 |       25 |       26 |       27 |       28 |       29 |
|----------+----------+----------+----------+----------+----------+----------+----------+---------+----------+---------+----------+---------+----------+----------+----------+----------+----------+----------+----------+---------+---------+----------+----------+----------+----------+----------+----------+----------+----------|
|   0.0917 |   0.0875 |   0.0891 |   0.0963 |   0.0796 |   0.0879 |   0.0549 |   0.0768 |   0.101 |   0.0837 |   0.069 |   0.0787 |   0.091 |   0.0624 |   0.0758 |   0.0748 |   0.0906 |   0.0688 |   0.0899 |   0.0817 |   0.088 |   0.107 |   0.0906 |   0.0831 |   0.0937 |   0.0764 |   0.0926 |   0.0664 |   0.0779 |   0.0681 |
|  20.2    |  19.04   |  19.48   |  21.48   |  16.89   |  19.15   |  10.68   |  16.15   |  22.91  |  18      |  14.14  |  16.66   |  19.99  |  12.5    |  15.9    |  15.63   |  19.88   |  14.08   |  19.68   |  17.45   |  19.18  |  24.57  |  19.89   |  17.83   |  20.75   |  16.05   |  20.44   |  13.49   |  16.44   |  13.91   |
|   0.02   |   0.03   |   0.02   |   0.02   |   0.04   |   0      |   0.13   |   0.04   |   0.01  |   0.03   |   0.02  |   0.05   |   0.03  |   0.06   |   0.02   |   0.04   |   0.04   |   0.03   |   0.01   |   0.02   |   0.04  |   0.01  |   0.02   |   0.01   |   0.02   |   0.08   |   0      |   0      |   0.05   |   0.08   |
| nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan     | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      |
| nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan     | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      |
| nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan     | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/IMG_2C_CL/models

 ********** Hebbian Unsupervised learning of blocks [4] **********
SEED:  0
BEFORE RESIZING
AFTER RESIZING
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 8]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
756
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 756
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/val
    Split: val
    StandardTransform
Transform: Compose(
               Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 8]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
1944
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 1944
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/train
    Split: train
    StandardTransform
Transform: Compose(
               Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 8]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
1944
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 1944
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/train
    Split: train
    StandardTransform
Transform: Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
------------------------
INDICES:  1944
IMAGE SIZE: torch.Size([10, 3, 160, 160])
SAVING FOLDER FOR UNSUP:  IMG_2C_CL
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 7.25e-02	time: 00:02:19	Acc_train 0.00	Acc_test 0.00	convergence: 2.36e+01	R1: 4	Info MB:0.000e+00/SB:0.000e+00/MW:1.786e-06/SW:1.491e-01/MR:2.460e+01/SR:3.151e+00/MeD:1.730e+00/MaD:2.359e+01/MW:0.706/MAW:0.294
|        0 |       1 |       2 |       3 |       4 |       5 |       6 |       7 |         8 |       9 |      10 |      11 |      12 |      13 |      14 |      15 |      16 |      17 |      18 |       19 |      20 |      21 |     22 |      23 |     24 |      25 |      26 |      27 |     28 |      29 |
|----------+---------+---------+---------+---------+---------+---------+---------+-----------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+----------+---------+---------+--------+---------+--------+---------+---------+---------+--------+---------|
|   0.0868 |   0.111 |   0.109 |   0.108 |   0.093 |   0.108 |   0.111 |   0.114 |   0.00212 |   0.107 |   0.109 |   0.109 |   0.116 |   0.112 |   0.101 |   0.101 |   0.105 |   0.104 |   0.111 |   0.0971 |   0.102 |   0.106 |   0.11 |   0.108 |   0.11 |   0.103 |   0.108 |   0.115 |   0.1  |   0.107 |
|  18.85   |  25.85  |  25.16  |  25.01  |  20.57  |  24.74  |  25.67  |  26.61  |   1.13    |  24.68  |  25.2   |  25.15  |  27.41  |  26.1   |  22.74  |  22.94  |  23.95  |  23.82  |  25.77  |  21.73   |  23.21  |  24.16  |  25.54 |  24.85  |  25.44 |  23.46  |  24.92  |  27.04  |  22.67 |  24.57  |
|   0.01   |   0.01  |   0     |   0     |   0     |   0     |   0     |   0     |   0.03    |   0     |   0     |   0     |   0.01  |   0     |   0.01  |   0     |   0.01  |   0     |   0     |   0.01   |   0.01  |   0.01  |   0    |   0     |   0    |   0     |   0     |   0     |   0    |   0     |
| nan      | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan       | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan      | nan     | nan     | nan    | nan     | nan    | nan     | nan     | nan     | nan    | nan     |
| nan      | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan       | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan      | nan     | nan     | nan    | nan     | nan    | nan     | nan     | nan     | nan    | nan     |
| nan      | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan       | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan      | nan     | nan     | nan    | nan     | nan    | nan     | nan     | nan     | nan    | nan     |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/IMG_2C_CL/models

 ********** Supervised learning of blocks [5] **********
SAVING FOLDER FOR SUP:  IMG_2C_CL
SEED:  0
BEFORE RESIZING
AFTER RESIZING
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 8]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
756
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 756
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/val
    Split: val
    StandardTransform
Transform: Compose(
               Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 8]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
1944
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 1944
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/train
    Split: train
    StandardTransform
Transform: Compose(
               Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
[2, 8]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
1944
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 1944
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/train
    Split: train
    StandardTransform
Transform: Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
------------------------
INDICES:  1944
IMAGE SIZE: torch.Size([32, 3, 160, 160])
Epoch: [1/50]	lr: 1.00e-03	time: 00:02:38	Loss_train 7.51540	Acc_train 84.83	/	Loss_test 3.28807	Acc_test 90.74
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/IMG_2C_CL/models
Epoch: [10/50]	lr: 1.00e-03	time: 00:04:20	Loss_train 0.92296	Acc_train 95.70	/	Loss_test 2.57695	Acc_test 93.12
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/IMG_2C_CL/models
Epoch: [20/50]	lr: 2.50e-04	time: 00:06:13	Loss_train 0.03751	Acc_train 99.67	/	Loss_test 2.72053	Acc_test 92.46
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/IMG_2C_CL/models
Epoch: [30/50]	lr: 1.25e-04	time: 00:08:08	Loss_train 0.00298	Acc_train 99.95	/	Loss_test 2.71253	Acc_test 93.12
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/IMG_2C_CL/models
Epoch: [40/50]	lr: 3.13e-05	time: 00:10:01	Loss_train 0.00121	Acc_train 99.96	/	Loss_test 2.84435	Acc_test 93.25
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/IMG_2C_CL/models
Epoch: [50/50]	lr: 7.81e-06	time: 00:11:54	Loss_train 0.00088	Acc_train 99.98	/	Loss_test 2.64548	Acc_test 93.12
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/IMG_2C_CL/models
RESULT:  {'train_loss': 0.0008766931714490056, 'train_acc': 99.98456835746765, 'test_loss': 2.645477533340454, 'test_acc': 93.12169647216797, 'convergence': 23.595958709716797, 'R1': 4, 'dataset_sup': {'name': 'ImageNette', 'noise_std': 0, 'channels': 3, 'width': 160, 'height': 160, 'validation_split': 0.2, 'training_sample': 9469, 'testing_sample': 10000, 'out_channels': 2, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 32, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'px': 160, 'nb_epoch': 50, 'print_freq': 10, 'validation': False, 'continual_learning': True, 'old_dataset_size': 160, 'n_classes': 2, 'selected_classes': [2, 8]}, 'dataset_unsup': {'name': 'ImageNette', 'noise_std': 0, 'channels': 3, 'width': 160, 'height': 160, 'validation_split': 0.2, 'training_sample': 9469, 'testing_sample': 10000, 'out_channels': 2, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 10, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'px': 160, 'nb_epoch': 1, 'print_freq': 10, 'validation': False, 'continual_learning': True, 'old_dataset_size': 160, 'n_classes': 2, 'selected_classes': [2, 8]}, 'train_config': {'t0': {'blocks': [0], 'mode': 'unsupervised', 'lr': 0.08, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 10}, 't2': {'blocks': [1], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 10}, 't4': {'blocks': [2], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 10}, 't6': {'blocks': [3], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 10}, 't8': {'blocks': [4], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 10}, 't10': {'blocks': [5], 'mode': 'supervised', 'lr': 0.001, 'nb_epoch': 50, 'batch_size': 32, 'print_freq': 10}}}
IN R2:  {'R1': {'train_loss': 9.376359957968816e-05, 'train_acc': 99.99479651451111, 'test_loss': 1.439763069152832, 'test_acc': 96.53401947021484, 'convergence': 23.82562255859375, 'R1': 3, 'dataset_sup': {'name': 'ImageNette', 'noise_std': 0, 'channels': 3, 'width': 160, 'height': 160, 'validation_split': 0.2, 'training_sample': 9469, 'testing_sample': 10000, 'out_channels': 2, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 32, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'px': 160, 'nb_epoch': 50, 'print_freq': 10, 'validation': False, 'continual_learning': True, 'old_dataset_size': 160, 'n_classes': 2, 'selected_classes': [6, 9]}, 'dataset_unsup': {'name': 'ImageNette', 'noise_std': 0, 'channels': 3, 'width': 160, 'height': 160, 'validation_split': 0.2, 'training_sample': 9469, 'testing_sample': 10000, 'out_channels': 2, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 10, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'px': 160, 'nb_epoch': 1, 'print_freq': 10, 'validation': False, 'continual_learning': True, 'old_dataset_size': 160, 'n_classes': 2, 'selected_classes': [6, 9]}, 'train_config': {'t0': {'blocks': [0], 'mode': 'unsupervised', 'lr': 0.08, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 10}, 't2': {'blocks': [1], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 10}, 't4': {'blocks': [2], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 10}, 't6': {'blocks': [3], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 10}, 't8': {'blocks': [4], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 10}, 't10': {'blocks': [5], 'mode': 'supervised', 'lr': 0.001, 'nb_epoch': 50, 'batch_size': 32, 'print_freq': 10}}}, 'R2': {'train_loss': 0.0008766931714490056, 'train_acc': 99.98456835746765, 'test_loss': 2.645477533340454, 'test_acc': 93.12169647216797, 'convergence': 23.595958709716797, 'R1': 4, 'dataset_sup': {'name': 'ImageNette', 'noise_std': 0, 'channels': 3, 'width': 160, 'height': 160, 'validation_split': 0.2, 'training_sample': 9469, 'testing_sample': 10000, 'out_channels': 2, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 32, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'px': 160, 'nb_epoch': 50, 'print_freq': 10, 'validation': False, 'continual_learning': True, 'old_dataset_size': 160, 'n_classes': 2, 'selected_classes': [2, 8]}, 'dataset_unsup': {'name': 'ImageNette', 'noise_std': 0, 'channels': 3, 'width': 160, 'height': 160, 'validation_split': 0.2, 'training_sample': 9469, 'testing_sample': 10000, 'out_channels': 2, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 10, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'px': 160, 'nb_epoch': 1, 'print_freq': 10, 'validation': False, 'continual_learning': True, 'old_dataset_size': 160, 'n_classes': 2, 'selected_classes': [2, 8]}, 'train_config': {'t0': {'blocks': [0], 'mode': 'unsupervised', 'lr': 0.08, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 10}, 't2': {'blocks': [1], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 10}, 't4': {'blocks': [2], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 10}, 't6': {'blocks': [3], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 10}, 't8': {'blocks': [4], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 10, 'print_freq': 10}, 't10': {'blocks': [5], 'mode': 'supervised', 'lr': 0.001, 'nb_epoch': 50, 'batch_size': 32, 'print_freq': 10}}}}
SEED:  0
block 0, size : 48 80 80
range = 2.886751345948129
block 1, size : 192 40 40
range = 1.2028130608117202
block 2, size : 768 20 20
range = 0.6014065304058601
block 3, size : 3072 10 10
range = 0.30070326520293006
block 4, size : 12288 5 5
range = 0.15035163260146503
range = 0.03125
The device used will be: 
True
cuda:0
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.08, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 1.1, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 2, 'weight_init': 'normal', 'weight_init_range': 2.886751345948129, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.75, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 48, 'kernel_size': 5, 'in_channels': 3, 'lr_scheduler': {'lr': 0.08, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0010560777273207309, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.75}}
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.01, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.7, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'normal', 'weight_init_range': 1.2028130608117202, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.75, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 192, 'kernel_size': 3, 'in_channels': 48, 'lr_scheduler': {'lr': 0.01, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0010560777273207309, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.75}}
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.01, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.5, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'normal', 'weight_init_range': 0.6014065304058601, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.75, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 768, 'kernel_size': 3, 'in_channels': 192, 'lr_scheduler': {'lr': 0.01, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0010560777273207309, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.75}}
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.01, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.4, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'normal', 'weight_init_range': 0.30070326520293006, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.75, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 3072, 'kernel_size': 3, 'in_channels': 768, 'lr_scheduler': {'lr': 0.01, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0010560777273207309, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.75}}
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.01, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.25, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'normal', 'weight_init_range': 0.15035163260146503, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.75, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 12288, 'kernel_size': 3, 'in_channels': 3072, 'lr_scheduler': {'lr': 0.01, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0010560777273207309, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.75}}
CONFIG: {'arch': 'MLP', 'lr': 0.05, 'adaptive': True, 'lr_sup': 0.001, 'speed': 0.4, 'lr_div': 100, 'lebesgue_p': 2, 't_invert': 10, 'beta': 0.01, 'power': 4.5, 'ranking_param': 3, 'delta': 0.1, 'hebbian': False, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'lr_bias': 600, 'softness': 'soft', 'soft_activation_fn': 'exp', 'plasticity': 'SoftHebb', 'metric_mode': 'unsupervised', 'weight_init': 'positive', 'weight_init_range': 0.03125, 'weight_init_offset': 0, 'weight_decay': 0, 'radius': 10, 'power_lr': 0.2, 'out_channels': 2, 'in_channels': 307200, 'old_channels': 12288, 'lr_scheduler': {'decay': 'cste', 'lr': 0.1}}

 Model IMG_2C_CL loaded successfuly with best perf



 ----- Architecture Block BatchNorm2dSK3482(5, 5)1.100000023841858reflect, number 0 -----
- BatchNorm2d(3, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(3, 48, lebesgue_p=2, pruning=0, kernel_size=(5, 5), bias=False, padding_mode=reflect, t_invert=1.100000023841858, bias=False, lr_bias=0.0909, ranking_param=3, delta=2, activation=exp)
- Triangle(power=0.7)
- MaxPool2d(kernel_size=4, stride=2, padding=1, dilation=1, ceil_mode=False)

 ----- Architecture Block BatchNorm2dSK481922(3, 3)0.699999988079071reflect, number 1 -----
- BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(48, 192, lebesgue_p=2, pruning=0, kernel_size=(3, 3), bias=False, padding_mode=reflect, t_invert=0.699999988079071, bias=False, lr_bias=0.1429, ranking_param=3, delta=2, activation=exp)
- Triangle(power=0.7)
- MaxPool2d(kernel_size=4, stride=2, padding=1, dilation=1, ceil_mode=False)

 ----- Architecture Block BatchNorm2dSK1927682(3, 3)0.5reflect, number 2 -----
- BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(192, 768, lebesgue_p=2, pruning=0, kernel_size=(3, 3), bias=False, padding_mode=reflect, t_invert=0.5, bias=False, lr_bias=0.2, ranking_param=3, delta=2, activation=exp)
- Triangle(power=0.7)
- MaxPool2d(kernel_size=4, stride=2, padding=1, dilation=1, ceil_mode=False)

 ----- Architecture Block BatchNorm2dSK76830722(3, 3)0.4000000059604645reflect, number 3 -----
- BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(768, 3072, lebesgue_p=2, pruning=0, kernel_size=(3, 3), bias=False, padding_mode=reflect, t_invert=0.4000000059604645, bias=False, lr_bias=0.25, ranking_param=3, delta=2, activation=exp)
- Triangle(power=1.4)
- MaxPool2d(kernel_size=4, stride=2, padding=1, dilation=1, ceil_mode=False)

 ----- Architecture Block BatchNorm2dSK3072122882(3, 3)0.25reflect, number 4 -----
- BatchNorm2d(3072, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(3072, 12288, lebesgue_p=2, pruning=0, kernel_size=(3, 3), bias=False, padding_mode=reflect, t_invert=0.25, bias=False, lr_bias=0.4, ranking_param=3, delta=2, activation=exp)
- Triangle(power=1.0)
- AvgPool2d(kernel_size=2, stride=2, padding=0)

 ----- Architecture Block FlattenDropout(p=0.5, inplace=False)Linear(in_, number 5 -----
- Flatten(start_dim=1, end_dim=-1)
- Dropout(p=0.5, inplace=False)
- Linear(in_features=307200, out_features=2, bias=True)

 ********** Hebbian Unsupervised learning of blocks [0] **********
SEED:  0
BEFORE RESIZING
AFTER RESIZING
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
[6, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
779
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 779
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/val
    Split: val
    StandardTransform
Transform: Compose(
               Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
[6, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
1921
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 1921
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/train
    Split: train
    StandardTransform
Transform: Compose(
               Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
[6, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
1921
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 1921
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/train
    Split: train
    StandardTransform
Transform: Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
------------------------
INDICES:  1921
IMAGE SIZE: torch.Size([10, 3, 160, 160])
SAVING FOLDER FOR UNSUP:  IMG_2C_CL
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 1.15e-01	time: 00:00:23	Acc_train 0.00	Acc_test 0.00	convergence: 2.40e+01	R1: 0	Info MB:0.000e+00/SB:0.000e+00/MW:-3.856e-03/SW:3.552e-01/MR:2.795e+00/SR:1.298e+00/MeD:1.025e+00/MaD:2.714e+00/MW:0.709/MAW:0.291
|        0 |       1 |       2 |       3 |          4 |       5 |       6 |       7 |        8 |       9 |         10 |      11 |      12 |      13 |      14 |     15 |         16 |       17 |      18 |        19 |      20 |      21 |      22 |      23 |      24 |        25 |     26 |      27 |       28 |      29 |
|----------+---------+---------+---------+------------+---------+---------+---------+----------+---------+------------+---------+---------+---------+---------+--------+------------+----------+---------+-----------+---------+---------+---------+---------+---------+-----------+--------+---------+----------+---------|
|   0.0425 |   0.146 |   0.123 |   0.115 |   0.000655 |   0.116 |   0.121 |   0.201 |   0.0129 |   0.183 |   4.56e-05 |   0.138 |   0.139 |   0.115 |   0.115 |   0.24 |   4.62e-05 |   0.0338 |   0.157 |   0.00164 |   0.198 |   0.177 |   0.132 |   0.248 |   0.188 |   0.00154 |   0.19 |   0.125 |   0.0163 |   0.233 |
|   1.43   |   3.24  |   2.78  |   2.62  |   1        |   2.63  |   2.74  |   4.41  |   1.09   |   4.02  |   1        |   3.08  |   3.09  |   2.63  |   2.63  |   5.32 |   1        |   1.32   |   3.45  |   1.01    |   4.35  |   3.88  |   2.95  |   5.51  |   4.13  |   1.01    |   4.16 |   2.81  |   1.12   |   5.16  |
|   0.56   |   0.52  |   0.53  |   0.5   |   7.61     |   0.56  |   0.52  |   0.47  |   0.76   |   0.54  |  24.87     |   0.51  |   0.57  |   0.49  |   0.46  |   0.54 |  28.65     |   0.62   |   0.54  |   2.97    |   0.53  |   0.53  |   0.6   |   0.53  |   0.52  |   4.48    |   0.53 |   0.65  |   0.69   |   0.59  |
| nan      | nan     | nan     | nan     | nan        | nan     | nan     | nan     | nan      | nan     | nan        | nan     | nan     | nan     | nan     | nan    | nan        | nan      | nan     | nan       | nan     | nan     | nan     | nan     | nan     | nan       | nan    | nan     | nan      | nan     |
| nan      | nan     | nan     | nan     | nan        | nan     | nan     | nan     | nan      | nan     | nan        | nan     | nan     | nan     | nan     | nan    | nan        | nan      | nan     | nan       | nan     | nan     | nan     | nan     | nan     | nan       | nan    | nan     | nan      | nan     |
| nan      | nan     | nan     | nan     | nan        | nan     | nan     | nan     | nan      | nan     | nan        | nan     | nan     | nan     | nan     | nan    | nan        | nan      | nan     | nan       | nan     | nan     | nan     | nan     | nan     | nan       | nan    | nan     | nan      | nan     |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/IMG_2C_CL/models

 ********** Hebbian Unsupervised learning of blocks [1] **********
SEED:  0
BEFORE RESIZING
AFTER RESIZING
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
[6, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
779
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 779
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/val
    Split: val
    StandardTransform
Transform: Compose(
               Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
[6, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
1921
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 1921
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/train
    Split: train
    StandardTransform
Transform: Compose(
               Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
[6, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
1921
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 1921
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/train
    Split: train
    StandardTransform
Transform: Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
------------------------
INDICES:  1921
IMAGE SIZE: torch.Size([10, 3, 160, 160])
SAVING FOLDER FOR UNSUP:  IMG_2C_CL
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 1.15e-01	time: 00:00:48	Acc_train 0.00	Acc_test 0.00	convergence: 2.40e+01	R1: 0	Info MB:0.000e+00/SB:0.000e+00/MW:8.847e-03/SW:3.678e-01/MR:7.403e+00/SR:1.924e+00/MeD:1.559e+00/MaD:6.342e+00/MW:0.555/MAW:0.445
|        0 |        1 |        2 |        3 |        4 |        5 |        6 |        7 |       8 |        9 |       10 |       11 |      12 |      13 |      14 |       15 |      16 |       17 |       18 |       19 |       20 |       21 |       22 |      23 |       24 |       25 |       26 |      27 |      28 |       29 |
|----------+----------+----------+----------+----------+----------+----------+----------+---------+----------+----------+----------+---------+---------+---------+----------+---------+----------+----------+----------+----------+----------+----------+---------+----------+----------+----------+---------+---------+----------|
|   0.0497 |   0.0436 |   0.0457 |   0.0326 |   0.0403 |   0.0494 |   0.0382 |   0.0361 |   0.045 |   0.0355 |   0.0498 |   0.0384 |   0.038 |   0.051 |   0.049 |   0.0383 |   0.051 |   0.0135 |   0.0512 |   0.0316 |   0.0396 |   0.0396 |   0.0244 |   0.028 |   0.0404 |   0.0414 |   0.0524 |   0.037 |   0.045 |   0.0342 |
|   9.47   |   8.11   |   8.59   |   5.84   |   7.4    |   9.41   |   6.97   |   6.54   |   8.43  |   6.42   |   9.51   |   7.01   |   6.93  |   9.77  |   9.33  |   7      |   9.77  |   2.49   |   9.83   |   5.64   |   7.27   |   7.26   |   4.29   |   4.94  |   7.44   |   7.65   |  10.11   |   6.72  |   8.42  |   6.16   |
|   0.43   |   0.93   |   0.33   |   0.76   |   0.25   |   0.42   |   0.21   |   0.32   |   0.14  |   0.29   |   0.84   |   0.29   |   0.24  |   0.38  |   0.25  |   0.41   |   0.47  |   3.31   |   0.27   |   0.41   |   0.26   |   0.22   |   0.26   |   0.33  |   0.32   |   0.3    |   0.46   |   0.22  |   0.3   |   0.27   |
| nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan     | nan     | nan     | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan     | nan     | nan      |
| nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan     | nan     | nan     | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan     | nan     | nan      |
| nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan     | nan     | nan     | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan     | nan     | nan      |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/IMG_2C_CL/models

 ********** Hebbian Unsupervised learning of blocks [2] **********
SEED:  0
BEFORE RESIZING
AFTER RESIZING
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
[6, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
779
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 779
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/val
    Split: val
    StandardTransform
Transform: Compose(
               Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
[6, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
1921
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 1921
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/train
    Split: train
    StandardTransform
Transform: Compose(
               Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
[6, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
1921
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 1921
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/train
    Split: train
    StandardTransform
Transform: Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
------------------------
INDICES:  1921
IMAGE SIZE: torch.Size([10, 3, 160, 160])
SAVING FOLDER FOR UNSUP:  IMG_2C_CL
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 1.08e-01	time: 00:01:10	Acc_train 0.00	Acc_test 0.00	convergence: 2.40e+01	R1: 0	Info MB:0.000e+00/SB:0.000e+00/MW:2.539e-03/SW:2.841e-01/MR:1.154e+01/SR:2.507e+00/MeD:1.967e+00/MaD:1.052e+01/MW:0.573/MAW:0.427
|        0 |        1 |        2 |        3 |      4 |        5 |        6 |        7 |        8 |        9 |       10 |       11 |       12 |       13 |       14 |       15 |       16 |       17 |       18 |       19 |       20 |       21 |       22 |      23 |       24 |       25 |      26 |       27 |       28 |       29 |
|----------+----------+----------+----------+--------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+---------+----------+----------+---------+----------+----------+----------|
|   0.0692 |   0.0585 |   0.0597 |   0.0569 |   0.06 |   0.0615 |   0.0625 |   0.0628 |   0.0575 |   0.0764 |   0.0599 |   0.0799 |   0.0407 |   0.0586 |   0.0539 |   0.0575 |   0.0726 |   0.0396 |   0.0573 |   0.0584 |   0.0836 |   0.0569 |   0.0561 |   0.068 |   0.0705 |   0.0605 |   0.055 |   0.0546 |   0.0556 |   0.0446 |
|  14.18   |  11.55   |  11.84   |  11.15   |  11.91 |  12.27   |  12.52   |  12.58   |  11.31   |  16.05   |  11.89   |  16.97   |   7.49   |  11.56   |  10.44   |  11.29   |  15.07   |   7.27   |  11.25   |  11.52   |  17.95   |  11.15   |  10.98   |  13.88  |  14.51   |  12.01   |  10.7   |  10.6    |  10.86   |   8.34   |
|   0.17   |   0.04   |   0.08   |   0.1    |   0.12 |   0.04   |   0.08   |   0.03   |   0.12   |   0.05   |   0.05   |   0.03   |   0.14   |   0.09   |   0.13   |   0.1    |   0.04   |   0.18   |   0.05   |   0.03   |   0.04   |   0.07   |   0.16   |   0.15  |   0.13   |   0.12   |   0.25  |   0.07   |   0.04   |   0.11   |
| nan      | nan      | nan      | nan      | nan    | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan     | nan      | nan      | nan      |
| nan      | nan      | nan      | nan      | nan    | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan     | nan      | nan      | nan      |
| nan      | nan      | nan      | nan      | nan    | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan     | nan      | nan      | nan      |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/IMG_2C_CL/models

 ********** Hebbian Unsupervised learning of blocks [3] **********
SEED:  0
BEFORE RESIZING
AFTER RESIZING
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
[6, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
779
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 779
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/val
    Split: val
    StandardTransform
Transform: Compose(
               Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
[6, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
1921
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 1921
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/train
    Split: train
    StandardTransform
Transform: Compose(
               Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
[6, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
1921
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 1921
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/train
    Split: train
    StandardTransform
Transform: Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
------------------------
INDICES:  1921
IMAGE SIZE: torch.Size([10, 3, 160, 160])
SAVING FOLDER FOR UNSUP:  IMG_2C_CL
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 7.51e-02	time: 00:01:36	Acc_train 0.00	Acc_test 0.00	convergence: 2.40e+01	R1: 0	Info MB:0.000e+00/SB:0.000e+00/MW:6.777e-04/SW:1.953e-01/MR:1.583e+01/SR:3.599e+00/MeD:2.795e+00/MaD:1.483e+01/MW:0.608/MAW:0.392
|        0 |        1 |        2 |        3 |        4 |        5 |        6 |        7 |        8 |        9 |       10 |       11 |       12 |       13 |       14 |       15 |       16 |       17 |       18 |       19 |       20 |       21 |       22 |       23 |       24 |       25 |       26 |       27 |       28 |       29 |
|----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------|
|   0.0638 |   0.0812 |   0.0751 |   0.0724 |   0.0664 |   0.0831 |   0.0546 |   0.0672 |   0.0776 |   0.0648 |   0.0681 |   0.0599 |   0.0853 |   0.0509 |   0.0631 |   0.0337 |   0.0879 |   0.0635 |   0.0795 |   0.0791 |   0.0478 |   0.0903 |   0.0713 |   0.0823 |   0.0857 |   0.0576 |   0.0926 |   0.0668 |   0.0537 |   0.0653 |
|  12.84   |  17.32   |  15.71   |  15      |  13.48   |  17.83   |  10.63   |  13.69   |  16.37   |  13.08   |  13.9    |  11.89   |  18.42   |   9.75   |  12.67   |   6.05   |  19.15   |  12.75   |  16.88   |  16.75   |   9.04   |  19.81   |  14.72   |  17.61   |  18.53   |  11.33   |  20.45   |  13.59   |  10.4    |  13.21   |
|   0.07   |   0.01   |   0.04   |   0.02   |   0.04   |   0.01   |   0.01   |   0.03   |   0.03   |   0.05   |   0      |   0.05   |   0.02   |   0.06   |   0.06   |   0.14   |   0.01   |   0.04   |   0.01   |   0.02   |   0.07   |   0.02   |   0.03   |   0.01   |   0.01   |   0.07   |   0      |   0      |   0.04   |   0.05   |
| nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      |
| nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      |
| nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/IMG_2C_CL/models

 ********** Hebbian Unsupervised learning of blocks [4] **********
SEED:  0
BEFORE RESIZING
AFTER RESIZING
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
[6, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
779
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 779
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/val
    Split: val
    StandardTransform
Transform: Compose(
               Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
[6, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
1921
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 1921
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/train
    Split: train
    StandardTransform
Transform: Compose(
               Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
[6, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
1921
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 1921
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/train
    Split: train
    StandardTransform
Transform: Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
------------------------
INDICES:  1921
IMAGE SIZE: torch.Size([10, 3, 160, 160])
SAVING FOLDER FOR UNSUP:  IMG_2C_CL
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 5.81e-02	time: 00:02:17	Acc_train 0.00	Acc_test 0.00	convergence: 2.35e+01	R1: 8	Info MB:0.000e+00/SB:0.000e+00/MW:5.946e-06/SW:1.492e-01/MR:2.452e+01/SR:3.725e+00/MeD:2.195e+00/MaD:2.352e+01/MW:0.700/MAW:0.300
|        0 |       1 |       2 |       3 |        4 |       5 |       6 |        7 |         8 |       9 |      10 |      11 |      12 |      13 |      14 |      15 |      16 |      17 |      18 |       19 |      20 |       21 |      22 |      23 |      24 |      25 |      26 |      27 |      28 |      29 |
|----------+---------+---------+---------+----------+---------+---------+----------+-----------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+----------+---------+----------+---------+---------+---------+---------+---------+---------+---------+---------|
|   0.0875 |   0.113 |   0.109 |   0.109 |   0.0857 |   0.109 |   0.112 |   0.0989 |   0.00216 |   0.114 |   0.109 |   0.112 |   0.116 |   0.113 |   0.102 |   0.102 |   0.106 |   0.105 |   0.112 |   0.0991 |   0.115 |   0.0966 |   0.115 |   0.106 |   0.105 |   0.108 |   0.109 |   0.116 |   0.102 |   0.107 |
|  19.02   |  26.45  |  25.27  |  25.14  |  18.53   |  25.17  |  25.95  |  22.23   |   1.13    |  26.76  |  25.26  |  25.96  |  27.24  |  26.39  |  23.03  |  23.1   |  24.35  |  23.92  |  26.21  |  22.29   |  26.85  |  21.58   |  26.99  |  24.37  |  24.07  |  24.77  |  25.03  |  27.23  |  22.98  |  24.68  |
|   0      |   0     |   0     |   0     |   0.01   |   0     |   0     |   0.01   |   0.03    |   0     |   0     |   0     |   0     |   0     |   0     |   0     |   0     |   0     |   0     |   0      |   0.01  |   0.01   |   0     |   0     |   0     |   0     |   0     |   0     |   0     |   0     |
| nan      | nan     | nan     | nan     | nan      | nan     | nan     | nan      | nan       | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan      | nan     | nan      | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     |
| nan      | nan     | nan     | nan     | nan      | nan     | nan     | nan      | nan       | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan      | nan     | nan      | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     |
| nan      | nan     | nan     | nan     | nan      | nan     | nan     | nan      | nan       | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan      | nan     | nan      | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/IMG_2C_CL/models
SEED:  0
BEFORE RESIZING
AFTER RESIZING
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
[6, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
779
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 779
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/val
    Split: val
    StandardTransform
Transform: Compose(
               Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
[6, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
1921
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 1921
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/train
    Split: train
    StandardTransform
Transform: Compose(
               Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
           )
------------------------
TARGETS BEFORE SUB:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
TARGETS AFTER SUB:  [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6]
[6, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
1921
<class 'dataset.ImageNette'>
Dataset ImageNette
    Number of datapoints: 1921
    Root location: /g100_work/EIRI_E_POLIMI/rcasciot/neuromodAI/SoftHebb-main/Training/data/imagenette2-160/train
    Split: train
    StandardTransform
Transform: Compose(
               Resize(size=(160, 160), interpolation=bilinear, max_size=None, antialias=warn)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
------------------------
INDICES:  1921
IMAGE SIZE: torch.Size([32, 3, 160, 160])
Accuracy of the network on the 1st dataset: 78.562 %
Test loss on the 1st dataset: 9.588

