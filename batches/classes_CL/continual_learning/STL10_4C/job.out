--------------- /leonardo/prod/opt/modulefiles/deeplrn/libraries ---------------
cineca-ai/3.0.0  cineca-ai/4.0.0  cineca-ai/4.1.1(default)  
cineca-ai/3.0.1  cineca-ai/4.1.0  cineca-ai/4.3.0           

Key:
(symbolic-version)  
BLOCKS:  {'b0': {'arch': 'CNN', 'preset': 'softkrotov-c96-k5-p2-s1-d1-b0-t1-lr0.08-lp0.5-e0', 'operation': 'batchnorm2d', 'num': 0, 'batch_norm': False, 'pool': {'type': 'avg', 'kernel_size': 4, 'stride': 2, 'padding': 1}, 'activation': {'function': 'triangle', 'param': 0.7}, 'resume': None, 'layer': {'arch': 'CNN', 'nb_train': None, 'lr': 0.08, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 1.0, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 2, 'weight_init': 'positive', 'weight_init_range': 2, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 96, 'kernel_size': 5}}, 'b1': {'arch': 'CNN', 'preset': 'softkrotov-c384-k3-p1-s1-d1-b0-t0.65-lr0.005-lp0.5-e0', 'operation': 'batchnorm2d', 'num': 1, 'batch_norm': False, 'pool': {'type': 'max', 'kernel_size': 4, 'stride': 2, 'padding': 1}, 'activation': {'function': 'triangle', 'param': 0.7}, 'resume': None, 'layer': {'arch': 'CNN', 'nb_train': None, 'lr': 0.005, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.65, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'positive', 'weight_init_range': 2, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 384, 'kernel_size': 3}}, 'b2': {'arch': 'CNN', 'preset': 'softkrotov-c1536-k3-p1-s1-d1-b0-t0.45-lr0.01-lp0.5-e0', 'operation': 'batchnorm2d', 'num': 2, 'batch_norm': False, 'pool': {'type': 'avg', 'kernel_size': 4, 'stride': 2, 'padding': 1}, 'activation': {'function': 'triangle', 'param': 1.4}, 'resume': None, 'layer': {'arch': 'CNN', 'nb_train': None, 'lr': 0.01, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.45, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'positive', 'weight_init_range': 2, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 1536, 'kernel_size': 3}}, 'b3': {'arch': 'CNN', 'preset': 'softkrotov-c6144-k3-p1-s1-d1-b0-t0.25-lr0.01-lp0.5-e0', 'operation': 'batchnorm2d', 'num': 3, 'batch_norm': False, 'pool': {'type': 'avg', 'kernel_size': 2, 'stride': 2, 'padding': 0}, 'activation': {'function': 'triangle', 'param': 1}, 'resume': None, 'layer': {'arch': 'CNN', 'nb_train': None, 'lr': 0.01, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.25, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'positive', 'weight_init_range': 2, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 6144, 'kernel_size': 3}}, 'b4': {'arch': 'MLP', 'preset': 'BP-c10', 'operation': 'flatten', 'num': 4, 'att_dropout': None, 'dropout': 0.5, 'layer': {'arch': 'MLP', 'lr': 0.05, 'adaptive': True, 'lr_sup': 0.001, 'speed': 0.4, 'lr_div': 100, 'lebesgue_p': 2, 't_invert': 10, 'beta': 0.01, 'power': 4.5, 'ranking_param': 3, 'delta': 0.1, 'hebbian': False, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'lr_bias': 600, 'softness': 'soft', 'soft_activation_fn': 'exp', 'plasticity': 'SoftHebb', 'metric_mode': 'unsupervised', 'weight_init': 'positive', 'weight_init_range': 0.25, 'weight_init_offset': 0, 'weight_decay': 0, 'radius': 10, 'power_lr': 0.2, 'out_channels': 10}, 'pool': None, 'activation': None}}
CL:  True
{'name': 'STL10', 'noise_std': 0, 'channels': 3, 'width': 96, 'height': 96, 'validation_split': 0.2, 'training_sample': 5000, 'testing_sample': 10000, 'out_channels': 10, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 32, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 50, 'print_freq': 10, 'validation': False, 'continual_learning': True}
CL:  True
{'name': 'STL10', 'noise_std': 0, 'channels': 3, 'width': 96, 'height': 96, 'validation_split': 0.2, 'training_sample': 5000, 'testing_sample': 10000, 'out_channels': 10, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 32, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 1, 'print_freq': 1, 'validation': False, 'continual_learning': True}
SEED:  0
block 0, size : 96 48 48
range = 2.886751345948129
block 1, size : 384 24 24
range = 0.8505172717997146
block 2, size : 1536 12 12
range = 0.4252586358998573
block 3, size : 6144 6 6
range = 0.21262931794992865
range = 0.036828478186799345
The device used will be: 
True
cuda:0
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.08, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 1.0, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 2, 'weight_init': 'normal', 'weight_init_range': 2.886751345948129, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 96, 'kernel_size': 5, 'in_channels': 3, 'lr_scheduler': {'lr': 0.08, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0064, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.5}}
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.005, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.65, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'normal', 'weight_init_range': 0.8505172717997146, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 384, 'kernel_size': 3, 'in_channels': 96, 'lr_scheduler': {'lr': 0.005, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0064, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.5}}
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.01, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.45, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'normal', 'weight_init_range': 0.4252586358998573, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 1536, 'kernel_size': 3, 'in_channels': 384, 'lr_scheduler': {'lr': 0.01, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0064, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.5}}
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.01, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.25, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'normal', 'weight_init_range': 0.21262931794992865, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 6144, 'kernel_size': 3, 'in_channels': 1536, 'lr_scheduler': {'lr': 0.01, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0064, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.5}}
CONFIG: {'arch': 'MLP', 'lr': 0.05, 'adaptive': True, 'lr_sup': 0.001, 'speed': 0.4, 'lr_div': 100, 'lebesgue_p': 2, 't_invert': 10, 'beta': 0.01, 'power': 4.5, 'ranking_param': 3, 'delta': 0.1, 'hebbian': False, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'lr_bias': 600, 'softness': 'soft', 'soft_activation_fn': 'exp', 'plasticity': 'SoftHebb', 'metric_mode': 'unsupervised', 'weight_init': 'positive', 'weight_init_range': 0.036828478186799345, 'weight_init_offset': 0, 'weight_decay': 0, 'radius': 10, 'power_lr': 0.2, 'out_channels': 4, 'in_channels': 221184, 'old_channels': 6144, 'lr_scheduler': {'decay': 'cste', 'lr': 0.1}}

 ----- Architecture Block BatchNorm2dSK3962(5, 5)1.0reflect, number 0 -----
- BatchNorm2d(3, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(3, 96, lebesgue_p=2, pruning=0, kernel_size=(5, 5), bias=False, padding_mode=reflect, t_invert=1.0, bias=False, lr_bias=0.1, ranking_param=3, delta=2, activation=exp)
- Triangle(power=0.7)
- AvgPool2d(kernel_size=4, stride=2, padding=1)

 ----- Architecture Block BatchNorm2dSK963842(3, 3)0.6499999761581421reflect, number 1 -----
- BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(96, 384, lebesgue_p=2, pruning=0, kernel_size=(3, 3), bias=False, padding_mode=reflect, t_invert=0.6499999761581421, bias=False, lr_bias=0.1538, ranking_param=3, delta=2, activation=exp)
- Triangle(power=0.7)
- MaxPool2d(kernel_size=4, stride=2, padding=1, dilation=1, ceil_mode=False)

 ----- Architecture Block BatchNorm2dSK38415362(3, 3)0.44999998807907104reflect, number 2 -----
- BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(384, 1536, lebesgue_p=2, pruning=0, kernel_size=(3, 3), bias=False, padding_mode=reflect, t_invert=0.44999998807907104, bias=False, lr_bias=0.2222, ranking_param=3, delta=2, activation=exp)
- Triangle(power=1.4)
- AvgPool2d(kernel_size=4, stride=2, padding=1)

 ----- Architecture Block BatchNorm2dSK153661442(3, 3)0.25reflect, number 3 -----
- BatchNorm2d(1536, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(1536, 6144, lebesgue_p=2, pruning=0, kernel_size=(3, 3), bias=False, padding_mode=reflect, t_invert=0.25, bias=False, lr_bias=0.4, ranking_param=3, delta=2, activation=exp)
- Triangle(power=1)
- AvgPool2d(kernel_size=2, stride=2, padding=0)

 ----- Architecture Block FlattenDropout(p=0.5, inplace=False)Linear(in_, number 4 -----
- Flatten(start_dim=1, end_dim=-1)
- Dropout(p=0.5, inplace=False)
- Linear(in_features=221184, out_features=4, bias=True)

 ********** Hebbian Unsupervised learning of blocks [0] **********
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
TARGETS BEFORE SUB:  tensor([6, 7, 5, 0, 3, 1, 1, 1, 4, 4, 0, 0, 4, 0, 1, 5, 4, 9, 0, 6],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([1, 1, 1, 4, 4, 4, 1, 4, 9, 1, 1, 9, 4, 9, 1, 9, 4, 9, 1, 1],
       dtype=torch.uint8)
[1, 4, 8, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 1, 1, 1, 0, 1, 3, 0, 0, 3, 1, 3, 0, 3, 1, 3, 0, 0],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([1, 1, 9, 4, 8, 8, 4, 1, 1, 1, 8, 1, 1, 1, 1, 1, 4, 8, 1, 8],
       dtype=torch.uint8)
[1, 4, 8, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 3, 1, 2, 2, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 2, 0, 2],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([1, 1, 9, 4, 8, 8, 4, 1, 1, 1, 8, 1, 1, 1, 1, 1, 4, 8, 1, 8],
       dtype=torch.uint8)
[1, 4, 8, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 3, 1, 2, 2, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 2, 0, 2],
       dtype=torch.uint8)
------------------------
INDICES:  2000
IMAGE SIZE: torch.Size([32, 3, 96, 96])
SAVING FOLDER FOR UNSUP:  STL10_4C_CL
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 3.33e-01	time: 00:00:46	Acc_train 0.00	Acc_test 0.00	convergence: 2.40e+01	R1: 0	Info MB:0.000e+00/SB:0.000e+00/MW:-1.597e-02/SW:2.167e+00/MR:1.846e+01/SR:3.419e+00/MeD:2.798e+00/MaD:8.709e+00/MW:0.647/MAW:0.353
|      0 |       1 |       2 |       3 |       4 |       5 |       6 |      7 |       8 |       9 |      10 |      11 |      12 |     13 |      14 |      15 |      16 |     17 |      18 |      19 |      20 |      21 |      22 |      23 |     24 |      25 |      26 |      27 |      28 |      29 |
|--------+---------+---------+---------+---------+---------+---------+--------+---------+---------+---------+---------+---------+--------+---------+---------+---------+--------+---------+---------+---------+---------+---------+---------+--------+---------+---------+---------+---------+---------|
|   0.33 |   0.374 |   0.346 |   0.363 |   0.295 |   0.271 |   0.341 |   0.39 |   0.309 |   0.388 |   0.309 |   0.341 |   0.359 |   0.37 |   0.317 |   0.361 |   0.254 |   0.35 |   0.348 |   0.318 |   0.372 |   0.328 |   0.355 |   0.387 |   0.38 |   0.274 |   0.362 |   0.349 |   0.346 |   0.371 |
|  18.04 |  22.82  |  19.65  |  21.62  |  14.56  |  12.51  |  19.16  |  24.79 |  15.91  |  24.49  |  15.92  |  19.2   |  21.18  |  22.41 |  16.67  |  21.41  |  11.06  |  20.17 |  19.89  |  16.8   |  22.62  |  17.77  |  20.68  |  24.36  |  23.59 |  12.76  |  21.45  |  19.99  |  19.7   |  22.53  |
|   0.69 |   0.04  |   0.03  |   0.08  |   2.79  |   4.57  |   0.87  |   0.13 |   1.63  |   0.03  |   1.45  |   0.43  |   0.53  |   0.12 |   1.62  |   0.05  |   5.08  |   0.44 |   0.66  |   0.95  |   0.28  |   0.78  |   0.36  |   0.13  |   0.29 |   2.71  |   0.17  |   0.45  |   0.25  |   0.04  |
| nan    | nan     | nan     | nan     | nan     | nan     | nan     | nan    | nan     | nan     | nan     | nan     | nan     | nan    | nan     | nan     | nan     | nan    | nan     | nan     | nan     | nan     | nan     | nan     | nan    | nan     | nan     | nan     | nan     | nan     |
| nan    | nan     | nan     | nan     | nan     | nan     | nan     | nan    | nan     | nan     | nan     | nan     | nan     | nan    | nan     | nan     | nan     | nan    | nan     | nan     | nan     | nan     | nan     | nan     | nan    | nan     | nan     | nan     | nan     | nan     |
| nan    | nan     | nan     | nan     | nan     | nan     | nan     | nan    | nan     | nan     | nan     | nan     | nan     | nan    | nan     | nan     | nan     | nan    | nan     | nan     | nan     | nan     | nan     | nan     | nan    | nan     | nan     | nan     | nan     | nan     |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/leonardo_work/try24_antoniet/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/STL10_4C_CL/models

 ********** Hebbian Unsupervised learning of blocks [1] **********
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
TARGETS BEFORE SUB:  tensor([6, 7, 5, 0, 3, 1, 1, 1, 4, 4, 0, 0, 4, 0, 1, 5, 4, 9, 0, 6],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([1, 1, 1, 4, 4, 4, 1, 4, 9, 1, 1, 9, 4, 9, 1, 9, 4, 9, 1, 1],
       dtype=torch.uint8)
[1, 4, 8, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 1, 1, 1, 0, 1, 3, 0, 0, 3, 1, 3, 0, 3, 1, 3, 0, 0],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([1, 1, 9, 4, 8, 8, 4, 1, 1, 1, 8, 1, 1, 1, 1, 1, 4, 8, 1, 8],
       dtype=torch.uint8)
[1, 4, 8, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 3, 1, 2, 2, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 2, 0, 2],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([1, 1, 9, 4, 8, 8, 4, 1, 1, 1, 8, 1, 1, 1, 1, 1, 4, 8, 1, 8],
       dtype=torch.uint8)
[1, 4, 8, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 3, 1, 2, 2, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 2, 0, 2],
       dtype=torch.uint8)
------------------------
INDICES:  2000
IMAGE SIZE: torch.Size([32, 3, 96, 96])
SAVING FOLDER FOR UNSUP:  STL10_4C_CL
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 3.33e-01	time: 00:01:23	Acc_train 0.00	Acc_test 0.00	convergence: 2.40e+01	R1: 0	Info MB:0.000e+00/SB:0.000e+00/MW:-3.242e-03/SW:8.359e-01/MR:2.454e+01/SR:1.223e+00/MeD:7.579e-01/MaD:8.331e+00/MW:0.771/MAW:0.229
|        0 |        1 |        2 |        3 |        4 |       5 |        6 |        7 |        8 |        9 |       10 |       11 |       12 |       13 |       14 |       15 |       16 |       17 |       18 |       19 |       20 |       21 |       22 |       23 |       24 |       25 |       26 |       27 |       28 |       29 |
|----------+----------+----------+----------+----------+---------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------|
|   0.0247 |   0.0246 |   0.0242 |   0.0242 |   0.0228 |   0.025 |   0.0245 |   0.0251 |   0.0244 |   0.0242 |   0.0248 |   0.0241 |   0.0247 |   0.0246 |   0.0242 |   0.0243 |   0.0241 |   0.0238 |   0.0244 |   0.0248 |   0.0239 |   0.0248 |   0.0246 |   0.0247 |   0.0242 |   0.0239 |   0.0241 |   0.0242 |   0.0245 |   0.0251 |
|  25.42   |  25.12   |  24.49   |  24.34   |  21.8    |  25.95  |  24.92   |  26.23   |  24.88   |  24.38   |  25.62   |  24.3    |  25.48   |  25.15   |  24.49   |  24.56   |  24.21   |  23.75   |  24.8    |  25.57   |  23.78   |  25.69   |  25.13   |  25.42   |  24.37   |  23.82   |  24.14   |  24.48   |  24.98   |  26.14   |
|   0.03   |   0      |   0.01   |   0.01   |   2.05   |   0.17  |   0      |   0.02   |   0      |   0.12   |   0      |   0.05   |   0.1    |   0.06   |   0.01   |   0.03   |   0      |   0.64   |   0      |   0.08   |   0.09   |   0      |   0.03   |   0.03   |   0.17   |   0.3    |   0.88   |   0.02   |   0.05   |   0.01   |
| nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      |
| nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      |
| nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/leonardo_work/try24_antoniet/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/STL10_4C_CL/models

 ********** Hebbian Unsupervised learning of blocks [2] **********
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
TARGETS BEFORE SUB:  tensor([6, 7, 5, 0, 3, 1, 1, 1, 4, 4, 0, 0, 4, 0, 1, 5, 4, 9, 0, 6],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([1, 1, 1, 4, 4, 4, 1, 4, 9, 1, 1, 9, 4, 9, 1, 9, 4, 9, 1, 1],
       dtype=torch.uint8)
[1, 4, 8, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 1, 1, 1, 0, 1, 3, 0, 0, 3, 1, 3, 0, 3, 1, 3, 0, 0],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([1, 1, 9, 4, 8, 8, 4, 1, 1, 1, 8, 1, 1, 1, 1, 1, 4, 8, 1, 8],
       dtype=torch.uint8)
[1, 4, 8, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 3, 1, 2, 2, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 2, 0, 2],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([1, 1, 9, 4, 8, 8, 4, 1, 1, 1, 8, 1, 1, 1, 1, 1, 4, 8, 1, 8],
       dtype=torch.uint8)
[1, 4, 8, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 3, 1, 2, 2, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 2, 0, 2],
       dtype=torch.uint8)
------------------------
INDICES:  2000
IMAGE SIZE: torch.Size([32, 3, 96, 96])
SAVING FOLDER FOR UNSUP:  STL10_4C_CL
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 4.90e-02	time: 00:02:02	Acc_train 0.00	Acc_test 0.00	convergence: 2.40e+01	R1: 0	Info MB:0.000e+00/SB:0.000e+00/MW:1.104e-04/SW:4.069e-01/MR:2.384e+01/SR:1.941e+00/MeD:1.357e+00/MaD:1.418e+01/MW:0.654/MAW:0.346
|       0 |        1 |        2 |        3 |        4 |        5 |        6 |       7 |        8 |       9 |       10 |       11 |       12 |       13 |       14 |       15 |       16 |       17 |       18 |       19 |       20 |      21 |       22 |       23 |       24 |       25 |      26 |       27 |       28 |       29 |
|---------+----------+----------+----------+----------+----------+----------+---------+----------+---------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+---------+----------+----------+----------+----------+---------+----------+----------+----------|
|   0.049 |   0.0491 |   0.0488 |   0.0489 |   0.0474 |   0.0467 |   0.0494 |   0.047 |   0.0482 |   0.049 |   0.0462 |   0.0494 |   0.0479 |   0.0411 |   0.0487 |   0.0485 |   0.0438 |   0.0496 |   0.0483 |   0.0492 |   0.0456 |   0.049 |   0.0453 |   0.0492 |   0.0473 |   0.0478 |   0.049 |   0.0493 |   0.0451 |   0.0488 |
|  25.01  |  25.15   |  24.81   |  24.87   |  23.48   |  22.77   |  25.37   |  23.13  |  24.23   |  24.97  |  22.31   |  25.37   |  23.96   |  17.87   |  24.71   |  24.52   |  20.23   |  25.61   |  24.34   |  25.23   |  21.82   |  25.04  |  21.54   |  25.17   |  23.33   |  23.83   |  25.02  |  25.28   |  21.36   |  24.86   |
|   0     |   0      |   0.02   |   0.03   |   0.05   |   0.11   |   0      |   0.05  |   0.04   |   0     |   0.1    |   0.01   |   0.05   |   0.35   |   0.01   |   0.03   |   0.23   |   0      |   0.01   |   0      |   0.16   |   0.01  |   0.19   |   0.01   |   0.05   |   0.03   |   0     |   0.02   |   0.17   |   0      |
| nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      |
| nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      |
| nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/leonardo_work/try24_antoniet/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/STL10_4C_CL/models

 ********** Hebbian Unsupervised learning of blocks [3] **********
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
TARGETS BEFORE SUB:  tensor([6, 7, 5, 0, 3, 1, 1, 1, 4, 4, 0, 0, 4, 0, 1, 5, 4, 9, 0, 6],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([1, 1, 1, 4, 4, 4, 1, 4, 9, 1, 1, 9, 4, 9, 1, 9, 4, 9, 1, 1],
       dtype=torch.uint8)
[1, 4, 8, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 1, 1, 1, 0, 1, 3, 0, 0, 3, 1, 3, 0, 3, 1, 3, 0, 0],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([1, 1, 9, 4, 8, 8, 4, 1, 1, 1, 8, 1, 1, 1, 1, 1, 4, 8, 1, 8],
       dtype=torch.uint8)
[1, 4, 8, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 3, 1, 2, 2, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 2, 0, 2],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([1, 1, 9, 4, 8, 8, 4, 1, 1, 1, 8, 1, 1, 1, 1, 1, 4, 8, 1, 8],
       dtype=torch.uint8)
[1, 4, 8, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 3, 1, 2, 2, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 2, 0, 2],
       dtype=torch.uint8)
------------------------
INDICES:  2000
IMAGE SIZE: torch.Size([32, 3, 96, 96])
SAVING FOLDER FOR UNSUP:  STL10_4C_CL
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 4.77e-02	time: 00:02:41	Acc_train 0.00	Acc_test 0.00	convergence: 2.38e+01	R1: 0	Info MB:0.000e+00/SB:0.000e+00/MW:-1.363e-05/SW:2.115e-01/MR:2.483e+01/SR:1.307e+00/MeD:4.730e-01/MaD:2.362e+01/MW:0.545/MAW:0.455
|        0 |        1 |        2 |        3 |        4 |        5 |        6 |       7 |        8 |        9 |       10 |       11 |       12 |       13 |       14 |       15 |       16 |       17 |      18 |       19 |       20 |       21 |       22 |       23 |       24 |       25 |       26 |      27 |       28 |      29 |
|----------+----------+----------+----------+----------+----------+----------+---------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+---------+----------+----------+----------+----------+----------+----------+----------+----------+---------+----------+---------|
|   0.0489 |   0.0493 |   0.0493 |   0.0494 |   0.0493 |   0.0491 |   0.0493 |   0.049 |   0.0432 |   0.0488 |   0.0491 |   0.0492 |   0.0488 |   0.0491 |   0.0493 |   0.0491 |   0.0491 |   0.0491 |   0.049 |   0.0492 |   0.0491 |   0.0486 |   0.0489 |   0.0491 |   0.0486 |   0.0489 |   0.0493 |   0.049 |   0.0493 |   0.049 |
|  24.9    |  25.27   |  25.28   |  25.36   |  25.32   |  25.15   |  25.34   |  24.97  |  19.65   |  24.83   |  25.11   |  25.2    |  24.86   |  25.12   |  25.33   |  25.13   |  25.12   |  25.15   |  25.02  |  25.22   |  25.11   |  24.59   |  24.91   |  25.16   |  24.63   |  24.91   |  25.26   |  25.03  |  25.3    |  25.02  |
|   0      |   0      |   0      |   0      |   0      |   0.02   |   0.01   |   0     |   0.18   |   0      |   0.01   |   0.01   |   0      |   0      |   0.01   |   0      |   0      |   0      |   0     |   0      |   0      |   0.02   |   0      |   0      |   0.01   |   0.01   |   0.01   |   0     |   0      |   0     |
| nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan     |
| nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan     |
| nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan     |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/leonardo_work/try24_antoniet/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/STL10_4C_CL/models

 ********** Supervised learning of blocks [4] **********
SAVING FOLDER FOR SUP:  STL10_4C_CL
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
TARGETS BEFORE SUB:  tensor([6, 7, 5, 0, 3, 1, 1, 1, 4, 4, 0, 0, 4, 0, 1, 5, 4, 9, 0, 6],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([1, 1, 1, 4, 4, 4, 1, 4, 9, 1, 1, 9, 4, 9, 1, 9, 4, 9, 1, 1],
       dtype=torch.uint8)
[1, 4, 8, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 1, 1, 1, 0, 1, 3, 0, 0, 3, 1, 3, 0, 3, 1, 3, 0, 0],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([1, 1, 9, 4, 8, 8, 4, 1, 1, 1, 8, 1, 1, 1, 1, 1, 4, 8, 1, 8],
       dtype=torch.uint8)
[1, 4, 8, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 3, 1, 2, 2, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 2, 0, 2],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([1, 1, 9, 4, 8, 8, 4, 1, 1, 1, 8, 1, 1, 1, 1, 1, 4, 8, 1, 8],
       dtype=torch.uint8)
[1, 4, 8, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 3, 1, 2, 2, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 2, 0, 2],
       dtype=torch.uint8)
------------------------
INDICES:  2000
IMAGE SIZE: torch.Size([32, 3, 96, 96])
Epoch: [1/50]	lr: 1.00e-03	time: 00:03:21	Loss_train 8.26021	Acc_train 62.95	/	Loss_test 4.50620	Acc_test 70.72
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/leonardo_work/try24_antoniet/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/STL10_4C_CL/models
Epoch: [10/50]	lr: 1.00e-03	time: 00:03:32	Loss_train 1.41580	Acc_train 88.96	/	Loss_test 5.11933	Acc_test 78.62
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/leonardo_work/try24_antoniet/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/STL10_4C_CL/models
Epoch: [20/50]	lr: 2.50e-04	time: 00:03:44	Loss_train 0.07667	Acc_train 98.91	/	Loss_test 3.97526	Acc_test 82.38
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/leonardo_work/try24_antoniet/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/STL10_4C_CL/models
Epoch: [30/50]	lr: 1.25e-04	time: 00:03:56	Loss_train 0.00998	Acc_train 99.82	/	Loss_test 3.90494	Acc_test 82.12
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/leonardo_work/try24_antoniet/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/STL10_4C_CL/models
Epoch: [40/50]	lr: 3.13e-05	time: 00:04:08	Loss_train 0.00035	Acc_train 99.97	/	Loss_test 3.85665	Acc_test 82.03
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/leonardo_work/try24_antoniet/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/STL10_4C_CL/models
Epoch: [50/50]	lr: 7.81e-06	time: 00:04:20	Loss_train 0.00002	Acc_train 99.99	/	Loss_test 3.85857	Acc_test 82.25
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/leonardo_work/try24_antoniet/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/STL10_4C_CL/models
RESULT:  {'train_loss': 1.765886008797679e-05, 'train_acc': 99.99499917030334, 'test_loss': 3.8585662841796875, 'test_acc': 82.25, 'convergence': 23.83321189880371, 'R1': 0, 'dataset_sup': {'name': 'STL10', 'noise_std': 0, 'channels': 3, 'width': 96, 'height': 96, 'validation_split': 0.2, 'training_sample': 5000, 'testing_sample': 10000, 'out_channels': 4, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 32, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 50, 'print_freq': 10, 'validation': False, 'continual_learning': True, 'old_dataset_size': 96, 'n_classes': 4, 'selected_classes': [1, 4, 8, 9]}, 'dataset_unsup': {'name': 'STL10', 'noise_std': 0, 'channels': 3, 'width': 96, 'height': 96, 'validation_split': 0.2, 'training_sample': 5000, 'testing_sample': 10000, 'out_channels': 4, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 32, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 1, 'print_freq': 1, 'validation': False, 'continual_learning': True, 'old_dataset_size': 96, 'n_classes': 4, 'selected_classes': [1, 4, 8, 9]}, 'train_config': {'t0': {'blocks': [0], 'mode': 'unsupervised', 'lr': 0.08, 'nb_epoch': 1, 'batch_size': 32, 'print_freq': 1}, 't2': {'blocks': [1], 'mode': 'unsupervised', 'lr': 0.005, 'nb_epoch': 1, 'batch_size': 32, 'print_freq': 1}, 't4': {'blocks': [2], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 32, 'print_freq': 1}, 't6': {'blocks': [3], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 32, 'print_freq': 1}, 't8': {'blocks': [4], 'mode': 'supervised', 'lr': 0.001, 'nb_epoch': 50, 'batch_size': 32, 'print_freq': 10}}}
IN R1:  {'R1': {'train_loss': 1.765886008797679e-05, 'train_acc': 99.99499917030334, 'test_loss': 3.8585662841796875, 'test_acc': 82.25, 'convergence': 23.83321189880371, 'R1': 0, 'dataset_sup': {'name': 'STL10', 'noise_std': 0, 'channels': 3, 'width': 96, 'height': 96, 'validation_split': 0.2, 'training_sample': 5000, 'testing_sample': 10000, 'out_channels': 4, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 32, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 50, 'print_freq': 10, 'validation': False, 'continual_learning': True, 'old_dataset_size': 96, 'n_classes': 4, 'selected_classes': [1, 4, 8, 9]}, 'dataset_unsup': {'name': 'STL10', 'noise_std': 0, 'channels': 3, 'width': 96, 'height': 96, 'validation_split': 0.2, 'training_sample': 5000, 'testing_sample': 10000, 'out_channels': 4, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 32, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 1, 'print_freq': 1, 'validation': False, 'continual_learning': True, 'old_dataset_size': 96, 'n_classes': 4, 'selected_classes': [1, 4, 8, 9]}, 'train_config': {'t0': {'blocks': [0], 'mode': 'unsupervised', 'lr': 0.08, 'nb_epoch': 1, 'batch_size': 32, 'print_freq': 1}, 't2': {'blocks': [1], 'mode': 'unsupervised', 'lr': 0.005, 'nb_epoch': 1, 'batch_size': 32, 'print_freq': 1}, 't4': {'blocks': [2], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 32, 'print_freq': 1}, 't6': {'blocks': [3], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 32, 'print_freq': 1}, 't8': {'blocks': [4], 'mode': 'supervised', 'lr': 0.001, 'nb_epoch': 50, 'batch_size': 32, 'print_freq': 10}}}}
SEED:  0
block 0, size : 96 48 48
range = 2.886751345948129
block 1, size : 384 24 24
range = 0.8505172717997146
block 2, size : 1536 12 12
range = 0.4252586358998573
block 3, size : 6144 6 6
range = 0.21262931794992865
range = 0.036828478186799345
The device used will be: 
True
cuda:0
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.08, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 1.0, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 2, 'weight_init': 'normal', 'weight_init_range': 2.886751345948129, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 96, 'kernel_size': 5, 'in_channels': 3, 'lr_scheduler': {'lr': 0.08, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0064, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.5}}
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.005, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.65, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'normal', 'weight_init_range': 0.8505172717997146, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 384, 'kernel_size': 3, 'in_channels': 96, 'lr_scheduler': {'lr': 0.005, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0064, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.5}}
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.01, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.45, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'normal', 'weight_init_range': 0.4252586358998573, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 1536, 'kernel_size': 3, 'in_channels': 384, 'lr_scheduler': {'lr': 0.01, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0064, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.5}}
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.01, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.25, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'normal', 'weight_init_range': 0.21262931794992865, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 6144, 'kernel_size': 3, 'in_channels': 1536, 'lr_scheduler': {'lr': 0.01, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0064, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.5}}
CONFIG: {'arch': 'MLP', 'lr': 0.05, 'adaptive': True, 'lr_sup': 0.001, 'speed': 0.4, 'lr_div': 100, 'lebesgue_p': 2, 't_invert': 10, 'beta': 0.01, 'power': 4.5, 'ranking_param': 3, 'delta': 0.1, 'hebbian': False, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'lr_bias': 600, 'softness': 'soft', 'soft_activation_fn': 'exp', 'plasticity': 'SoftHebb', 'metric_mode': 'unsupervised', 'weight_init': 'positive', 'weight_init_range': 0.036828478186799345, 'weight_init_offset': 0, 'weight_decay': 0, 'radius': 10, 'power_lr': 0.2, 'out_channels': 4, 'in_channels': 221184, 'old_channels': 6144, 'lr_scheduler': {'decay': 'cste', 'lr': 0.1}}

 Model STL10_4C_CL loaded successfuly with best perf



 ----- Architecture Block BatchNorm2dSK3962(5, 5)1.0reflect, number 0 -----
- BatchNorm2d(3, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(3, 96, lebesgue_p=2, pruning=0, kernel_size=(5, 5), bias=False, padding_mode=reflect, t_invert=1.0, bias=False, lr_bias=0.1, ranking_param=3, delta=2, activation=exp)
- Triangle(power=0.7)
- AvgPool2d(kernel_size=4, stride=2, padding=1)

 ----- Architecture Block BatchNorm2dSK963842(3, 3)0.6499999761581421reflect, number 1 -----
- BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(96, 384, lebesgue_p=2, pruning=0, kernel_size=(3, 3), bias=False, padding_mode=reflect, t_invert=0.6499999761581421, bias=False, lr_bias=0.1538, ranking_param=3, delta=2, activation=exp)
- Triangle(power=0.7)
- MaxPool2d(kernel_size=4, stride=2, padding=1, dilation=1, ceil_mode=False)

 ----- Architecture Block BatchNorm2dSK38415362(3, 3)0.44999998807907104reflect, number 2 -----
- BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(384, 1536, lebesgue_p=2, pruning=0, kernel_size=(3, 3), bias=False, padding_mode=reflect, t_invert=0.44999998807907104, bias=False, lr_bias=0.2222, ranking_param=3, delta=2, activation=exp)
- Triangle(power=1.4)
- AvgPool2d(kernel_size=4, stride=2, padding=1)

 ----- Architecture Block BatchNorm2dSK153661442(3, 3)0.25reflect, number 3 -----
- BatchNorm2d(1536, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(1536, 6144, lebesgue_p=2, pruning=0, kernel_size=(3, 3), bias=False, padding_mode=reflect, t_invert=0.25, bias=False, lr_bias=0.4, ranking_param=3, delta=2, activation=exp)
- Triangle(power=1)
- AvgPool2d(kernel_size=2, stride=2, padding=0)

 ----- Architecture Block FlattenDropout(p=0.5, inplace=False)Linear(in_, number 4 -----
- Flatten(start_dim=1, end_dim=-1)
- Dropout(p=0.5, inplace=False)
- Linear(in_features=221184, out_features=4, bias=True)

 ********** Hebbian Unsupervised learning of blocks [0] **********
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
TARGETS BEFORE SUB:  tensor([6, 7, 5, 0, 3, 1, 1, 1, 4, 4, 0, 0, 4, 0, 1, 5, 4, 9, 0, 6],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([7, 5, 3, 5, 5, 3, 3, 2, 5, 5, 2, 7, 3, 7, 2, 7, 5, 3, 2, 5],
       dtype=torch.uint8)
[2, 3, 5, 7]
TARGETS AFTER CLEANER:  tensor([3, 2, 1, 2, 2, 1, 1, 0, 2, 2, 0, 3, 1, 3, 0, 3, 2, 1, 0, 2],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([5, 3, 7, 5, 7, 2, 2, 2, 5, 5, 5, 3, 7, 2, 3, 3, 7, 3, 7, 5],
       dtype=torch.uint8)
[2, 3, 5, 7]
TARGETS AFTER CLEANER:  tensor([2, 1, 3, 2, 3, 0, 0, 0, 2, 2, 2, 1, 3, 0, 1, 1, 3, 1, 3, 2],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([5, 3, 7, 5, 7, 2, 2, 2, 5, 5, 5, 3, 7, 2, 3, 3, 7, 3, 7, 5],
       dtype=torch.uint8)
[2, 3, 5, 7]
TARGETS AFTER CLEANER:  tensor([2, 1, 3, 2, 3, 0, 0, 0, 2, 2, 2, 1, 3, 0, 1, 1, 3, 1, 3, 2],
       dtype=torch.uint8)
------------------------
INDICES:  2000
IMAGE SIZE: torch.Size([32, 3, 96, 96])
SAVING FOLDER FOR UNSUP:  STL10_4C_CL
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 2.64e-01	time: 00:00:37	Acc_train 0.00	Acc_test 0.00	convergence: 2.40e+01	R1: 0	Info MB:0.000e+00/SB:0.000e+00/MW:-1.483e-02/SW:1.418e+00/MR:1.202e+01/SR:2.516e+00/MeD:2.057e+00/MaD:6.720e+00/MW:0.548/MAW:0.452
|       0 |       1 |       2 |       3 |       4 |       5 |       6 |       7 |       8 |       9 |      10 |      11 |      12 |      13 |      14 |      15 |      16 |      17 |      18 |      19 |      20 |      21 |      22 |     23 |      24 |      25 |      26 |      27 |      28 |      29 |
|---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+---------+--------+---------+---------+---------+---------+---------+---------|
|   0.242 |   0.319 |   0.292 |   0.299 |   0.224 |   0.205 |   0.273 |   0.311 |   0.231 |   0.337 |   0.251 |   0.259 |   0.281 |   0.294 |   0.264 |   0.296 |   0.188 |   0.267 |   0.259 |   0.248 |   0.295 |   0.266 |   0.275 |   0.31 |   0.295 |   0.226 |   0.297 |   0.281 |   0.266 |   0.316 |
|  10.17  |  16.94  |  14.37  |  15.01  |   8.81  |   7.59  |  12.67  |  16.12  |   9.36  |  18.74  |  10.81  |  11.52  |  13.32  |  14.48  |  11.88  |  14.7   |   6.54  |  12.15  |  11.52  |  10.64  |  14.58  |  12.02  |  12.85  |  16.05 |  14.64  |   8.97  |  14.82  |  13.3   |  12.08  |  16.56  |
|   0.62  |   0.32  |   0.29  |   0.43  |   1.24  |   2.84  |   0.64  |   0.51  |   1.1   |   0.24  |   0.86  |   0.54  |   0.54  |   0.4   |   2.02  |   0.39  |   2.58  |   0.54  |   0.67  |   1.16  |   0.58  |   0.9   |   0.48  |   0.42 |   0.48  |   3.2   |   0.48  |   0.63  |   0.45  |   0.33  |
| nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan    | nan     | nan     | nan     | nan     | nan     | nan     |
| nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan    | nan     | nan     | nan     | nan     | nan     | nan     |
| nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan     | nan    | nan     | nan     | nan     | nan     | nan     | nan     |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/leonardo_work/try24_antoniet/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/STL10_4C_CL/models

 ********** Hebbian Unsupervised learning of blocks [1] **********
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
TARGETS BEFORE SUB:  tensor([6, 7, 5, 0, 3, 1, 1, 1, 4, 4, 0, 0, 4, 0, 1, 5, 4, 9, 0, 6],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([7, 5, 3, 5, 5, 3, 3, 2, 5, 5, 2, 7, 3, 7, 2, 7, 5, 3, 2, 5],
       dtype=torch.uint8)
[2, 3, 5, 7]
TARGETS AFTER CLEANER:  tensor([3, 2, 1, 2, 2, 1, 1, 0, 2, 2, 0, 3, 1, 3, 0, 3, 2, 1, 0, 2],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([5, 3, 7, 5, 7, 2, 2, 2, 5, 5, 5, 3, 7, 2, 3, 3, 7, 3, 7, 5],
       dtype=torch.uint8)
[2, 3, 5, 7]
TARGETS AFTER CLEANER:  tensor([2, 1, 3, 2, 3, 0, 0, 0, 2, 2, 2, 1, 3, 0, 1, 1, 3, 1, 3, 2],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([5, 3, 7, 5, 7, 2, 2, 2, 5, 5, 5, 3, 7, 2, 3, 3, 7, 3, 7, 5],
       dtype=torch.uint8)
[2, 3, 5, 7]
TARGETS AFTER CLEANER:  tensor([2, 1, 3, 2, 3, 0, 0, 0, 2, 2, 2, 1, 3, 0, 1, 1, 3, 1, 3, 2],
       dtype=torch.uint8)
------------------------
INDICES:  2000
IMAGE SIZE: torch.Size([32, 3, 96, 96])
SAVING FOLDER FOR UNSUP:  STL10_4C_CL
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 2.64e-01	time: 00:01:15	Acc_train 0.00	Acc_test 0.00	convergence: 2.40e+01	R1: 0	Info MB:0.000e+00/SB:0.000e+00/MW:-3.063e-03/SW:8.034e-01/MR:2.350e+01/SR:2.287e+00/MeD:1.688e+00/MaD:1.160e+01/MW:0.716/MAW:0.284
|        0 |        1 |        2 |        3 |        4 |        5 |        6 |       7 |        8 |        9 |       10 |      11 |       12 |       13 |       14 |       15 |       16 |       17 |       18 |       19 |       20 |       21 |       22 |       23 |       24 |      25 |       26 |       27 |       28 |       29 |
|----------+----------+----------+----------+----------+----------+----------+---------+----------+----------+----------+---------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+---------+----------+----------+----------+----------|
|   0.0246 |   0.0246 |   0.0242 |   0.0241 |   0.0201 |   0.0241 |   0.0244 |   0.025 |   0.0244 |   0.0236 |   0.0248 |   0.024 |   0.0244 |   0.0244 |   0.0242 |   0.0241 |   0.0241 |   0.0223 |   0.0243 |   0.0242 |   0.0234 |   0.0248 |   0.0245 |   0.0247 |   0.0236 |   0.023 |   0.0214 |   0.0241 |   0.0241 |   0.0251 |
|  25.18   |  25.12   |  24.44   |  24.29   |  17.24   |  24.27   |  24.89   |  25.98  |  24.82   |  23.3    |  25.62   |  23.97  |  24.81   |  24.87   |  24.44   |  24.32   |  24.22   |  20.86   |  24.72   |  24.45   |  22.92   |  25.7    |  24.94   |  25.42   |  23.31   |  22.1   |  19.29   |  24.22   |  24.3    |  26.12   |
|   0.05   |   0      |   0.02   |   0.02   |   1.35   |   0.18   |   0.02   |   0.05  |   0.01   |   0.25   |   0      |   0.09  |   0.17   |   0.11   |   0.02   |   0.06   |   0      |   0.73   |   0.02   |   0.22   |   0.17   |   0      |   0.16   |   0.18   |   0.34   |   0.6   |   1.55   |   0.04   |   0.1    |   0.02   |
| nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      |
| nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      |
| nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/leonardo_work/try24_antoniet/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/STL10_4C_CL/models

 ********** Hebbian Unsupervised learning of blocks [2] **********
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
TARGETS BEFORE SUB:  tensor([6, 7, 5, 0, 3, 1, 1, 1, 4, 4, 0, 0, 4, 0, 1, 5, 4, 9, 0, 6],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([7, 5, 3, 5, 5, 3, 3, 2, 5, 5, 2, 7, 3, 7, 2, 7, 5, 3, 2, 5],
       dtype=torch.uint8)
[2, 3, 5, 7]
TARGETS AFTER CLEANER:  tensor([3, 2, 1, 2, 2, 1, 1, 0, 2, 2, 0, 3, 1, 3, 0, 3, 2, 1, 0, 2],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([5, 3, 7, 5, 7, 2, 2, 2, 5, 5, 5, 3, 7, 2, 3, 3, 7, 3, 7, 5],
       dtype=torch.uint8)
[2, 3, 5, 7]
TARGETS AFTER CLEANER:  tensor([2, 1, 3, 2, 3, 0, 0, 0, 2, 2, 2, 1, 3, 0, 1, 1, 3, 1, 3, 2],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([5, 3, 7, 5, 7, 2, 2, 2, 5, 5, 5, 3, 7, 2, 3, 3, 7, 3, 7, 5],
       dtype=torch.uint8)
[2, 3, 5, 7]
TARGETS AFTER CLEANER:  tensor([2, 1, 3, 2, 3, 0, 0, 0, 2, 2, 2, 1, 3, 0, 1, 1, 3, 1, 3, 2],
       dtype=torch.uint8)
------------------------
INDICES:  2000
IMAGE SIZE: torch.Size([32, 3, 96, 96])
SAVING FOLDER FOR UNSUP:  STL10_4C_CL
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 4.90e-02	time: 00:01:53	Acc_train 0.00	Acc_test 0.00	convergence: 2.40e+01	R1: 0	Info MB:0.000e+00/SB:0.000e+00/MW:1.369e-04/SW:3.768e-01/MR:2.193e+01/SR:3.113e+00/MeD:2.543e+00/MaD:1.630e+01/MW:0.612/MAW:0.388
|       0 |        1 |        2 |        3 |        4 |        5 |        6 |       7 |       8 |       9 |       10 |       11 |       12 |       13 |       14 |       15 |       16 |       17 |       18 |       19 |       20 |       21 |       22 |       23 |       24 |       25 |      26 |       27 |       28 |       29 |
|---------+----------+----------+----------+----------+----------+----------+---------+---------+---------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+---------+----------+----------+----------|
|   0.049 |   0.0487 |   0.0453 |   0.0469 |   0.0438 |   0.0445 |   0.0493 |   0.041 |   0.046 |   0.049 |   0.0411 |   0.0479 |   0.0437 |   0.0371 |   0.0475 |   0.0462 |   0.0401 |   0.0495 |   0.0474 |   0.0492 |   0.0422 |   0.0467 |   0.0413 |   0.0481 |   0.0443 |   0.0436 |   0.049 |   0.0458 |   0.0404 |   0.0486 |
|  25.04  |  24.72   |  21.51   |  22.97   |  20.17   |  20.8    |  25.29   |  17.77  |  22.17  |  25.02  |  17.92   |  23.95   |  20.07   |  14.76   |  23.6    |  22.33   |  17.06   |  25.54   |  23.48   |  25.21   |  18.81   |  22.83   |  18.04   |  24.16   |  20.66   |  20.03   |  25.03  |  21.98   |  17.3    |  24.66   |
|   0     |   0.01   |   0.11   |   0.08   |   0.08   |   0.07   |   0      |   0.09  |   0.07  |   0     |   0.1    |   0.04   |   0.09   |   0.11   |   0.06   |   0.04   |   0.18   |   0      |   0.02   |   0      |   0.11   |   0.04   |   0.19   |   0.03   |   0.07   |   0.07   |   0.01  |   0.07   |   0.08   |   0      |
| nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan     | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      |
| nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan     | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      |
| nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan     | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/leonardo_work/try24_antoniet/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/STL10_4C_CL/models

 ********** Hebbian Unsupervised learning of blocks [3] **********
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
TARGETS BEFORE SUB:  tensor([6, 7, 5, 0, 3, 1, 1, 1, 4, 4, 0, 0, 4, 0, 1, 5, 4, 9, 0, 6],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([7, 5, 3, 5, 5, 3, 3, 2, 5, 5, 2, 7, 3, 7, 2, 7, 5, 3, 2, 5],
       dtype=torch.uint8)
[2, 3, 5, 7]
TARGETS AFTER CLEANER:  tensor([3, 2, 1, 2, 2, 1, 1, 0, 2, 2, 0, 3, 1, 3, 0, 3, 2, 1, 0, 2],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([5, 3, 7, 5, 7, 2, 2, 2, 5, 5, 5, 3, 7, 2, 3, 3, 7, 3, 7, 5],
       dtype=torch.uint8)
[2, 3, 5, 7]
TARGETS AFTER CLEANER:  tensor([2, 1, 3, 2, 3, 0, 0, 0, 2, 2, 2, 1, 3, 0, 1, 1, 3, 1, 3, 2],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([5, 3, 7, 5, 7, 2, 2, 2, 5, 5, 5, 3, 7, 2, 3, 3, 7, 3, 7, 5],
       dtype=torch.uint8)
[2, 3, 5, 7]
TARGETS AFTER CLEANER:  tensor([2, 1, 3, 2, 3, 0, 0, 0, 2, 2, 2, 1, 3, 0, 1, 1, 3, 1, 3, 2],
       dtype=torch.uint8)
------------------------
INDICES:  2000
IMAGE SIZE: torch.Size([32, 3, 96, 96])
SAVING FOLDER FOR UNSUP:  STL10_4C_CL
INSIDE EVALUATE UNSUP
INSIDE EVALUATE UNSUP RETURNED 0,0
Epoch: [1/1]	lr: 4.56e-02	time: 00:02:32	Acc_train 0.00	Acc_test 0.00	convergence: 2.37e+01	R1: 1	Info MB:0.000e+00/SB:0.000e+00/MW:1.176e-06/SW:2.111e-01/MR:2.473e+01/SR:2.065e+00/MeD:9.399e-01/MaD:2.372e+01/MW:0.534/MAW:0.466
|       0 |        1 |        2 |        3 |        4 |        5 |        6 |       7 |        8 |        9 |       10 |       11 |       12 |       13 |       14 |       15 |       16 |       17 |       18 |       19 |       20 |       21 |      22 |       23 |       24 |       25 |       26 |      27 |       28 |       29 |
|---------+----------+----------+----------+----------+----------+----------+---------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------+---------+----------+----------+----------+----------+---------+----------+----------|
|   0.049 |   0.0497 |   0.0496 |   0.0495 |   0.0498 |   0.0493 |   0.0499 |   0.049 |   0.0391 |   0.0488 |   0.0495 |   0.0479 |   0.0489 |   0.0495 |   0.0491 |   0.0493 |   0.0493 |   0.0493 |   0.0491 |   0.0489 |   0.0492 |   0.0455 |   0.049 |   0.0483 |   0.0484 |   0.0481 |   0.0502 |   0.049 |   0.0495 |   0.0496 |
|  25     |  25.7    |  25.61   |  25.55   |  25.82   |  25.3    |  25.92   |  25.03  |  16.3    |  24.86   |  25.48   |  23.96   |  24.95   |  25.54   |  25.1    |  25.3    |  25.27   |  25.3    |  25.12   |  24.94   |  25.2    |  21.71   |  24.96  |  24.36   |  24.45   |  24.16   |  26.17   |  25.06  |  25.53   |  25.63   |
|   0.01  |   0.01   |   0      |   0      |   0.01   |   0.02   |   0.01   |   0     |   0.1    |   0      |   0.02   |   0.02   |   0      |   0      |   0.02   |   0      |   0.01   |   0      |   0      |   0      |   0      |   0.06   |   0     |   0.01   |   0      |   0.01   |   0.02   |   0     |   0      |   0      |
| nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan     | nan      | nan      |
| nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan     | nan      | nan      |
| nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan      | nan     | nan      | nan      | nan      | nan      | nan     | nan      | nan      |

STORING PATH IS NONEEEEEE
SAVING THE MODEL
/leonardo_work/try24_antoniet/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/STL10_4C_CL/models

 ********** Supervised learning of blocks [4] **********
SAVING FOLDER FOR SUP:  STL10_4C_CL
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
TARGETS BEFORE SUB:  tensor([6, 7, 5, 0, 3, 1, 1, 1, 4, 4, 0, 0, 4, 0, 1, 5, 4, 9, 0, 6],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([7, 5, 3, 5, 5, 3, 3, 2, 5, 5, 2, 7, 3, 7, 2, 7, 5, 3, 2, 5],
       dtype=torch.uint8)
[2, 3, 5, 7]
TARGETS AFTER CLEANER:  tensor([3, 2, 1, 2, 2, 1, 1, 0, 2, 2, 0, 3, 1, 3, 0, 3, 2, 1, 0, 2],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([5, 3, 7, 5, 7, 2, 2, 2, 5, 5, 5, 3, 7, 2, 3, 3, 7, 3, 7, 5],
       dtype=torch.uint8)
[2, 3, 5, 7]
TARGETS AFTER CLEANER:  tensor([2, 1, 3, 2, 3, 0, 0, 0, 2, 2, 2, 1, 3, 0, 1, 1, 3, 1, 3, 2],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([5, 3, 7, 5, 7, 2, 2, 2, 5, 5, 5, 3, 7, 2, 3, 3, 7, 3, 7, 5],
       dtype=torch.uint8)
[2, 3, 5, 7]
TARGETS AFTER CLEANER:  tensor([2, 1, 3, 2, 3, 0, 0, 0, 2, 2, 2, 1, 3, 0, 1, 1, 3, 1, 3, 2],
       dtype=torch.uint8)
------------------------
INDICES:  2000
IMAGE SIZE: torch.Size([32, 3, 96, 96])
Epoch: [1/50]	lr: 1.00e-03	time: 00:03:12	Loss_train 21.11223	Acc_train 45.50	/	Loss_test 11.34502	Acc_test 54.91
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/leonardo_work/try24_antoniet/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/STL10_4C_CL/models
Epoch: [10/50]	lr: 1.00e-03	time: 00:03:23	Loss_train 3.29962	Acc_train 80.84	/	Loss_test 7.77323	Acc_test 67.47
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/leonardo_work/try24_antoniet/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/STL10_4C_CL/models
Epoch: [20/50]	lr: 2.50e-04	time: 00:03:35	Loss_train 0.20119	Acc_train 97.08	/	Loss_test 6.70486	Acc_test 69.09
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/leonardo_work/try24_antoniet/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/STL10_4C_CL/models
Epoch: [30/50]	lr: 1.25e-04	time: 00:03:47	Loss_train 0.03481	Acc_train 99.23	/	Loss_test 6.39767	Acc_test 69.44
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/leonardo_work/try24_antoniet/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/STL10_4C_CL/models
Epoch: [40/50]	lr: 3.13e-05	time: 00:03:59	Loss_train 0.00524	Acc_train 99.80	/	Loss_test 6.40945	Acc_test 69.16
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/leonardo_work/try24_antoniet/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/STL10_4C_CL/models
Epoch: [50/50]	lr: 7.81e-06	time: 00:04:11	Loss_train 0.00765	Acc_train 99.76	/	Loss_test 6.34349	Acc_test 69.62
STORING PATH IS NONEEEEEE
SAVING THE MODEL
/leonardo_work/try24_antoniet/rcasciot/neuromodAI/SoftHebb-main/Training/results/hebb/result/network/STL10_4C_CL/models
RESULT:  {'train_loss': 0.007652507163584232, 'train_acc': 99.76000189781189, 'test_loss': 6.3434882164001465, 'test_acc': 69.625, 'convergence': 23.730575561523438, 'R1': 1, 'dataset_sup': {'name': 'STL10', 'noise_std': 0, 'channels': 3, 'width': 96, 'height': 96, 'validation_split': 0.2, 'training_sample': 5000, 'testing_sample': 10000, 'out_channels': 4, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 32, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 50, 'print_freq': 10, 'validation': False, 'continual_learning': True, 'old_dataset_size': 96, 'n_classes': 4, 'selected_classes': [2, 3, 5, 7]}, 'dataset_unsup': {'name': 'STL10', 'noise_std': 0, 'channels': 3, 'width': 96, 'height': 96, 'validation_split': 0.2, 'training_sample': 5000, 'testing_sample': 10000, 'out_channels': 4, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 32, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 1, 'print_freq': 1, 'validation': False, 'continual_learning': True, 'old_dataset_size': 96, 'n_classes': 4, 'selected_classes': [2, 3, 5, 7]}, 'train_config': {'t0': {'blocks': [0], 'mode': 'unsupervised', 'lr': 0.08, 'nb_epoch': 1, 'batch_size': 32, 'print_freq': 1}, 't2': {'blocks': [1], 'mode': 'unsupervised', 'lr': 0.005, 'nb_epoch': 1, 'batch_size': 32, 'print_freq': 1}, 't4': {'blocks': [2], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 32, 'print_freq': 1}, 't6': {'blocks': [3], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 32, 'print_freq': 1}, 't8': {'blocks': [4], 'mode': 'supervised', 'lr': 0.001, 'nb_epoch': 50, 'batch_size': 32, 'print_freq': 10}}}
IN R2:  {'R1': {'train_loss': 1.765886008797679e-05, 'train_acc': 99.99499917030334, 'test_loss': 3.8585662841796875, 'test_acc': 82.25, 'convergence': 23.83321189880371, 'R1': 0, 'dataset_sup': {'name': 'STL10', 'noise_std': 0, 'channels': 3, 'width': 96, 'height': 96, 'validation_split': 0.2, 'training_sample': 5000, 'testing_sample': 10000, 'out_channels': 4, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 32, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 50, 'print_freq': 10, 'validation': False, 'continual_learning': True, 'old_dataset_size': 96, 'n_classes': 4, 'selected_classes': [1, 4, 8, 9]}, 'dataset_unsup': {'name': 'STL10', 'noise_std': 0, 'channels': 3, 'width': 96, 'height': 96, 'validation_split': 0.2, 'training_sample': 5000, 'testing_sample': 10000, 'out_channels': 4, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 32, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 1, 'print_freq': 1, 'validation': False, 'continual_learning': True, 'old_dataset_size': 96, 'n_classes': 4, 'selected_classes': [1, 4, 8, 9]}, 'train_config': {'t0': {'blocks': [0], 'mode': 'unsupervised', 'lr': 0.08, 'nb_epoch': 1, 'batch_size': 32, 'print_freq': 1}, 't2': {'blocks': [1], 'mode': 'unsupervised', 'lr': 0.005, 'nb_epoch': 1, 'batch_size': 32, 'print_freq': 1}, 't4': {'blocks': [2], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 32, 'print_freq': 1}, 't6': {'blocks': [3], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 32, 'print_freq': 1}, 't8': {'blocks': [4], 'mode': 'supervised', 'lr': 0.001, 'nb_epoch': 50, 'batch_size': 32, 'print_freq': 10}}}, 'R2': {'train_loss': 0.007652507163584232, 'train_acc': 99.76000189781189, 'test_loss': 6.3434882164001465, 'test_acc': 69.625, 'convergence': 23.730575561523438, 'R1': 1, 'dataset_sup': {'name': 'STL10', 'noise_std': 0, 'channels': 3, 'width': 96, 'height': 96, 'validation_split': 0.2, 'training_sample': 5000, 'testing_sample': 10000, 'out_channels': 4, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 32, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 50, 'print_freq': 10, 'validation': False, 'continual_learning': True, 'old_dataset_size': 96, 'n_classes': 4, 'selected_classes': [2, 3, 5, 7]}, 'dataset_unsup': {'name': 'STL10', 'noise_std': 0, 'channels': 3, 'width': 96, 'height': 96, 'validation_split': 0.2, 'training_sample': 5000, 'testing_sample': 10000, 'out_channels': 4, 'num_workers': 0, 'seed': 0, 'shuffle': True, 'batch_size': 32, 'augmentation': False, 'zca_whitened': False, 'training_class': 'all', 'split': 'train', 'nb_epoch': 1, 'print_freq': 1, 'validation': False, 'continual_learning': True, 'old_dataset_size': 96, 'n_classes': 4, 'selected_classes': [2, 3, 5, 7]}, 'train_config': {'t0': {'blocks': [0], 'mode': 'unsupervised', 'lr': 0.08, 'nb_epoch': 1, 'batch_size': 32, 'print_freq': 1}, 't2': {'blocks': [1], 'mode': 'unsupervised', 'lr': 0.005, 'nb_epoch': 1, 'batch_size': 32, 'print_freq': 1}, 't4': {'blocks': [2], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 32, 'print_freq': 1}, 't6': {'blocks': [3], 'mode': 'unsupervised', 'lr': 0.01, 'nb_epoch': 1, 'batch_size': 32, 'print_freq': 1}, 't8': {'blocks': [4], 'mode': 'supervised', 'lr': 0.001, 'nb_epoch': 50, 'batch_size': 32, 'print_freq': 10}}}}
SEED:  0
block 0, size : 96 48 48
range = 2.886751345948129
block 1, size : 384 24 24
range = 0.8505172717997146
block 2, size : 1536 12 12
range = 0.4252586358998573
block 3, size : 6144 6 6
range = 0.21262931794992865
range = 0.036828478186799345
The device used will be: 
True
cuda:0
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.08, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 1.0, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 2, 'weight_init': 'normal', 'weight_init_range': 2.886751345948129, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 96, 'kernel_size': 5, 'in_channels': 3, 'lr_scheduler': {'lr': 0.08, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0064, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.5}}
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.005, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.65, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'normal', 'weight_init_range': 0.8505172717997146, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 384, 'kernel_size': 3, 'in_channels': 96, 'lr_scheduler': {'lr': 0.005, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0064, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.5}}
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.01, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.45, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'normal', 'weight_init_range': 0.4252586358998573, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 1536, 'kernel_size': 3, 'in_channels': 384, 'lr_scheduler': {'lr': 0.01, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0064, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.5}}
CONFIG: {'arch': 'CNN', 'nb_train': None, 'lr': 0.01, 'adaptive': True, 'lr_sup': 0.001, 'speed': 7, 'lr_div': 96, 'lebesgue_p': 2, 'padding_mode': 'reflect', 'pre_triangle': False, 'ranking_param': 3, 'delta': 2, 't_invert': 0.25, 'groups': 1, 'stride': 1, 'dilation': 1, 'beta': 1, 'power': 4.5, 'padding': 1, 'weight_init': 'normal', 'weight_init_range': 0.21262931794992865, 'weight_init_offset': 0, 'mask_thsd': 0, 'radius': 25, 'power_lr': 0.5, 'weight_decay': 0, 'soft_activation_fn': 'exp', 'hebbian': True, 'resume': None, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'softness': 'softkrotov', 'out_channels': 6144, 'kernel_size': 3, 'in_channels': 1536, 'lr_scheduler': {'lr': 0.01, 'adaptive': True, 'nb_epochs': 1, 'ratio': 0.0064, 'speed': 7, 'div': 96, 'decay': 'linear', 'power_lr': 0.5}}
CONFIG: {'arch': 'MLP', 'lr': 0.05, 'adaptive': True, 'lr_sup': 0.001, 'speed': 0.4, 'lr_div': 100, 'lebesgue_p': 2, 't_invert': 10, 'beta': 0.01, 'power': 4.5, 'ranking_param': 3, 'delta': 0.1, 'hebbian': False, 'add_bias': False, 'normalize_inp': False, 'lr_decay': 'linear', 'seed': 0, 'lr_bias': 600, 'softness': 'soft', 'soft_activation_fn': 'exp', 'plasticity': 'SoftHebb', 'metric_mode': 'unsupervised', 'weight_init': 'positive', 'weight_init_range': 0.036828478186799345, 'weight_init_offset': 0, 'weight_decay': 0, 'radius': 10, 'power_lr': 0.2, 'out_channels': 4, 'in_channels': 221184, 'old_channels': 6144, 'lr_scheduler': {'decay': 'cste', 'lr': 0.1}}

 Model STL10_4C_CL loaded successfuly with best perf



 ----- Architecture Block BatchNorm2dSK3962(5, 5)1.0reflect, number 0 -----
- BatchNorm2d(3, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(3, 96, lebesgue_p=2, pruning=0, kernel_size=(5, 5), bias=False, padding_mode=reflect, t_invert=1.0, bias=False, lr_bias=0.1, ranking_param=3, delta=2, activation=exp)
- Triangle(power=0.7)
- AvgPool2d(kernel_size=4, stride=2, padding=1)

 ----- Architecture Block BatchNorm2dSK963842(3, 3)0.6499999761581421reflect, number 1 -----
- BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(96, 384, lebesgue_p=2, pruning=0, kernel_size=(3, 3), bias=False, padding_mode=reflect, t_invert=0.6499999761581421, bias=False, lr_bias=0.1538, ranking_param=3, delta=2, activation=exp)
- Triangle(power=0.7)
- MaxPool2d(kernel_size=4, stride=2, padding=1, dilation=1, ceil_mode=False)

 ----- Architecture Block BatchNorm2dSK38415362(3, 3)0.44999998807907104reflect, number 2 -----
- BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(384, 1536, lebesgue_p=2, pruning=0, kernel_size=(3, 3), bias=False, padding_mode=reflect, t_invert=0.44999998807907104, bias=False, lr_bias=0.2222, ranking_param=3, delta=2, activation=exp)
- Triangle(power=1.4)
- AvgPool2d(kernel_size=4, stride=2, padding=1)

 ----- Architecture Block BatchNorm2dSK153661442(3, 3)0.25reflect, number 3 -----
- BatchNorm2d(1536, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
- HebbSoftKrotovConv2d(1536, 6144, lebesgue_p=2, pruning=0, kernel_size=(3, 3), bias=False, padding_mode=reflect, t_invert=0.25, bias=False, lr_bias=0.4, ranking_param=3, delta=2, activation=exp)
- Triangle(power=1)
- AvgPool2d(kernel_size=2, stride=2, padding=0)

 ----- Architecture Block FlattenDropout(p=0.5, inplace=False)Linear(in_, number 4 -----
- Flatten(start_dim=1, end_dim=-1)
- Dropout(p=0.5, inplace=False)
- Linear(in_features=221184, out_features=4, bias=True)
SEED:  0
BEFORE RESIZING
Files already downloaded and verified
AFTER RESIZING
Files already downloaded and verified
TARGETS BEFORE SUB:  tensor([6, 7, 5, 0, 3, 1, 1, 1, 4, 4, 0, 0, 4, 0, 1, 5, 4, 9, 0, 6],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([1, 1, 1, 4, 4, 4, 1, 4, 9, 1, 1, 9, 4, 9, 1, 9, 4, 9, 1, 1],
       dtype=torch.uint8)
[1, 4, 8, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 0, 1, 1, 1, 0, 1, 3, 0, 0, 3, 1, 3, 0, 3, 1, 3, 0, 0],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([1, 1, 9, 4, 8, 8, 4, 1, 1, 1, 8, 1, 1, 1, 1, 1, 4, 8, 1, 8],
       dtype=torch.uint8)
[1, 4, 8, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 3, 1, 2, 2, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 2, 0, 2],
       dtype=torch.uint8)
------------------------
TARGETS BEFORE SUB:  tensor([1, 5, 1, 6, 3, 9, 7, 4, 5, 8, 0, 6, 0, 8, 7, 6, 4, 6, 2, 2],
       dtype=torch.uint8)
TARGETS AFTER SUB:  tensor([1, 1, 9, 4, 8, 8, 4, 1, 1, 1, 8, 1, 1, 1, 1, 1, 4, 8, 1, 8],
       dtype=torch.uint8)
[1, 4, 8, 9]
TARGETS AFTER CLEANER:  tensor([0, 0, 3, 1, 2, 2, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 2, 0, 2],
       dtype=torch.uint8)
------------------------
INDICES:  2000
IMAGE SIZE: torch.Size([32, 3, 96, 96])
Accuracy of the network on the 1st dataset: 22.188 %
Test loss on the 1st dataset: 56.508

